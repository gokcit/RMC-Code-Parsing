

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 11:06:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.30
    60                           ; Generated 15/09/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F15345 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0119                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011C                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011D                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  018F                     	;# 
   150  0190                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  020C                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  020F                     	;# 
   158  020F                     	;# 
   159  0210                     	;# 
   160  0210                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  028C                     	;# 
   164  028C                     	;# 
   165  028D                     	;# 
   166  028D                     	;# 
   167  028E                     	;# 
   168  028F                     	;# 
   169  0290                     	;# 
   170  0291                     	;# 
   171  030C                     	;# 
   172  030C                     	;# 
   173  030D                     	;# 
   174  030E                     	;# 
   175  030F                     	;# 
   176  0310                     	;# 
   177  0310                     	;# 
   178  0311                     	;# 
   179  0312                     	;# 
   180  0313                     	;# 
   181  0314                     	;# 
   182  0314                     	;# 
   183  0315                     	;# 
   184  0316                     	;# 
   185  0318                     	;# 
   186  0318                     	;# 
   187  0319                     	;# 
   188  031A                     	;# 
   189  031C                     	;# 
   190  031C                     	;# 
   191  031D                     	;# 
   192  031E                     	;# 
   193  038C                     	;# 
   194  038C                     	;# 
   195  038D                     	;# 
   196  038E                     	;# 
   197  058C                     	;# 
   198  058C                     	;# 
   199  058D                     	;# 
   200  058E                     	;# 
   201  058F                     	;# 
   202  058F                     	;# 
   203  0590                     	;# 
   204  0591                     	;# 
   205  0592                     	;# 
   206  0593                     	;# 
   207  059C                     	;# 
   208  059C                     	;# 
   209  059D                     	;# 
   210  059D                     	;# 
   211  059E                     	;# 
   212  059F                     	;# 
   213  060C                     	;# 
   214  060D                     	;# 
   215  060E                     	;# 
   216  060F                     	;# 
   217  0610                     	;# 
   218  0611                     	;# 
   219  0612                     	;# 
   220  0613                     	;# 
   221  0614                     	;# 
   222  070C                     	;# 
   223  070D                     	;# 
   224  070E                     	;# 
   225  070F                     	;# 
   226  0710                     	;# 
   227  0711                     	;# 
   228  0712                     	;# 
   229  0713                     	;# 
   230  0716                     	;# 
   231  0717                     	;# 
   232  0718                     	;# 
   233  0719                     	;# 
   234  071A                     	;# 
   235  071B                     	;# 
   236  071C                     	;# 
   237  071D                     	;# 
   238  0796                     	;# 
   239  0797                     	;# 
   240  0798                     	;# 
   241  0799                     	;# 
   242  079A                     	;# 
   243  079B                     	;# 
   244  080C                     	;# 
   245  080D                     	;# 
   246  080E                     	;# 
   247  080F                     	;# 
   248  0810                     	;# 
   249  0811                     	;# 
   250  0812                     	;# 
   251  0813                     	;# 
   252  0814                     	;# 
   253  081A                     	;# 
   254  081A                     	;# 
   255  081B                     	;# 
   256  081C                     	;# 
   257  081C                     	;# 
   258  081D                     	;# 
   259  081E                     	;# 
   260  081F                     	;# 
   261  088C                     	;# 
   262  088D                     	;# 
   263  088E                     	;# 
   264  088F                     	;# 
   265  0890                     	;# 
   266  0891                     	;# 
   267  0892                     	;# 
   268  0893                     	;# 
   269  0895                     	;# 
   270  0896                     	;# 
   271  090C                     	;# 
   272  090E                     	;# 
   273  090F                     	;# 
   274  091F                     	;# 
   275  098F                     	;# 
   276  098F                     	;# 
   277  0990                     	;# 
   278  0991                     	;# 
   279  0992                     	;# 
   280  0993                     	;# 
   281  0994                     	;# 
   282  0995                     	;# 
   283  0996                     	;# 
   284  0997                     	;# 
   285  0A19                     	;# 
   286  0A19                     	;# 
   287  0A1A                     	;# 
   288  0A1A                     	;# 
   289  0A1B                     	;# 
   290  0A1B                     	;# 
   291  0A1B                     	;# 
   292  0A1C                     	;# 
   293  0A1C                     	;# 
   294  0A1D                     	;# 
   295  0A1D                     	;# 
   296  0A1E                     	;# 
   297  0A1E                     	;# 
   298  0A1F                     	;# 
   299  0A1F                     	;# 
   300  0A1F                     	;# 
   301  1E0F                     	;# 
   302  1E10                     	;# 
   303  1E11                     	;# 
   304  1E12                     	;# 
   305  1E13                     	;# 
   306  1E14                     	;# 
   307  1E15                     	;# 
   308  1E16                     	;# 
   309  1E17                     	;# 
   310  1E18                     	;# 
   311  1E19                     	;# 
   312  1E1A                     	;# 
   313  1E1B                     	;# 
   314  1E1C                     	;# 
   315  1E1D                     	;# 
   316  1E1E                     	;# 
   317  1E1F                     	;# 
   318  1E20                     	;# 
   319  1E21                     	;# 
   320  1E22                     	;# 
   321  1E23                     	;# 
   322  1E24                     	;# 
   323  1E25                     	;# 
   324  1E26                     	;# 
   325  1E27                     	;# 
   326  1E28                     	;# 
   327  1E29                     	;# 
   328  1E2A                     	;# 
   329  1E2B                     	;# 
   330  1E2C                     	;# 
   331  1E2D                     	;# 
   332  1E2E                     	;# 
   333  1E2F                     	;# 
   334  1E30                     	;# 
   335  1E31                     	;# 
   336  1E32                     	;# 
   337  1E33                     	;# 
   338  1E34                     	;# 
   339  1E35                     	;# 
   340  1E36                     	;# 
   341  1E37                     	;# 
   342  1E8F                     	;# 
   343  1E90                     	;# 
   344  1E91                     	;# 
   345  1E92                     	;# 
   346  1E93                     	;# 
   347  1E9C                     	;# 
   348  1EA1                     	;# 
   349  1EA2                     	;# 
   350  1EB1                     	;# 
   351  1EBB                     	;# 
   352  1EBC                     	;# 
   353  1EBD                     	;# 
   354  1EBE                     	;# 
   355  1EC3                     	;# 
   356  1EC5                     	;# 
   357  1EC6                     	;# 
   358  1EC7                     	;# 
   359  1ECB                     	;# 
   360  1ECC                     	;# 
   361  1ECD                     	;# 
   362  1ECE                     	;# 
   363  1F10                     	;# 
   364  1F11                     	;# 
   365  1F12                     	;# 
   366  1F13                     	;# 
   367  1F14                     	;# 
   368  1F15                     	;# 
   369  1F1C                     	;# 
   370  1F1D                     	;# 
   371  1F1E                     	;# 
   372  1F1F                     	;# 
   373  1F20                     	;# 
   374  1F21                     	;# 
   375  1F22                     	;# 
   376  1F23                     	;# 
   377  1F24                     	;# 
   378  1F25                     	;# 
   379  1F26                     	;# 
   380  1F27                     	;# 
   381  1F38                     	;# 
   382  1F39                     	;# 
   383  1F3A                     	;# 
   384  1F3B                     	;# 
   385  1F3C                     	;# 
   386  1F3D                     	;# 
   387  1F3E                     	;# 
   388  1F3F                     	;# 
   389  1F43                     	;# 
   390  1F44                     	;# 
   391  1F45                     	;# 
   392  1F46                     	;# 
   393  1F47                     	;# 
   394  1F48                     	;# 
   395  1F49                     	;# 
   396  1F4A                     	;# 
   397  1F4E                     	;# 
   398  1F4F                     	;# 
   399  1F50                     	;# 
   400  1F51                     	;# 
   401  1F52                     	;# 
   402  1F53                     	;# 
   403  1F54                     	;# 
   404  1F55                     	;# 
   405  1FE4                     	;# 
   406  1FE5                     	;# 
   407  1FE6                     	;# 
   408  1FE7                     	;# 
   409  1FE8                     	;# 
   410  1FE8                     	;# 
   411  1FE9                     	;# 
   412  1FEA                     	;# 
   413  1FEA                     	;# 
   414  1FEB                     	;# 
   415  1FED                     	;# 
   416  1FEE                     	;# 
   417  1FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0119                     	;# 
   446  0119                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011A                     	;# 
   450  011A                     	;# 
   451  011B                     	;# 
   452  011B                     	;# 
   453  011B                     	;# 
   454  011B                     	;# 
   455  011B                     	;# 
   456  011C                     	;# 
   457  011C                     	;# 
   458  011C                     	;# 
   459  011D                     	;# 
   460  011D                     	;# 
   461  011D                     	;# 
   462  011E                     	;# 
   463  011E                     	;# 
   464  011E                     	;# 
   465  011F                     	;# 
   466  011F                     	;# 
   467  011F                     	;# 
   468  011F                     	;# 
   469  011F                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  018E                     	;# 
   473  018F                     	;# 
   474  0190                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  020C                     	;# 
   478  020C                     	;# 
   479  020D                     	;# 
   480  020E                     	;# 
   481  020F                     	;# 
   482  020F                     	;# 
   483  0210                     	;# 
   484  0210                     	;# 
   485  0211                     	;# 
   486  0211                     	;# 
   487  028C                     	;# 
   488  028C                     	;# 
   489  028D                     	;# 
   490  028D                     	;# 
   491  028E                     	;# 
   492  028F                     	;# 
   493  0290                     	;# 
   494  0291                     	;# 
   495  030C                     	;# 
   496  030C                     	;# 
   497  030D                     	;# 
   498  030E                     	;# 
   499  030F                     	;# 
   500  0310                     	;# 
   501  0310                     	;# 
   502  0311                     	;# 
   503  0312                     	;# 
   504  0313                     	;# 
   505  0314                     	;# 
   506  0314                     	;# 
   507  0315                     	;# 
   508  0316                     	;# 
   509  0318                     	;# 
   510  0318                     	;# 
   511  0319                     	;# 
   512  031A                     	;# 
   513  031C                     	;# 
   514  031C                     	;# 
   515  031D                     	;# 
   516  031E                     	;# 
   517  038C                     	;# 
   518  038C                     	;# 
   519  038D                     	;# 
   520  038E                     	;# 
   521  058C                     	;# 
   522  058C                     	;# 
   523  058D                     	;# 
   524  058E                     	;# 
   525  058F                     	;# 
   526  058F                     	;# 
   527  0590                     	;# 
   528  0591                     	;# 
   529  0592                     	;# 
   530  0593                     	;# 
   531  059C                     	;# 
   532  059C                     	;# 
   533  059D                     	;# 
   534  059D                     	;# 
   535  059E                     	;# 
   536  059F                     	;# 
   537  060C                     	;# 
   538  060D                     	;# 
   539  060E                     	;# 
   540  060F                     	;# 
   541  0610                     	;# 
   542  0611                     	;# 
   543  0612                     	;# 
   544  0613                     	;# 
   545  0614                     	;# 
   546  070C                     	;# 
   547  070D                     	;# 
   548  070E                     	;# 
   549  070F                     	;# 
   550  0710                     	;# 
   551  0711                     	;# 
   552  0712                     	;# 
   553  0713                     	;# 
   554  0716                     	;# 
   555  0717                     	;# 
   556  0718                     	;# 
   557  0719                     	;# 
   558  071A                     	;# 
   559  071B                     	;# 
   560  071C                     	;# 
   561  071D                     	;# 
   562  0796                     	;# 
   563  0797                     	;# 
   564  0798                     	;# 
   565  0799                     	;# 
   566  079A                     	;# 
   567  079B                     	;# 
   568  080C                     	;# 
   569  080D                     	;# 
   570  080E                     	;# 
   571  080F                     	;# 
   572  0810                     	;# 
   573  0811                     	;# 
   574  0812                     	;# 
   575  0813                     	;# 
   576  0814                     	;# 
   577  081A                     	;# 
   578  081A                     	;# 
   579  081B                     	;# 
   580  081C                     	;# 
   581  081C                     	;# 
   582  081D                     	;# 
   583  081E                     	;# 
   584  081F                     	;# 
   585  088C                     	;# 
   586  088D                     	;# 
   587  088E                     	;# 
   588  088F                     	;# 
   589  0890                     	;# 
   590  0891                     	;# 
   591  0892                     	;# 
   592  0893                     	;# 
   593  0895                     	;# 
   594  0896                     	;# 
   595  090C                     	;# 
   596  090E                     	;# 
   597  090F                     	;# 
   598  091F                     	;# 
   599  098F                     	;# 
   600  098F                     	;# 
   601  0990                     	;# 
   602  0991                     	;# 
   603  0992                     	;# 
   604  0993                     	;# 
   605  0994                     	;# 
   606  0995                     	;# 
   607  0996                     	;# 
   608  0997                     	;# 
   609  0A19                     	;# 
   610  0A19                     	;# 
   611  0A1A                     	;# 
   612  0A1A                     	;# 
   613  0A1B                     	;# 
   614  0A1B                     	;# 
   615  0A1B                     	;# 
   616  0A1C                     	;# 
   617  0A1C                     	;# 
   618  0A1D                     	;# 
   619  0A1D                     	;# 
   620  0A1E                     	;# 
   621  0A1E                     	;# 
   622  0A1F                     	;# 
   623  0A1F                     	;# 
   624  0A1F                     	;# 
   625  1E0F                     	;# 
   626  1E10                     	;# 
   627  1E11                     	;# 
   628  1E12                     	;# 
   629  1E13                     	;# 
   630  1E14                     	;# 
   631  1E15                     	;# 
   632  1E16                     	;# 
   633  1E17                     	;# 
   634  1E18                     	;# 
   635  1E19                     	;# 
   636  1E1A                     	;# 
   637  1E1B                     	;# 
   638  1E1C                     	;# 
   639  1E1D                     	;# 
   640  1E1E                     	;# 
   641  1E1F                     	;# 
   642  1E20                     	;# 
   643  1E21                     	;# 
   644  1E22                     	;# 
   645  1E23                     	;# 
   646  1E24                     	;# 
   647  1E25                     	;# 
   648  1E26                     	;# 
   649  1E27                     	;# 
   650  1E28                     	;# 
   651  1E29                     	;# 
   652  1E2A                     	;# 
   653  1E2B                     	;# 
   654  1E2C                     	;# 
   655  1E2D                     	;# 
   656  1E2E                     	;# 
   657  1E2F                     	;# 
   658  1E30                     	;# 
   659  1E31                     	;# 
   660  1E32                     	;# 
   661  1E33                     	;# 
   662  1E34                     	;# 
   663  1E35                     	;# 
   664  1E36                     	;# 
   665  1E37                     	;# 
   666  1E8F                     	;# 
   667  1E90                     	;# 
   668  1E91                     	;# 
   669  1E92                     	;# 
   670  1E93                     	;# 
   671  1E9C                     	;# 
   672  1EA1                     	;# 
   673  1EA2                     	;# 
   674  1EB1                     	;# 
   675  1EBB                     	;# 
   676  1EBC                     	;# 
   677  1EBD                     	;# 
   678  1EBE                     	;# 
   679  1EC3                     	;# 
   680  1EC5                     	;# 
   681  1EC6                     	;# 
   682  1EC7                     	;# 
   683  1ECB                     	;# 
   684  1ECC                     	;# 
   685  1ECD                     	;# 
   686  1ECE                     	;# 
   687  1F10                     	;# 
   688  1F11                     	;# 
   689  1F12                     	;# 
   690  1F13                     	;# 
   691  1F14                     	;# 
   692  1F15                     	;# 
   693  1F1C                     	;# 
   694  1F1D                     	;# 
   695  1F1E                     	;# 
   696  1F1F                     	;# 
   697  1F20                     	;# 
   698  1F21                     	;# 
   699  1F22                     	;# 
   700  1F23                     	;# 
   701  1F24                     	;# 
   702  1F25                     	;# 
   703  1F26                     	;# 
   704  1F27                     	;# 
   705  1F38                     	;# 
   706  1F39                     	;# 
   707  1F3A                     	;# 
   708  1F3B                     	;# 
   709  1F3C                     	;# 
   710  1F3D                     	;# 
   711  1F3E                     	;# 
   712  1F3F                     	;# 
   713  1F43                     	;# 
   714  1F44                     	;# 
   715  1F45                     	;# 
   716  1F46                     	;# 
   717  1F47                     	;# 
   718  1F48                     	;# 
   719  1F49                     	;# 
   720  1F4A                     	;# 
   721  1F4E                     	;# 
   722  1F4F                     	;# 
   723  1F50                     	;# 
   724  1F51                     	;# 
   725  1F52                     	;# 
   726  1F53                     	;# 
   727  1F54                     	;# 
   728  1F55                     	;# 
   729  1FE4                     	;# 
   730  1FE5                     	;# 
   731  1FE6                     	;# 
   732  1FE7                     	;# 
   733  1FE8                     	;# 
   734  1FE8                     	;# 
   735  1FE9                     	;# 
   736  1FEA                     	;# 
   737  1FEA                     	;# 
   738  1FEB                     	;# 
   739  1FED                     	;# 
   740  1FEE                     	;# 
   741  1FEF                     	;# 
   742  0000                     	;# 
   743  0001                     	;# 
   744  0002                     	;# 
   745  0003                     	;# 
   746  0004                     	;# 
   747  0005                     	;# 
   748  0006                     	;# 
   749  0007                     	;# 
   750  0008                     	;# 
   751  0009                     	;# 
   752  000A                     	;# 
   753  000B                     	;# 
   754  000C                     	;# 
   755  000D                     	;# 
   756  000E                     	;# 
   757  0012                     	;# 
   758  0013                     	;# 
   759  0014                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  009B                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  009F                     	;# 
   769  0119                     	;# 
   770  0119                     	;# 
   771  0119                     	;# 
   772  011A                     	;# 
   773  011A                     	;# 
   774  011A                     	;# 
   775  011B                     	;# 
   776  011B                     	;# 
   777  011B                     	;# 
   778  011B                     	;# 
   779  011B                     	;# 
   780  011C                     	;# 
   781  011C                     	;# 
   782  011C                     	;# 
   783  011D                     	;# 
   784  011D                     	;# 
   785  011D                     	;# 
   786  011E                     	;# 
   787  011E                     	;# 
   788  011E                     	;# 
   789  011F                     	;# 
   790  011F                     	;# 
   791  011F                     	;# 
   792  011F                     	;# 
   793  011F                     	;# 
   794  018C                     	;# 
   795  018D                     	;# 
   796  018E                     	;# 
   797  018F                     	;# 
   798  0190                     	;# 
   799  0191                     	;# 
   800  0192                     	;# 
   801  020C                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  020E                     	;# 
   805  020F                     	;# 
   806  020F                     	;# 
   807  0210                     	;# 
   808  0210                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  028C                     	;# 
   812  028C                     	;# 
   813  028D                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  028F                     	;# 
   817  0290                     	;# 
   818  0291                     	;# 
   819  030C                     	;# 
   820  030C                     	;# 
   821  030D                     	;# 
   822  030E                     	;# 
   823  030F                     	;# 
   824  0310                     	;# 
   825  0310                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0314                     	;# 
   830  0314                     	;# 
   831  0315                     	;# 
   832  0316                     	;# 
   833  0318                     	;# 
   834  0318                     	;# 
   835  0319                     	;# 
   836  031A                     	;# 
   837  031C                     	;# 
   838  031C                     	;# 
   839  031D                     	;# 
   840  031E                     	;# 
   841  038C                     	;# 
   842  038C                     	;# 
   843  038D                     	;# 
   844  038E                     	;# 
   845  058C                     	;# 
   846  058C                     	;# 
   847  058D                     	;# 
   848  058E                     	;# 
   849  058F                     	;# 
   850  058F                     	;# 
   851  0590                     	;# 
   852  0591                     	;# 
   853  0592                     	;# 
   854  0593                     	;# 
   855  059C                     	;# 
   856  059C                     	;# 
   857  059D                     	;# 
   858  059D                     	;# 
   859  059E                     	;# 
   860  059F                     	;# 
   861  060C                     	;# 
   862  060D                     	;# 
   863  060E                     	;# 
   864  060F                     	;# 
   865  0610                     	;# 
   866  0611                     	;# 
   867  0612                     	;# 
   868  0613                     	;# 
   869  0614                     	;# 
   870  070C                     	;# 
   871  070D                     	;# 
   872  070E                     	;# 
   873  070F                     	;# 
   874  0710                     	;# 
   875  0711                     	;# 
   876  0712                     	;# 
   877  0713                     	;# 
   878  0716                     	;# 
   879  0717                     	;# 
   880  0718                     	;# 
   881  0719                     	;# 
   882  071A                     	;# 
   883  071B                     	;# 
   884  071C                     	;# 
   885  071D                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081A                     	;# 
   903  081B                     	;# 
   904  081C                     	;# 
   905  081C                     	;# 
   906  081D                     	;# 
   907  081E                     	;# 
   908  081F                     	;# 
   909  088C                     	;# 
   910  088D                     	;# 
   911  088E                     	;# 
   912  088F                     	;# 
   913  0890                     	;# 
   914  0891                     	;# 
   915  0892                     	;# 
   916  0893                     	;# 
   917  0895                     	;# 
   918  0896                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  098F                     	;# 
   924  098F                     	;# 
   925  0990                     	;# 
   926  0991                     	;# 
   927  0992                     	;# 
   928  0993                     	;# 
   929  0994                     	;# 
   930  0995                     	;# 
   931  0996                     	;# 
   932  0997                     	;# 
   933  0A19                     	;# 
   934  0A19                     	;# 
   935  0A1A                     	;# 
   936  0A1A                     	;# 
   937  0A1B                     	;# 
   938  0A1B                     	;# 
   939  0A1B                     	;# 
   940  0A1C                     	;# 
   941  0A1C                     	;# 
   942  0A1D                     	;# 
   943  0A1D                     	;# 
   944  0A1E                     	;# 
   945  0A1E                     	;# 
   946  0A1F                     	;# 
   947  0A1F                     	;# 
   948  0A1F                     	;# 
   949  1E0F                     	;# 
   950  1E10                     	;# 
   951  1E11                     	;# 
   952  1E12                     	;# 
   953  1E13                     	;# 
   954  1E14                     	;# 
   955  1E15                     	;# 
   956  1E16                     	;# 
   957  1E17                     	;# 
   958  1E18                     	;# 
   959  1E19                     	;# 
   960  1E1A                     	;# 
   961  1E1B                     	;# 
   962  1E1C                     	;# 
   963  1E1D                     	;# 
   964  1E1E                     	;# 
   965  1E1F                     	;# 
   966  1E20                     	;# 
   967  1E21                     	;# 
   968  1E22                     	;# 
   969  1E23                     	;# 
   970  1E24                     	;# 
   971  1E25                     	;# 
   972  1E26                     	;# 
   973  1E27                     	;# 
   974  1E28                     	;# 
   975  1E29                     	;# 
   976  1E2A                     	;# 
   977  1E2B                     	;# 
   978  1E2C                     	;# 
   979  1E2D                     	;# 
   980  1E2E                     	;# 
   981  1E2F                     	;# 
   982  1E30                     	;# 
   983  1E31                     	;# 
   984  1E32                     	;# 
   985  1E33                     	;# 
   986  1E34                     	;# 
   987  1E35                     	;# 
   988  1E36                     	;# 
   989  1E37                     	;# 
   990  1E8F                     	;# 
   991  1E90                     	;# 
   992  1E91                     	;# 
   993  1E92                     	;# 
   994  1E93                     	;# 
   995  1E9C                     	;# 
   996  1EA1                     	;# 
   997  1EA2                     	;# 
   998  1EB1                     	;# 
   999  1EBB                     	;# 
  1000  1EBC                     	;# 
  1001  1EBD                     	;# 
  1002  1EBE                     	;# 
  1003  1EC3                     	;# 
  1004  1EC5                     	;# 
  1005  1EC6                     	;# 
  1006  1EC7                     	;# 
  1007  1ECB                     	;# 
  1008  1ECC                     	;# 
  1009  1ECD                     	;# 
  1010  1ECE                     	;# 
  1011  1F10                     	;# 
  1012  1F11                     	;# 
  1013  1F12                     	;# 
  1014  1F13                     	;# 
  1015  1F14                     	;# 
  1016  1F15                     	;# 
  1017  1F1C                     	;# 
  1018  1F1D                     	;# 
  1019  1F1E                     	;# 
  1020  1F1F                     	;# 
  1021  1F20                     	;# 
  1022  1F21                     	;# 
  1023  1F22                     	;# 
  1024  1F23                     	;# 
  1025  1F24                     	;# 
  1026  1F25                     	;# 
  1027  1F26                     	;# 
  1028  1F27                     	;# 
  1029  1F38                     	;# 
  1030  1F39                     	;# 
  1031  1F3A                     	;# 
  1032  1F3B                     	;# 
  1033  1F3C                     	;# 
  1034  1F3D                     	;# 
  1035  1F3E                     	;# 
  1036  1F3F                     	;# 
  1037  1F43                     	;# 
  1038  1F44                     	;# 
  1039  1F45                     	;# 
  1040  1F46                     	;# 
  1041  1F47                     	;# 
  1042  1F48                     	;# 
  1043  1F49                     	;# 
  1044  1F4A                     	;# 
  1045  1F4E                     	;# 
  1046  1F4F                     	;# 
  1047  1F50                     	;# 
  1048  1F51                     	;# 
  1049  1F52                     	;# 
  1050  1F53                     	;# 
  1051  1F54                     	;# 
  1052  1F55                     	;# 
  1053  1FE4                     	;# 
  1054  1FE5                     	;# 
  1055  1FE6                     	;# 
  1056  1FE7                     	;# 
  1057  1FE8                     	;# 
  1058  1FE8                     	;# 
  1059  1FE9                     	;# 
  1060  1FEA                     	;# 
  1061  1FEA                     	;# 
  1062  1FEB                     	;# 
  1063  1FED                     	;# 
  1064  1FEE                     	;# 
  1065  1FEF                     	;# 
  1066  0000                     	;# 
  1067  0001                     	;# 
  1068  0002                     	;# 
  1069  0003                     	;# 
  1070  0004                     	;# 
  1071  0005                     	;# 
  1072  0006                     	;# 
  1073  0007                     	;# 
  1074  0008                     	;# 
  1075  0009                     	;# 
  1076  000A                     	;# 
  1077  000B                     	;# 
  1078  000C                     	;# 
  1079  000D                     	;# 
  1080  000E                     	;# 
  1081  0012                     	;# 
  1082  0013                     	;# 
  1083  0014                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  009F                     	;# 
  1093  0119                     	;# 
  1094  0119                     	;# 
  1095  0119                     	;# 
  1096  011A                     	;# 
  1097  011A                     	;# 
  1098  011A                     	;# 
  1099  011B                     	;# 
  1100  011B                     	;# 
  1101  011B                     	;# 
  1102  011B                     	;# 
  1103  011B                     	;# 
  1104  011C                     	;# 
  1105  011C                     	;# 
  1106  011C                     	;# 
  1107  011D                     	;# 
  1108  011D                     	;# 
  1109  011D                     	;# 
  1110  011E                     	;# 
  1111  011E                     	;# 
  1112  011E                     	;# 
  1113  011F                     	;# 
  1114  011F                     	;# 
  1115  011F                     	;# 
  1116  011F                     	;# 
  1117  011F                     	;# 
  1118  018C                     	;# 
  1119  018D                     	;# 
  1120  018E                     	;# 
  1121  018F                     	;# 
  1122  0190                     	;# 
  1123  0191                     	;# 
  1124  0192                     	;# 
  1125  020C                     	;# 
  1126  020C                     	;# 
  1127  020D                     	;# 
  1128  020E                     	;# 
  1129  020F                     	;# 
  1130  020F                     	;# 
  1131  0210                     	;# 
  1132  0210                     	;# 
  1133  0211                     	;# 
  1134  0211                     	;# 
  1135  028C                     	;# 
  1136  028C                     	;# 
  1137  028D                     	;# 
  1138  028D                     	;# 
  1139  028E                     	;# 
  1140  028F                     	;# 
  1141  0290                     	;# 
  1142  0291                     	;# 
  1143  030C                     	;# 
  1144  030C                     	;# 
  1145  030D                     	;# 
  1146  030E                     	;# 
  1147  030F                     	;# 
  1148  0310                     	;# 
  1149  0310                     	;# 
  1150  0311                     	;# 
  1151  0312                     	;# 
  1152  0313                     	;# 
  1153  0314                     	;# 
  1154  0314                     	;# 
  1155  0315                     	;# 
  1156  0316                     	;# 
  1157  0318                     	;# 
  1158  0318                     	;# 
  1159  0319                     	;# 
  1160  031A                     	;# 
  1161  031C                     	;# 
  1162  031C                     	;# 
  1163  031D                     	;# 
  1164  031E                     	;# 
  1165  038C                     	;# 
  1166  038C                     	;# 
  1167  038D                     	;# 
  1168  038E                     	;# 
  1169  058C                     	;# 
  1170  058C                     	;# 
  1171  058D                     	;# 
  1172  058E                     	;# 
  1173  058F                     	;# 
  1174  058F                     	;# 
  1175  0590                     	;# 
  1176  0591                     	;# 
  1177  0592                     	;# 
  1178  0593                     	;# 
  1179  059C                     	;# 
  1180  059C                     	;# 
  1181  059D                     	;# 
  1182  059D                     	;# 
  1183  059E                     	;# 
  1184  059F                     	;# 
  1185  060C                     	;# 
  1186  060D                     	;# 
  1187  060E                     	;# 
  1188  060F                     	;# 
  1189  0610                     	;# 
  1190  0611                     	;# 
  1191  0612                     	;# 
  1192  0613                     	;# 
  1193  0614                     	;# 
  1194  070C                     	;# 
  1195  070D                     	;# 
  1196  070E                     	;# 
  1197  070F                     	;# 
  1198  0710                     	;# 
  1199  0711                     	;# 
  1200  0712                     	;# 
  1201  0713                     	;# 
  1202  0716                     	;# 
  1203  0717                     	;# 
  1204  0718                     	;# 
  1205  0719                     	;# 
  1206  071A                     	;# 
  1207  071B                     	;# 
  1208  071C                     	;# 
  1209  071D                     	;# 
  1210  0796                     	;# 
  1211  0797                     	;# 
  1212  0798                     	;# 
  1213  0799                     	;# 
  1214  079A                     	;# 
  1215  079B                     	;# 
  1216  080C                     	;# 
  1217  080D                     	;# 
  1218  080E                     	;# 
  1219  080F                     	;# 
  1220  0810                     	;# 
  1221  0811                     	;# 
  1222  0812                     	;# 
  1223  0813                     	;# 
  1224  0814                     	;# 
  1225  081A                     	;# 
  1226  081A                     	;# 
  1227  081B                     	;# 
  1228  081C                     	;# 
  1229  081C                     	;# 
  1230  081D                     	;# 
  1231  081E                     	;# 
  1232  081F                     	;# 
  1233  088C                     	;# 
  1234  088D                     	;# 
  1235  088E                     	;# 
  1236  088F                     	;# 
  1237  0890                     	;# 
  1238  0891                     	;# 
  1239  0892                     	;# 
  1240  0893                     	;# 
  1241  0895                     	;# 
  1242  0896                     	;# 
  1243  090C                     	;# 
  1244  090E                     	;# 
  1245  090F                     	;# 
  1246  091F                     	;# 
  1247  098F                     	;# 
  1248  098F                     	;# 
  1249  0990                     	;# 
  1250  0991                     	;# 
  1251  0992                     	;# 
  1252  0993                     	;# 
  1253  0994                     	;# 
  1254  0995                     	;# 
  1255  0996                     	;# 
  1256  0997                     	;# 
  1257  0A19                     	;# 
  1258  0A19                     	;# 
  1259  0A1A                     	;# 
  1260  0A1A                     	;# 
  1261  0A1B                     	;# 
  1262  0A1B                     	;# 
  1263  0A1B                     	;# 
  1264  0A1C                     	;# 
  1265  0A1C                     	;# 
  1266  0A1D                     	;# 
  1267  0A1D                     	;# 
  1268  0A1E                     	;# 
  1269  0A1E                     	;# 
  1270  0A1F                     	;# 
  1271  0A1F                     	;# 
  1272  0A1F                     	;# 
  1273  1E0F                     	;# 
  1274  1E10                     	;# 
  1275  1E11                     	;# 
  1276  1E12                     	;# 
  1277  1E13                     	;# 
  1278  1E14                     	;# 
  1279  1E15                     	;# 
  1280  1E16                     	;# 
  1281  1E17                     	;# 
  1282  1E18                     	;# 
  1283  1E19                     	;# 
  1284  1E1A                     	;# 
  1285  1E1B                     	;# 
  1286  1E1C                     	;# 
  1287  1E1D                     	;# 
  1288  1E1E                     	;# 
  1289  1E1F                     	;# 
  1290  1E20                     	;# 
  1291  1E21                     	;# 
  1292  1E22                     	;# 
  1293  1E23                     	;# 
  1294  1E24                     	;# 
  1295  1E25                     	;# 
  1296  1E26                     	;# 
  1297  1E27                     	;# 
  1298  1E28                     	;# 
  1299  1E29                     	;# 
  1300  1E2A                     	;# 
  1301  1E2B                     	;# 
  1302  1E2C                     	;# 
  1303  1E2D                     	;# 
  1304  1E2E                     	;# 
  1305  1E2F                     	;# 
  1306  1E30                     	;# 
  1307  1E31                     	;# 
  1308  1E32                     	;# 
  1309  1E33                     	;# 
  1310  1E34                     	;# 
  1311  1E35                     	;# 
  1312  1E36                     	;# 
  1313  1E37                     	;# 
  1314  1E8F                     	;# 
  1315  1E90                     	;# 
  1316  1E91                     	;# 
  1317  1E92                     	;# 
  1318  1E93                     	;# 
  1319  1E9C                     	;# 
  1320  1EA1                     	;# 
  1321  1EA2                     	;# 
  1322  1EB1                     	;# 
  1323  1EBB                     	;# 
  1324  1EBC                     	;# 
  1325  1EBD                     	;# 
  1326  1EBE                     	;# 
  1327  1EC3                     	;# 
  1328  1EC5                     	;# 
  1329  1EC6                     	;# 
  1330  1EC7                     	;# 
  1331  1ECB                     	;# 
  1332  1ECC                     	;# 
  1333  1ECD                     	;# 
  1334  1ECE                     	;# 
  1335  1F10                     	;# 
  1336  1F11                     	;# 
  1337  1F12                     	;# 
  1338  1F13                     	;# 
  1339  1F14                     	;# 
  1340  1F15                     	;# 
  1341  1F1C                     	;# 
  1342  1F1D                     	;# 
  1343  1F1E                     	;# 
  1344  1F1F                     	;# 
  1345  1F20                     	;# 
  1346  1F21                     	;# 
  1347  1F22                     	;# 
  1348  1F23                     	;# 
  1349  1F24                     	;# 
  1350  1F25                     	;# 
  1351  1F26                     	;# 
  1352  1F27                     	;# 
  1353  1F38                     	;# 
  1354  1F39                     	;# 
  1355  1F3A                     	;# 
  1356  1F3B                     	;# 
  1357  1F3C                     	;# 
  1358  1F3D                     	;# 
  1359  1F3E                     	;# 
  1360  1F3F                     	;# 
  1361  1F43                     	;# 
  1362  1F44                     	;# 
  1363  1F45                     	;# 
  1364  1F46                     	;# 
  1365  1F47                     	;# 
  1366  1F48                     	;# 
  1367  1F49                     	;# 
  1368  1F4A                     	;# 
  1369  1F4E                     	;# 
  1370  1F4F                     	;# 
  1371  1F50                     	;# 
  1372  1F51                     	;# 
  1373  1F52                     	;# 
  1374  1F53                     	;# 
  1375  1F54                     	;# 
  1376  1F55                     	;# 
  1377  1FE4                     	;# 
  1378  1FE5                     	;# 
  1379  1FE6                     	;# 
  1380  1FE7                     	;# 
  1381  1FE8                     	;# 
  1382  1FE8                     	;# 
  1383  1FE9                     	;# 
  1384  1FEA                     	;# 
  1385  1FEA                     	;# 
  1386  1FEB                     	;# 
  1387  1FED                     	;# 
  1388  1FEE                     	;# 
  1389  1FEF                     	;# 
  1390  0000                     	;# 
  1391  0001                     	;# 
  1392  0002                     	;# 
  1393  0003                     	;# 
  1394  0004                     	;# 
  1395  0005                     	;# 
  1396  0006                     	;# 
  1397  0007                     	;# 
  1398  0008                     	;# 
  1399  0009                     	;# 
  1400  000A                     	;# 
  1401  000B                     	;# 
  1402  000C                     	;# 
  1403  000D                     	;# 
  1404  000E                     	;# 
  1405  0012                     	;# 
  1406  0013                     	;# 
  1407  0014                     	;# 
  1408  0018                     	;# 
  1409  0019                     	;# 
  1410  001A                     	;# 
  1411  009B                     	;# 
  1412  009B                     	;# 
  1413  009C                     	;# 
  1414  009D                     	;# 
  1415  009E                     	;# 
  1416  009F                     	;# 
  1417  0119                     	;# 
  1418  0119                     	;# 
  1419  0119                     	;# 
  1420  011A                     	;# 
  1421  011A                     	;# 
  1422  011A                     	;# 
  1423  011B                     	;# 
  1424  011B                     	;# 
  1425  011B                     	;# 
  1426  011B                     	;# 
  1427  011B                     	;# 
  1428  011C                     	;# 
  1429  011C                     	;# 
  1430  011C                     	;# 
  1431  011D                     	;# 
  1432  011D                     	;# 
  1433  011D                     	;# 
  1434  011E                     	;# 
  1435  011E                     	;# 
  1436  011E                     	;# 
  1437  011F                     	;# 
  1438  011F                     	;# 
  1439  011F                     	;# 
  1440  011F                     	;# 
  1441  011F                     	;# 
  1442  018C                     	;# 
  1443  018D                     	;# 
  1444  018E                     	;# 
  1445  018F                     	;# 
  1446  0190                     	;# 
  1447  0191                     	;# 
  1448  0192                     	;# 
  1449  020C                     	;# 
  1450  020C                     	;# 
  1451  020D                     	;# 
  1452  020E                     	;# 
  1453  020F                     	;# 
  1454  020F                     	;# 
  1455  0210                     	;# 
  1456  0210                     	;# 
  1457  0211                     	;# 
  1458  0211                     	;# 
  1459  028C                     	;# 
  1460  028C                     	;# 
  1461  028D                     	;# 
  1462  028D                     	;# 
  1463  028E                     	;# 
  1464  028F                     	;# 
  1465  0290                     	;# 
  1466  0291                     	;# 
  1467  030C                     	;# 
  1468  030C                     	;# 
  1469  030D                     	;# 
  1470  030E                     	;# 
  1471  030F                     	;# 
  1472  0310                     	;# 
  1473  0310                     	;# 
  1474  0311                     	;# 
  1475  0312                     	;# 
  1476  0313                     	;# 
  1477  0314                     	;# 
  1478  0314                     	;# 
  1479  0315                     	;# 
  1480  0316                     	;# 
  1481  0318                     	;# 
  1482  0318                     	;# 
  1483  0319                     	;# 
  1484  031A                     	;# 
  1485  031C                     	;# 
  1486  031C                     	;# 
  1487  031D                     	;# 
  1488  031E                     	;# 
  1489  038C                     	;# 
  1490  038C                     	;# 
  1491  038D                     	;# 
  1492  038E                     	;# 
  1493  058C                     	;# 
  1494  058C                     	;# 
  1495  058D                     	;# 
  1496  058E                     	;# 
  1497  058F                     	;# 
  1498  058F                     	;# 
  1499  0590                     	;# 
  1500  0591                     	;# 
  1501  0592                     	;# 
  1502  0593                     	;# 
  1503  059C                     	;# 
  1504  059C                     	;# 
  1505  059D                     	;# 
  1506  059D                     	;# 
  1507  059E                     	;# 
  1508  059F                     	;# 
  1509  060C                     	;# 
  1510  060D                     	;# 
  1511  060E                     	;# 
  1512  060F                     	;# 
  1513  0610                     	;# 
  1514  0611                     	;# 
  1515  0612                     	;# 
  1516  0613                     	;# 
  1517  0614                     	;# 
  1518  070C                     	;# 
  1519  070D                     	;# 
  1520  070E                     	;# 
  1521  070F                     	;# 
  1522  0710                     	;# 
  1523  0711                     	;# 
  1524  0712                     	;# 
  1525  0713                     	;# 
  1526  0716                     	;# 
  1527  0717                     	;# 
  1528  0718                     	;# 
  1529  0719                     	;# 
  1530  071A                     	;# 
  1531  071B                     	;# 
  1532  071C                     	;# 
  1533  071D                     	;# 
  1534  0796                     	;# 
  1535  0797                     	;# 
  1536  0798                     	;# 
  1537  0799                     	;# 
  1538  079A                     	;# 
  1539  079B                     	;# 
  1540  080C                     	;# 
  1541  080D                     	;# 
  1542  080E                     	;# 
  1543  080F                     	;# 
  1544  0810                     	;# 
  1545  0811                     	;# 
  1546  0812                     	;# 
  1547  0813                     	;# 
  1548  0814                     	;# 
  1549  081A                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  081E                     	;# 
  1556  081F                     	;# 
  1557  088C                     	;# 
  1558  088D                     	;# 
  1559  088E                     	;# 
  1560  088F                     	;# 
  1561  0890                     	;# 
  1562  0891                     	;# 
  1563  0892                     	;# 
  1564  0893                     	;# 
  1565  0895                     	;# 
  1566  0896                     	;# 
  1567  090C                     	;# 
  1568  090E                     	;# 
  1569  090F                     	;# 
  1570  091F                     	;# 
  1571  098F                     	;# 
  1572  098F                     	;# 
  1573  0990                     	;# 
  1574  0991                     	;# 
  1575  0992                     	;# 
  1576  0993                     	;# 
  1577  0994                     	;# 
  1578  0995                     	;# 
  1579  0996                     	;# 
  1580  0997                     	;# 
  1581  0A19                     	;# 
  1582  0A19                     	;# 
  1583  0A1A                     	;# 
  1584  0A1A                     	;# 
  1585  0A1B                     	;# 
  1586  0A1B                     	;# 
  1587  0A1B                     	;# 
  1588  0A1C                     	;# 
  1589  0A1C                     	;# 
  1590  0A1D                     	;# 
  1591  0A1D                     	;# 
  1592  0A1E                     	;# 
  1593  0A1E                     	;# 
  1594  0A1F                     	;# 
  1595  0A1F                     	;# 
  1596  0A1F                     	;# 
  1597  1E0F                     	;# 
  1598  1E10                     	;# 
  1599  1E11                     	;# 
  1600  1E12                     	;# 
  1601  1E13                     	;# 
  1602  1E14                     	;# 
  1603  1E15                     	;# 
  1604  1E16                     	;# 
  1605  1E17                     	;# 
  1606  1E18                     	;# 
  1607  1E19                     	;# 
  1608  1E1A                     	;# 
  1609  1E1B                     	;# 
  1610  1E1C                     	;# 
  1611  1E1D                     	;# 
  1612  1E1E                     	;# 
  1613  1E1F                     	;# 
  1614  1E20                     	;# 
  1615  1E21                     	;# 
  1616  1E22                     	;# 
  1617  1E23                     	;# 
  1618  1E24                     	;# 
  1619  1E25                     	;# 
  1620  1E26                     	;# 
  1621  1E27                     	;# 
  1622  1E28                     	;# 
  1623  1E29                     	;# 
  1624  1E2A                     	;# 
  1625  1E2B                     	;# 
  1626  1E2C                     	;# 
  1627  1E2D                     	;# 
  1628  1E2E                     	;# 
  1629  1E2F                     	;# 
  1630  1E30                     	;# 
  1631  1E31                     	;# 
  1632  1E32                     	;# 
  1633  1E33                     	;# 
  1634  1E34                     	;# 
  1635  1E35                     	;# 
  1636  1E36                     	;# 
  1637  1E37                     	;# 
  1638  1E8F                     	;# 
  1639  1E90                     	;# 
  1640  1E91                     	;# 
  1641  1E92                     	;# 
  1642  1E93                     	;# 
  1643  1E9C                     	;# 
  1644  1EA1                     	;# 
  1645  1EA2                     	;# 
  1646  1EB1                     	;# 
  1647  1EBB                     	;# 
  1648  1EBC                     	;# 
  1649  1EBD                     	;# 
  1650  1EBE                     	;# 
  1651  1EC3                     	;# 
  1652  1EC5                     	;# 
  1653  1EC6                     	;# 
  1654  1EC7                     	;# 
  1655  1ECB                     	;# 
  1656  1ECC                     	;# 
  1657  1ECD                     	;# 
  1658  1ECE                     	;# 
  1659  1F10                     	;# 
  1660  1F11                     	;# 
  1661  1F12                     	;# 
  1662  1F13                     	;# 
  1663  1F14                     	;# 
  1664  1F15                     	;# 
  1665  1F1C                     	;# 
  1666  1F1D                     	;# 
  1667  1F1E                     	;# 
  1668  1F1F                     	;# 
  1669  1F20                     	;# 
  1670  1F21                     	;# 
  1671  1F22                     	;# 
  1672  1F23                     	;# 
  1673  1F24                     	;# 
  1674  1F25                     	;# 
  1675  1F26                     	;# 
  1676  1F27                     	;# 
  1677  1F38                     	;# 
  1678  1F39                     	;# 
  1679  1F3A                     	;# 
  1680  1F3B                     	;# 
  1681  1F3C                     	;# 
  1682  1F3D                     	;# 
  1683  1F3E                     	;# 
  1684  1F3F                     	;# 
  1685  1F43                     	;# 
  1686  1F44                     	;# 
  1687  1F45                     	;# 
  1688  1F46                     	;# 
  1689  1F47                     	;# 
  1690  1F48                     	;# 
  1691  1F49                     	;# 
  1692  1F4A                     	;# 
  1693  1F4E                     	;# 
  1694  1F4F                     	;# 
  1695  1F50                     	;# 
  1696  1F51                     	;# 
  1697  1F52                     	;# 
  1698  1F53                     	;# 
  1699  1F54                     	;# 
  1700  1F55                     	;# 
  1701  1FE4                     	;# 
  1702  1FE5                     	;# 
  1703  1FE6                     	;# 
  1704  1FE7                     	;# 
  1705  1FE8                     	;# 
  1706  1FE8                     	;# 
  1707  1FE9                     	;# 
  1708  1FEA                     	;# 
  1709  1FEA                     	;# 
  1710  1FEB                     	;# 
  1711  1FED                     	;# 
  1712  1FEE                     	;# 
  1713  1FEF                     	;# 
  1714                           
  1715 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  1716  0000                     
  1717 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  1718  0000                     
  1719 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  1720  0000                     
  1721 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
  1722  0000                     
  1723 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
  1724  0000                     
  1725 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
  1726  0000                     
  1727                           	psect	idataBANK1
  1728  0E0F                     __pidataBANK1:
  1729                           
  1730                           ;initializer for main@F7309
  1731  0E0F  3424               	retlw	36
  1732  0E10  3447               	retlw	71
  1733  0E11  3450               	retlw	80
  1734  0E12  3452               	retlw	82
  1735  0E13  3400               	retlw	0
  1736                           
  1737                           	psect	idataBANK4
  1738  008B                     __pidataBANK4:
  1739                           
  1740                           ;initializer for main@F7307
  1741  008B  3431               	retlw	49
  1742  008C  3437               	retlw	55
  1743  008D  342C               	retlw	44
  1744  008E  3430               	retlw	48
  1745  008F  342A               	retlw	42
  1746  0090  3436               	retlw	54
  1747  0091  3441               	retlw	65
  1748  0092  3424               	retlw	36
  1749  0093  3447               	retlw	71
  1750  0094  3450               	retlw	80
  1751  0095  3454               	retlw	84
  1752  0096  3458               	retlw	88
  1753  0097  3454               	retlw	84
  1754  0098  342C               	retlw	44
  1755  0099  3430               	retlw	48
  1756  009A  3431               	retlw	49
  1757  009B  342C               	retlw	44
  1758  009C  3430               	retlw	48
  1759  009D  3431               	retlw	49
  1760  009E  342C               	retlw	44
  1761  009F  3430               	retlw	48
  1762  00A0  3432               	retlw	50
  1763  00A1  342C               	retlw	44
  1764  00A2  3441               	retlw	65
  1765  00A3  344E               	retlw	78
  1766  00A4  3454               	retlw	84
  1767  00A5  3453               	retlw	83
  1768  00A6  3454               	retlw	84
  1769  00A7  3441               	retlw	65
  1770  00A8  3454               	retlw	84
  1771  00A9  3455               	retlw	85
  1772  00AA  3453               	retlw	83
  1773  00AB  343D               	retlw	61
  1774  00AC  344F               	retlw	79
  1775  00AD  3450               	retlw	80
  1776  00AE  3445               	retlw	69
  1777  00AF  344E               	retlw	78
  1778  00B0  342A               	retlw	42
  1779  00B1  3432               	retlw	50
  1780  00B2  3442               	retlw	66
  1781  00B3  3431               	retlw	49
  1782  00B4  3437               	retlw	55
  1783  00B5  342C               	retlw	44
  1784  00B6  3430               	retlw	48
  1785  00B7  342A               	retlw	42
  1786  00B8  3436               	retlw	54
  1787  00B9  3441               	retlw	65
  1788  00BA  3424               	retlw	36
  1789  00BB  3447               	retlw	71
  1790  00BC  3450               	retlw	80
  1791  00BD  3452               	retlw	82
  1792  00BE  344D               	retlw	77
  1793  00BF  3443               	retlw	67
  1794  00C0  342C               	retlw	44
  1795  00C1  3431               	retlw	49
  1796  00C2  3437               	retlw	55
  1797  00C3  3432               	retlw	50
  1798  00C4  3431               	retlw	49
  1799  00C5  3431               	retlw	49
  1800  00C6  3438               	retlw	56
  1801  00C7  342E               	retlw	46
  1802  00C8  3430               	retlw	48
  1803  00C9  3438               	retlw	56
  1804  00CA  3431               	retlw	49
  1805  00CB  342C               	retlw	44
  1806  00CC  3456               	retlw	86
  1807  00CD  342C               	retlw	44
  1808  00CE  342C               	retlw	44
  1809  00CF  342C               	retlw	44
  1810  00D0  342C               	retlw	44
  1811  00D1  342C               	retlw	44
  1812  00D2  3430               	retlw	48
  1813  00D3  342E               	retlw	46
  1814  00D4  3430               	retlw	48
  1815  00D5  3430               	retlw	48
  1816  00D6  342C               	retlw	44
  1817  00D7  3431               	retlw	49
  1818  00D8  3437               	retlw	55
  1819  00D9  3432               	retlw	50
  1820  00DA  342E               	retlw	46
  1821                           
  1822                           	psect	nvBANK1
  1823  00DB                     __pnvBANK1:
  1824  00DB                     _EUSART2_ErrorHandler:
  1825  00DB                     	ds	2
  1826  00DD                     _EUSART2_OverrunErrorHandler:
  1827  00DD                     	ds	2
  1828  00DF                     _EUSART2_FramingErrorHandler:
  1829  00DF                     	ds	2
  1830  00E1                     _EUSART1_ErrorHandler:
  1831  00E1                     	ds	2
  1832  00E3                     _EUSART1_OverrunErrorHandler:
  1833  00E3                     	ds	2
  1834  00E5                     _EUSART1_FramingErrorHandler:
  1835  00E5                     	ds	2
  1836  0014                     _TRISC	set	20
  1837  0013                     _TRISB	set	19
  1838  0012                     _TRISA	set	18
  1839  001A                     _LATC	set	26
  1840  0019                     _LATB	set	25
  1841  0018                     _LATA	set	24
  1842  011A                     _TX1REG	set	282
  1843  0119                     _RC1REG	set	281
  1844  011D                     _RC1STAbits	set	285
  1845  011E                     _TX1STAbits	set	286
  1846  011C                     _SP1BRGH	set	284
  1847  011B                     _SP1BRGL	set	283
  1848  011E                     _TX1STA	set	286
  1849  011D                     _RC1STA	set	285
  1850  011F                     _BAUD1CON	set	287
  1851  070F                     _PIR3bits	set	1807
  1852  079B                     _PMD5	set	1947
  1853  079A                     _PMD4	set	1946
  1854  0799                     _PMD3	set	1945
  1855  0798                     _PMD2	set	1944
  1856  0797                     _PMD1	set	1943
  1857  0796                     _PMD0	set	1942
  1858  0892                     _OSCTUNE	set	2194
  1859  0890                     _OSCSTAT	set	2192
  1860  0893                     _OSCFRQ	set	2195
  1861  0891                     _OSCEN	set	2193
  1862  088F                     _OSCCON3	set	2191
  1863  088D                     _OSCCON1	set	2189
  1864  0A1A                     _TX2REG	set	2586
  1865  0A19                     _RC2REG	set	2585
  1866  0A1D                     _RC2STAbits	set	2589
  1867  0A1E                     _TX2STAbits	set	2590
  1868  0A1C                     _SP2BRGH	set	2588
  1869  0A1B                     _SP2BRGL	set	2587
  1870  0A1E                     _TX2STA	set	2590
  1871  0A1D                     _RC2STA	set	2589
  1872  0A1F                     _BAUD2CON	set	2591
  1873  1ECB                     _RX1DTPPS	set	7883
  1874  1ECD                     _RX2DTPPS	set	7885
  1875  1F1F                     _RB7PPS	set	7967
  1876  1F20                     _RC0PPS	set	7968
  1877  1F52                     _INLVLC	set	8018
  1878  1F47                     _INLVLB	set	8007
  1879  1F3C                     _INLVLA	set	7996
  1880  1F51                     _SLRCONC	set	8017
  1881  1F46                     _SLRCONB	set	8006
  1882  1F3B                     _SLRCONA	set	7995
  1883  1F50                     _ODCONC	set	8016
  1884  1F45                     _ODCONB	set	8005
  1885  1F3A                     _ODCONA	set	7994
  1886  1F4F                     _WPUC	set	8015
  1887  1F39                     _WPUA	set	7993
  1888  1F44                     _WPUB	set	8004
  1889  1F38                     _ANSELA	set	7992
  1890  1F43                     _ANSELB	set	8003
  1891  1F4E                     _ANSELC	set	8014
  1892                           
  1893                           	psect	stringtext1
  1894  1000                     __pstringtext1:
  1895  1000                     STR_1:
  1896  1000  3425               	retlw	37	;'%'
  1897  1001  3434               	retlw	52	;'4'
  1898  1002  3463               	retlw	99	;'c'
  1899  1003  343A               	retlw	58	;':'
  1900  1004  3420               	retlw	32	;' '
  1901  1005  3425               	retlw	37	;'%'
  1902  1006  3434               	retlw	52	;'4'
  1903  1007  3464               	retlw	100	;'d'
  1904  1008  340D               	retlw	13
  1905  1009  340A               	retlw	10
  1906  100A  3400               	retlw	0
  1907                           
  1908                           	psect	stringtext2
  1909  0000                     __pstringtext2:
  1910                           
  1911                           	psect	cinit
  1912  07D5                     start_initialization:	
  1913                           ; #config settings
  1914                           
  1915  07D5                     __initialization:
  1916                           
  1917                           ; Initialize objects allocated to BANK1
  1918  07D5  300F               	movlw	low __pidataBANK1
  1919  07D6  0084               	movwf	4
  1920  07D7  308E               	movlw	(high __pidataBANK1)| (0+128)
  1921  07D8  0085               	movwf	5
  1922  07D9  30E7               	movlw	low __pdataBANK1
  1923  07DA  0086               	movwf	6
  1924  07DB  3000               	movlw	high __pdataBANK1
  1925  07DC  0087               	movwf	7
  1926  07DD  3005               	movlw	5
  1927  07DE  318E  2644  3187   	fcall	init_ram
  1928                           
  1929                           ; Initialize objects allocated to BANK4
  1930  07E1  308B               	movlw	low __pidataBANK4
  1931  07E2  0084               	movwf	4
  1932  07E3  3080               	movlw	(high __pidataBANK4)| (0+128)
  1933  07E4  0085               	movwf	5
  1934  07E5  3020               	movlw	low __pdataBANK4
  1935  07E6  0086               	movwf	6
  1936  07E7  3002               	movlw	high __pdataBANK4
  1937  07E8  0087               	movwf	7
  1938  07E9  3050               	movlw	80
  1939  07EA  318E  2644  3187   	fcall	init_ram
  1940                           
  1941                           ; Clear objects allocated to BANK1
  1942  07ED  30A0               	movlw	low __pbssBANK1
  1943  07EE  0084               	movwf	4
  1944  07EF  3000               	movlw	high __pbssBANK1
  1945  07F0  0085               	movwf	5
  1946  07F1  302A               	movlw	42
  1947  07F2  318E  263E  3187   	fcall	clear_ram0
  1948                           
  1949                           ; Clear objects allocated to BANK3
  1950  07F5  30A0               	movlw	low __pbssBANK3
  1951  07F6  0084               	movwf	4
  1952  07F7  3001               	movlw	high __pbssBANK3
  1953  07F8  0085               	movwf	5
  1954  07F9  3014               	movlw	20
  1955  07FA  318E  263E  3187   	fcall	clear_ram0
  1956  07FD                     end_of_initialization:	
  1957                           ;End of C runtime variable initialization code
  1958                           
  1959  07FD                     __end_of__initialization:
  1960  07FD  0140               	movlb	0
  1961  07FE  3181  29AE         	ljmp	_main	;jump to C main() function
  1962                           
  1963                           	psect	bssBANK1
  1964  00A0                     __pbssBANK1:
  1965  00A0                     _nout:
  1966  00A0                     	ds	2
  1967  00A2                     _width:
  1968  00A2                     	ds	2
  1969  00A4                     _prec:
  1970  00A4                     	ds	2
  1971  00A6                     _flags:
  1972  00A6                     	ds	2
  1973  00A8                     _eusart2RxLastError:
  1974  00A8                     	ds	1
  1975  00A9                     _eusart1RxLastError:
  1976  00A9                     	ds	1
  1977  00AA                     _dbuf:
  1978  00AA                     	ds	32
  1979                           
  1980                           	psect	dataBANK1
  1981  00E7                     __pdataBANK1:
  1982  00E7                     main@F7309:
  1983  00E7                     	ds	5
  1984                           
  1985                           	psect	bssBANK3
  1986  01A0                     __pbssBANK3:
  1987  01A0                     _ptr:
  1988  01A0                     	ds	20
  1989                           
  1990                           	psect	dataBANK4
  1991  0220                     __pdataBANK4:
  1992  0220                     main@F7307:
  1993  0220                     	ds	80
  1994                           
  1995                           	psect	inittext
  1996  0E44                     init_ram:
  1997  0E44  00FE               	movwf	btemp
  1998  0E45                     initloop:
  1999  0E45  0012               	moviw fsr0++
  2000  0E46  001E               	movwi fsr1++
  2001  0E47  0BFE               	decfsz	btemp,f
  2002  0E48  2E45               	goto	initloop
  2003  0E49  3400               	retlw	0
  2004                           
  2005                           	psect	clrtext
  2006  0E3E                     clear_ram0:	
  2007                           ;	Called with FSR0 containing the base address, and
  2008                           ;	WREG with the size to clear
  2009                           
  2010  0E3E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2011  0E3F                     clrloop0:
  2012  0E3F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2013  0E40  3101               	addfsr 0,1
  2014  0E41  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2015  0E42  2E3F               	goto	clrloop0	;have we reached the end yet?
  2016  0E43  3400               	retlw	0	;all done for this memory range, return
  2017                           
  2018                           	psect	cstackBANK3
  2019  01B4                     __pcstackBANK3:
  2020  01B4                     main@Buffer:
  2021                           
  2022                           ; 10 bytes @ 0x0
  2023  01B4                     	ds	10
  2024  01BE                     main@read:
  2025                           
  2026                           ; 2 bytes @ 0xA
  2027  01BE                     	ds	2
  2028  01C0                     main@i:
  2029                           
  2030                           ; 2 bytes @ 0xC
  2031  01C0                     	ds	2
  2032                           
  2033                           	psect	cstackBANK2
  2034  0120                     __pcstackBANK2:
  2035  0120                     main@sentence:
  2036                           
  2037                           ; 80 bytes @ 0x0
  2038  0120                     	ds	80
  2039                           
  2040                           	psect	cstackBANK1
  2041  00CA                     __pcstackBANK1:
  2042  00CA                     ??_printf:
  2043                           
  2044                           ; 1 bytes @ 0x0
  2045  00CA                     	ds	3
  2046  00CD                     printf@ap:
  2047                           
  2048                           ; 1 bytes @ 0x3
  2049  00CD                     	ds	1
  2050  00CE                     ??_main:
  2051                           
  2052                           ; 1 bytes @ 0x4
  2053  00CE                     	ds	5
  2054  00D3                     main@s1:
  2055                           
  2056                           ; 5 bytes @ 0x9
  2057  00D3                     	ds	5
  2058  00D8                     main@position:
  2059                           
  2060                           ; 2 bytes @ 0xE
  2061  00D8                     	ds	2
  2062  00DA                     main@position_ptr:
  2063                           
  2064                           ; 1 bytes @ 0x10
  2065  00DA                     	ds	1
  2066                           
  2067                           	psect	cstackCOMMON
  2068  0070                     __pcstackCOMMON:
  2069  0070                     ?_EUSART1_SetFramingErrorHandler:
  2070  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_EUSART1_SetErrorHandler:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_PMD_Initialize:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_PMD_Initialize:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_PIN_MANAGER_Initialize:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ??_PIN_MANAGER_Initialize:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_OSCILLATOR_Initialize:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ??_OSCILLATOR_Initialize:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_EUSART2_Initialize:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ?_EUSART2_SetFramingErrorHandler:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_EUSART2_SetOverrunErrorHandler:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_EUSART2_SetErrorHandler:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ?_strchr:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ?_EUSART1_Initialize:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ?_EUSART1_Read:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ??_EUSART1_Read:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_EUSART1_Write:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ??_EUSART1_Write:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_putch:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_SYSTEM_Initialize:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_parsing:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_main:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ??___aodiv:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ??___aomod:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?_puts:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_strlen:	
  2146                           ; 2 bytes @ 0x0
  2147                           
  2148  0070                     ?_isdigit:	
  2149                           ; 2 bytes @ 0x0
  2150                           
  2151  0070                     ?_isspace:	
  2152                           ; 2 bytes @ 0x0
  2153                           
  2154  0070                     ?___wmul:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157  0070                     EUSART1_Write@txData:	
  2158                           ; 2 bytes @ 0x0
  2159                           
  2160  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2164                           ; 2 bytes @ 0x0
  2165                           
  2166  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  2167                           ; 2 bytes @ 0x0
  2168                           
  2169  0070                     EUSART2_SetFramingErrorHandler@interruptHandler:	
  2170                           ; 2 bytes @ 0x0
  2171                           
  2172  0070                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
  2173                           ; 2 bytes @ 0x0
  2174                           
  2175  0070                     EUSART2_SetErrorHandler@interruptHandler:	
  2176                           ; 2 bytes @ 0x0
  2177                           
  2178  0070                     parsing@Value:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0070                     ___wmul@multiplier:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0070                     isdigit@c:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0070                     isspace@c:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0070                     strchr@c:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193                           
  2194                           ; 2 bytes @ 0x0
  2195  0070                     	ds	1
  2196  0071                     ??_putch:
  2197  0071                     putch@txData:	
  2198                           ; 1 bytes @ 0x1
  2199                           
  2200  0071                     ___aodiv@counter:	
  2201                           ; 1 bytes @ 0x1
  2202                           
  2203  0071                     ___aomod@counter:	
  2204                           ; 1 bytes @ 0x1
  2205                           
  2206                           
  2207                           ; 1 bytes @ 0x1
  2208  0071                     	ds	1
  2209  0072                     ??_EUSART1_SetFramingErrorHandler:
  2210  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  2211                           ; 1 bytes @ 0x2
  2212                           
  2213  0072                     ??_EUSART1_SetErrorHandler:	
  2214                           ; 1 bytes @ 0x2
  2215                           
  2216  0072                     ??_EUSART2_Initialize:	
  2217                           ; 1 bytes @ 0x2
  2218                           
  2219  0072                     ??_EUSART2_SetFramingErrorHandler:	
  2220                           ; 1 bytes @ 0x2
  2221                           
  2222  0072                     ??_EUSART2_SetOverrunErrorHandler:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225  0072                     ??_EUSART2_SetErrorHandler:	
  2226                           ; 1 bytes @ 0x2
  2227                           
  2228  0072                     ??_strchr:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231  0072                     ??_strlen:	
  2232                           ; 1 bytes @ 0x2
  2233                           
  2234  0072                     ??_isdigit:	
  2235                           ; 1 bytes @ 0x2
  2236                           
  2237  0072                     ??_isspace:	
  2238                           ; 1 bytes @ 0x2
  2239                           
  2240  0072                     ??_EUSART1_Initialize:	
  2241                           ; 1 bytes @ 0x2
  2242                           
  2243  0072                     ??_SYSTEM_Initialize:	
  2244                           ; 1 bytes @ 0x2
  2245                           
  2246  0072                     ?_fputc:	
  2247                           ; 1 bytes @ 0x2
  2248                           
  2249  0072                     parsing@Buffer:	
  2250                           ; 2 bytes @ 0x2
  2251                           
  2252  0072                     ___aodiv@sign:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255  0072                     ___aomod@sign:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0072                     strchr@s:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0072                     ___wmul@multiplicand:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264  0072                     fputc@c:	
  2265                           ; 2 bytes @ 0x2
  2266                           
  2267                           
  2268                           ; 2 bytes @ 0x2
  2269  0072                     	ds	1
  2270  0073                     ??_parsing:
  2271  0073                     ?_abs:	
  2272                           ; 1 bytes @ 0x3
  2273                           
  2274  0073                     strlen@a:	
  2275                           ; 2 bytes @ 0x3
  2276                           
  2277  0073                     abs@a:	
  2278                           ; 1 bytes @ 0x3
  2279                           
  2280  0073                     ___aodiv@quotient:	
  2281                           ; 2 bytes @ 0x3
  2282                           
  2283                           
  2284                           ; 8 bytes @ 0x3
  2285  0073                     	ds	1
  2286  0074                     ??___wmul:
  2287  0074                     _isspace$896:	
  2288                           ; 1 bytes @ 0x4
  2289                           
  2290  0074                     fputc@fp:	
  2291                           ; 1 bytes @ 0x4
  2292                           
  2293  0074                     strlen@s:	
  2294                           ; 1 bytes @ 0x4
  2295                           
  2296  0074                     ___wmul@product:	
  2297                           ; 1 bytes @ 0x4
  2298                           
  2299                           
  2300                           ; 2 bytes @ 0x4
  2301  0074                     	ds	1
  2302  0075                     ??_fputc:
  2303  0075                     ??_abs:	
  2304                           ; 1 bytes @ 0x5
  2305                           
  2306                           
  2307                           ; 1 bytes @ 0x5
  2308  0075                     	ds	1
  2309  0076                     ?_atoi:
  2310  0076                     atoi@s:	
  2311                           ; 2 bytes @ 0x6
  2312                           
  2313                           
  2314                           ; 2 bytes @ 0x6
  2315  0076                     	ds	2
  2316  0078                     ??_atoi:
  2317                           
  2318                           ; 1 bytes @ 0x8
  2319  0078                     	ds	2
  2320  007A                     ?_fputs:
  2321  007A                     ?_ctoa:	
  2322                           ; 2 bytes @ 0xA
  2323                           
  2324  007A                     ctoa@c:	
  2325                           ; 2 bytes @ 0xA
  2326                           
  2327  007A                     fputs@s:	
  2328                           ; 1 bytes @ 0xA
  2329                           
  2330                           
  2331                           ; 2 bytes @ 0xA
  2332  007A                     	ds	2
  2333  007C                     fputs@fp:
  2334                           
  2335                           ; 1 bytes @ 0xC
  2336  007C                     	ds	1
  2337  007D                     ??_puts:
  2338  007D                     ??_pad:	
  2339                           ; 1 bytes @ 0xD
  2340                           
  2341                           
  2342                           ; 1 bytes @ 0xD
  2343  007D                     	ds	1
  2344                           
  2345                           	psect	cstackBANK0
  2346  0020                     __pcstackBANK0:
  2347  0020                     ??_fputs:
  2348  0020                     ??_ctoa:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0020                     ?___aodiv:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0020                     ?___aomod:	
  2355                           ; 8 bytes @ 0x0
  2356                           
  2357  0020                     atoi@neg:	
  2358                           ; 8 bytes @ 0x0
  2359                           
  2360  0020                     ___aodiv@divisor:	
  2361                           ; 2 bytes @ 0x0
  2362                           
  2363  0020                     ___aomod@divisor:	
  2364                           ; 8 bytes @ 0x0
  2365                           
  2366                           
  2367                           ; 8 bytes @ 0x0
  2368  0020                     	ds	2
  2369  0022                     _atoi$878:
  2370                           
  2371                           ; 2 bytes @ 0x2
  2372  0022                     	ds	1
  2373  0023                     fputs@c:
  2374  0023                     ctoa@l:	
  2375                           ; 1 bytes @ 0x3
  2376                           
  2377                           
  2378                           ; 2 bytes @ 0x3
  2379  0023                     	ds	1
  2380  0024                     _atoi$880:
  2381  0024                     fputs@i:	
  2382                           ; 2 bytes @ 0x4
  2383                           
  2384                           
  2385                           ; 2 bytes @ 0x4
  2386  0024                     	ds	1
  2387  0025                     ctoa@w:
  2388                           
  2389                           ; 2 bytes @ 0x5
  2390  0025                     	ds	1
  2391  0026                     ?_pad:
  2392  0026                     pad@buf:	
  2393                           ; 2 bytes @ 0x6
  2394                           
  2395  0026                     _atoi$879:	
  2396                           ; 1 bytes @ 0x6
  2397                           
  2398                           
  2399                           ; 1 bytes @ 0x6
  2400  0026                     	ds	1
  2401  0027                     ctoa@fp:
  2402  0027                     pad@p:	
  2403                           ; 1 bytes @ 0x7
  2404                           
  2405  0027                     atoi@n:	
  2406                           ; 2 bytes @ 0x7
  2407                           
  2408                           
  2409                           ; 2 bytes @ 0x7
  2410  0027                     	ds	1
  2411  0028                     puts@s:
  2412  0028                     ___aodiv@dividend:	
  2413                           ; 1 bytes @ 0x8
  2414                           
  2415  0028                     ___aomod@dividend:	
  2416                           ; 8 bytes @ 0x8
  2417                           
  2418                           
  2419                           ; 8 bytes @ 0x8
  2420  0028                     	ds	1
  2421  0029                     _puts$931:
  2422  0029                     pad@i:	
  2423                           ; 1 bytes @ 0x9
  2424                           
  2425                           
  2426                           ; 2 bytes @ 0x9
  2427  0029                     	ds	2
  2428  002B                     pad@w:
  2429                           
  2430                           ; 2 bytes @ 0xB
  2431  002B                     	ds	2
  2432  002D                     pad@fp:
  2433                           
  2434                           ; 1 bytes @ 0xD
  2435  002D                     	ds	3
  2436  0030                     ?_dtoa:
  2437  0030                     dtoa@d:	
  2438                           ; 2 bytes @ 0x10
  2439                           
  2440                           
  2441                           ; 8 bytes @ 0x10
  2442  0030                     	ds	8
  2443  0038                     ??_dtoa:
  2444                           
  2445                           ; 1 bytes @ 0x18
  2446  0038                     	ds	3
  2447  003B                     _dtoa$842:
  2448                           
  2449                           ; 2 bytes @ 0x1B
  2450  003B                     	ds	2
  2451  003D                     dtoa@fp:
  2452                           
  2453                           ; 1 bytes @ 0x1D
  2454  003D                     	ds	1
  2455  003E                     dtoa@p:
  2456                           
  2457                           ; 2 bytes @ 0x1E
  2458  003E                     	ds	2
  2459  0040                     dtoa@w:
  2460                           
  2461                           ; 2 bytes @ 0x20
  2462  0040                     	ds	2
  2463  0042                     dtoa@s:
  2464                           
  2465                           ; 2 bytes @ 0x22
  2466  0042                     	ds	2
  2467  0044                     dtoa@n:
  2468                           
  2469                           ; 8 bytes @ 0x24
  2470  0044                     	ds	8
  2471  004C                     dtoa@i:
  2472                           
  2473                           ; 2 bytes @ 0x2C
  2474  004C                     	ds	2
  2475  004E                     ?_vfpfcnvrt:
  2476  004E                     vfpfcnvrt@fmt:	
  2477                           ; 2 bytes @ 0x2E
  2478                           
  2479                           
  2480                           ; 1 bytes @ 0x2E
  2481  004E                     	ds	1
  2482  004F                     vfpfcnvrt@ap:
  2483                           
  2484                           ; 1 bytes @ 0x2F
  2485  004F                     	ds	1
  2486  0050                     ??_vfpfcnvrt:
  2487                           
  2488                           ; 1 bytes @ 0x30
  2489  0050                     	ds	6
  2490  0056                     vfpfcnvrt@ll:
  2491                           
  2492                           ; 8 bytes @ 0x36
  2493  0056                     	ds	8
  2494  005E                     vfpfcnvrt@c:
  2495                           
  2496                           ; 1 bytes @ 0x3E
  2497  005E                     	ds	1
  2498  005F                     _vfpfcnvrt$857:
  2499                           
  2500                           ; 2 bytes @ 0x3F
  2501  005F                     	ds	2
  2502  0061                     vfpfcnvrt@fp:
  2503                           
  2504                           ; 1 bytes @ 0x41
  2505  0061                     	ds	1
  2506  0062                     ?_vfprintf:
  2507  0062                     vfprintf@fmt:	
  2508                           ; 2 bytes @ 0x42
  2509                           
  2510                           
  2511                           ; 2 bytes @ 0x42
  2512  0062                     	ds	2
  2513  0064                     vfprintf@ap:
  2514                           
  2515                           ; 1 bytes @ 0x44
  2516  0064                     	ds	1
  2517  0065                     ??_vfprintf:
  2518                           
  2519                           ; 1 bytes @ 0x45
  2520  0065                     	ds	2
  2521  0067                     vfprintf@fp:
  2522                           
  2523                           ; 1 bytes @ 0x47
  2524  0067                     	ds	1
  2525  0068                     vfprintf@cfmt:
  2526                           
  2527                           ; 2 bytes @ 0x48
  2528  0068                     	ds	2
  2529  006A                     ?_printf:
  2530  006A                     printf@fmt:	
  2531                           ; 2 bytes @ 0x4A
  2532                           
  2533                           
  2534                           ; 2 bytes @ 0x4A
  2535  006A                     	ds	6
  2536                           
  2537                           	psect	maintext
  2538  01AE                     __pmaintext:	
  2539 ;;
  2540 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2541 ;;
  2542 ;; *************** function _main *****************
  2543 ;; Defined at:
  2544 ;;		line 91 in file "main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  position        2   14[BANK1 ] int 
  2549 ;;  position_ptr    1   16[BANK1 ] PTR unsigned char 
  2550 ;;		 -> NULL(0), main@sentence(80), 
  2551 ;;  Buffer         10    0[BANK3 ] unsigned char [10]
  2552 ;;  read            2   10[BANK3 ] unsigned short 
  2553 ;;  i               2   12[BANK3 ] int 
  2554 ;;  sentence       80    0[BANK2 ] unsigned char [80]
  2555 ;;  s1              5    9[BANK1 ] unsigned char [5]
  2556 ;;  count           2    0        int 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : B3F/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Locals:         0       0      10      80      14       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Totals:         0       0      13      80      14       0       0       0       0       0       0       0       
      +0       0
  2570 ;;Total ram usage:      107 bytes
  2571 ;; Hardware stack levels required when called:    9
  2572 ;; This function calls:
  2573 ;;		_EUSART1_Read
  2574 ;;		_SYSTEM_Initialize
  2575 ;;		_parsing
  2576 ;;		_printf
  2577 ;;		_puts
  2578 ;;		_strchr
  2579 ;;		_strlen
  2580 ;; This function is called by:
  2581 ;;		Startup code after reset
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _main
  2587  01AE                     _main:
  2588  01AE                     l2495:	
  2589                           ;incstack = 0
  2590                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2591                           
  2592                           
  2593                           ;main.c: 94:     SYSTEM_Initialize();
  2594  01AE  3180  2004  3181   	fcall	_SYSTEM_Initialize
  2595  01B1                     l2497:
  2596                           
  2597                           ;main.c: 111:     char sentence[80] = "17,0*6A"
  2598  01B1  3020               	movlw	low main@F7307
  2599  01B2  0086               	movwf	6
  2600  01B3  3002               	movlw	high main@F7307
  2601  01B4  0087               	movwf	7
  2602  01B5  3020               	movlw	low main@sentence
  2603  01B6  0084               	movwf	4
  2604  01B7  3001               	movlw	high main@sentence
  2605  01B8  0085               	movwf	5
  2606  01B9  3050               	movlw	80
  2607  01BA  0141               	movlb	1	; select bank1
  2608  01BB  00CE               	movwf	??_main^(0+128)
  2609  01BC                     u2260:
  2610  01BC  0016               	moviw fsr1++
  2611  01BD  001A               	movwi fsr0++
  2612  01BE  0BCE               	decfsz	??_main^(0+128),f
  2613  01BF  29BC               	goto	u2260
  2614  01C0                     l2499:
  2615                           
  2616                           ;main.c: 133:     puts(sentence);
  2617  01C0  3020               	movlw	(low (main@sentence| (0+256)))& (0+255)
  2618  01C1  318F  2726  3181   	fcall	_puts
  2619  01C4                     l2501:
  2620                           
  2621                           ;main.c: 134:     char s1[] = "$GPR";
  2622  01C4  30E7               	movlw	low main@F7309
  2623  01C5  0086               	movwf	6
  2624  01C6  3000               	movlw	high main@F7309
  2625  01C7  0087               	movwf	7
  2626  01C8  30D3               	movlw	low main@s1
  2627  01C9  0084               	movwf	4
  2628  01CA  3000               	movlw	high main@s1
  2629  01CB  0085               	movwf	5
  2630  01CC  3005               	movlw	5
  2631  01CD  0141               	movlb	1	; select bank1
  2632  01CE  00CE               	movwf	??_main^(0+128)
  2633  01CF                     u2270:
  2634  01CF  0016               	moviw fsr1++
  2635  01D0  001A               	movwi fsr0++
  2636  01D1  0BCE               	decfsz	??_main^(0+128),f
  2637  01D2  29CF               	goto	u2270
  2638  01D3                     l2503:
  2639  01D3                     l2505:
  2640                           
  2641                           ;main.c: 141:     for (int i = 0; i < strlen(s1); i++)
  2642  01D3  0143               	movlb	3	; select bank3
  2643  01D4  01C0               	clrf	main@i^(0+384)
  2644  01D5  01C1               	clrf	(main@i+1)^(0+384)
  2645  01D6  2A20               	goto	l2519
  2646  01D7                     l2507:
  2647                           
  2648                           ;main.c: 142:  {;main.c: 143:   char *position_ptr = strchr(sentence, s1[i]);
  2649  01D7  0840               	movf	main@i^(0+384),w
  2650  01D8  3ED3               	addlw	(low (main@s1| 0))& (0+255)
  2651  01D9  0086               	movwf	6
  2652  01DA  0187               	clrf	7
  2653  01DB  0801               	movf	1,w
  2654  01DC  0141               	movlb	1	; select bank1
  2655  01DD  00CE               	movwf	??_main^(0+128)
  2656  01DE  01CF               	clrf	(??_main^(0+128)+1)
  2657  01DF  084E               	movf	??_main^(0+128),w
  2658  01E0  00F0               	movwf	strchr@c
  2659  01E1  084F               	movf	(??_main+1)^(0+128),w
  2660  01E2  00F1               	movwf	strchr@c+1
  2661  01E3  3020               	movlw	(low (main@sentence| (0+256)))& (0+255)
  2662  01E4  318E  26D4  3181   	fcall	_strchr
  2663  01E7  0141               	movlb	1	; select bank1
  2664  01E8  00D0               	movwf	(??_main+2)^(0+128)
  2665  01E9  0850               	movf	(??_main+2)^(0+128),w
  2666  01EA  00DA               	movwf	main@position_ptr^(0+128)
  2667  01EB                     l2509:
  2668                           
  2669                           ;main.c: 148:   int position = (position_ptr == ((void*)0) ? -1 : position_ptr - sentenc
      +                          e);
  2670  01EB  085A               	movf	main@position_ptr^(0+128),w
  2671  01EC  1903               	btfsc	3,2
  2672  01ED  29EF               	goto	u2281
  2673  01EE  29F0               	goto	u2280
  2674  01EF                     u2281:
  2675  01EF  29F7               	goto	l2513
  2676  01F0                     u2280:
  2677  01F0                     l2511:
  2678  01F0  3020               	movlw	(low main@sentence)& (0+255)
  2679  01F1  025A               	subwf	main@position_ptr^(0+128),w
  2680  01F2  00D8               	movwf	main@position^(0+128)
  2681  01F3  01D9               	clrf	(main@position+1)^(0+128)
  2682  01F4  1BD8               	btfsc	main@position^(0+128),7
  2683  01F5  03D9               	decf	(main@position+1)^(0+128),f
  2684  01F6  29FB               	goto	l2515
  2685  01F7                     l2513:
  2686  01F7  30FF               	movlw	255
  2687  01F8  00D8               	movwf	main@position^(0+128)
  2688  01F9  30FF               	movlw	255
  2689  01FA  00D9               	movwf	(main@position^(0+128)+1)
  2690  01FB                     l2515:
  2691                           
  2692                           ;main.c: 150:   printf("%4c: %4d\r\n", s1[i], position);
  2693  01FB  3000               	movlw	low (STR_1| (0+32768))
  2694  01FC  0140               	movlb	0	; select bank0
  2695  01FD  00EA               	movwf	printf@fmt
  2696  01FE  3090               	movlw	high (STR_1| (0+32768))
  2697  01FF  00EB               	movwf	printf@fmt+1
  2698  0200  0143               	movlb	3	; select bank3
  2699  0201  0840               	movf	main@i^(0+384),w
  2700  0202  3ED3               	addlw	(low (main@s1| 0))& (0+255)
  2701  0203  0086               	movwf	6
  2702  0204  0187               	clrf	7
  2703  0205  0801               	movf	1,w
  2704  0206  0141               	movlb	1	; select bank1
  2705  0207  00CE               	movwf	??_main^(0+128)
  2706  0208  01CF               	clrf	(??_main^(0+128)+1)
  2707  0209  084E               	movf	??_main^(0+128),w
  2708  020A  0140               	movlb	0	; select bank0
  2709  020B  00EC               	movwf	?_printf+2
  2710  020C  0141               	movlb	1	; select bank1
  2711  020D  084F               	movf	(??_main+1)^(0+128),w
  2712  020E  0140               	movlb	0	; select bank0
  2713  020F  00ED               	movwf	?_printf+3
  2714  0210  0141               	movlb	1	; select bank1
  2715  0211  0859               	movf	(main@position+1)^(0+128),w
  2716  0212  0140               	movlb	0	; select bank0
  2717  0213  00EF               	movwf	?_printf+5
  2718  0214  0141               	movlb	1	; select bank1
  2719  0215  0858               	movf	main@position^(0+128),w
  2720  0216  0140               	movlb	0	; select bank0
  2721  0217  00EE               	movwf	?_printf+4
  2722  0218  318E  2676  3181   	fcall	_printf
  2723  021B                     l2517:
  2724                           
  2725                           ;main.c: 151:  }
  2726  021B  3001               	movlw	1
  2727  021C  0143               	movlb	3	; select bank3
  2728  021D  07C0               	addwf	main@i^(0+384),f
  2729  021E  3000               	movlw	0
  2730  021F  3DC1               	addwfc	(main@i+1)^(0+384),f
  2731  0220                     l2519:
  2732  0220  30D3               	movlw	(low (main@s1| 0))& (0+255)
  2733  0221  318E  26BB  3181   	fcall	_strlen
  2734  0224  0871               	movf	?_strlen+1,w
  2735  0225  0143               	movlb	3	; select bank3
  2736  0226  0241               	subwf	(main@i+1)^(0+384),w
  2737  0227  1D03               	skipz
  2738  0228  2A2B               	goto	u2295
  2739  0229  0870               	movf	?_strlen,w
  2740  022A  0240               	subwf	main@i^(0+384),w
  2741  022B                     u2295:
  2742  022B  1C03               	skipc
  2743  022C  2A2E               	goto	u2291
  2744  022D  2A2F               	goto	u2290
  2745  022E                     u2291:
  2746  022E  29D7               	goto	l2507
  2747  022F                     u2290:
  2748  022F                     l2521:
  2749                           
  2750                           ;main.c: 154:         uint16_t read = EUSART1_Read();
  2751  022F  318E  2666  3181   	fcall	_EUSART1_Read
  2752  0232  0141               	movlb	1	; select bank1
  2753  0233  00CE               	movwf	??_main^(0+128)
  2754  0234  01CF               	clrf	(??_main^(0+128)+1)
  2755  0235  084E               	movf	??_main^(0+128),w
  2756  0236  0143               	movlb	3	; select bank3
  2757  0237  00BE               	movwf	main@read^(0+384)
  2758  0238  0141               	movlb	1	; select bank1
  2759  0239  084F               	movf	(??_main+1)^(0+128),w
  2760  023A  0143               	movlb	3	; select bank3
  2761  023B  00BF               	movwf	(main@read+1)^(0+384)
  2762  023C                     l2523:
  2763                           
  2764                           ;main.c: 155:         uint8_t Buffer[10];;main.c: 156:         parsing(read, Buffer);
  2765  023C  083F               	movf	(main@read+1)^(0+384),w
  2766  023D  00F1               	movwf	parsing@Value+1
  2767  023E  083E               	movf	main@read^(0+384),w
  2768  023F  00F0               	movwf	parsing@Value
  2769  0240  30B4               	movlw	(low (main@Buffer| (0+256)))& (0+255)
  2770  0241  0141               	movlb	1	; select bank1
  2771  0242  00CE               	movwf	??_main^(0+128)
  2772  0243  084E               	movf	??_main^(0+128),w
  2773  0244  00F2               	movwf	parsing@Buffer
  2774  0245  318E  268B  3181   	fcall	_parsing
  2775  0248  2A2F               	goto	l2521
  2776  0249  3180  2802         	ljmp	start
  2777  024B                     __end_of_main:
  2778                           
  2779                           	psect	text1
  2780  0ED4                     __ptext1:	
  2781 ;; *************** function _strchr *****************
  2782 ;; Defined at:
  2783 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strchr.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  s               1    wreg     PTR const unsigned char 
  2786 ;;		 -> main@sentence(80), 
  2787 ;;  c               2    0[COMMON] int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  s               1    2[COMMON] PTR const unsigned char 
  2790 ;;		 -> main@sentence(80), 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      PTR unsigned char 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;Total ram usage:        3 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _strchr
  2815  0ED4                     _strchr:
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  2819                           ;strchr@s stored from wreg
  2820  0ED4  00F2               	movwf	strchr@s
  2821  0ED5                     l1036:
  2822  0ED5                     l2205:
  2823  0ED5  0872               	movf	strchr@s,w
  2824  0ED6  0086               	movwf	6
  2825  0ED7  3001               	movlw	1	; select bank2/3
  2826  0ED8  0087               	movwf	7
  2827  0ED9  0801               	movf	1,w
  2828  0EDA  0670               	xorwf	strchr@c,w
  2829  0EDB  1D03               	skipz
  2830  0EDC  2EDE               	goto	u1841
  2831  0EDD  2EDF               	goto	u1840
  2832  0EDE                     u1841:
  2833  0EDE  2EE1               	goto	l2211
  2834  0EDF                     u1840:
  2835  0EDF                     l2207:
  2836  0EDF  0872               	movf	strchr@s,w
  2837  0EE0  2EEC               	goto	l1038
  2838  0EE1                     l2211:
  2839  0EE1  0872               	movf	strchr@s,w
  2840  0EE2  0086               	movwf	6
  2841  0EE3  3001               	movlw	1	; select bank2/3
  2842  0EE4  0087               	movwf	7
  2843  0EE5  0AF2               	incf	strchr@s,f
  2844  0EE6  0801               	movf	1,w
  2845  0EE7  1D03               	btfss	3,2
  2846  0EE8  2EEA               	goto	u1851
  2847  0EE9  2EEB               	goto	u1850
  2848  0EEA                     u1851:
  2849  0EEA  2ED5               	goto	l1036
  2850  0EEB                     u1850:
  2851  0EEB                     l2213:
  2852  0EEB  3000               	movlw	0
  2853  0EEC                     l1038:
  2854  0EEC  0008               	return
  2855  0EED                     __end_of_strchr:
  2856                           
  2857                           	psect	text2
  2858  0F26                     __ptext2:	
  2859 ;; *************** function _puts *****************
  2860 ;; Defined at:
  2861 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\puts.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  s               1    wreg     PTR const unsigned char 
  2864 ;;		 -> main@sentence(80), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  s               1    8[BANK0 ] PTR const unsigned char 
  2867 ;;		 -> main@sentence(80), 
  2868 ;;  r               2    0        int 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2  285[None  ] int 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;Total ram usage:        4 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    4
  2885 ;; This function calls:
  2886 ;;		_fputc
  2887 ;;		_fputs
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _puts
  2895  0F26                     _puts:
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _puts: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2899                           ;puts@s stored from wreg
  2900  0F26  0140               	movlb	0	; select bank0
  2901  0F27  00A8               	movwf	puts@s
  2902  0F28                     l2477:
  2903  0F28  01A9               	clrf	_puts$931
  2904  0F29  0AA9               	incf	_puts$931,f
  2905  0F2A                     l2479:
  2906  0F2A  0828               	movf	puts@s,w
  2907  0F2B  00FA               	movwf	fputs@s
  2908  0F2C  3001               	movlw	1
  2909  0F2D  00FB               	movwf	fputs@s+1
  2910  0F2E  01FC               	clrf	fputs@fp
  2911  0F2F  318F  27D5  318F   	fcall	_fputs
  2912  0F32  1BFB               	btfsc	?_fputs+1,7
  2913  0F33  2F35               	goto	u2241
  2914  0F34  2F36               	goto	u2240
  2915  0F35                     u2241:
  2916  0F35  2F44               	goto	l2485
  2917  0F36                     u2240:
  2918  0F36                     l2481:
  2919  0F36  300A               	movlw	10
  2920  0F37  00F2               	movwf	fputc@c
  2921  0F38  3000               	movlw	0
  2922  0F39  00F3               	movwf	fputc@c+1
  2923  0F3A  01F4               	clrf	fputc@fp
  2924  0F3B  3180  2045  318F   	fcall	_fputc
  2925  0F3E  1BF3               	btfsc	?_fputc+1,7
  2926  0F3F  2F41               	goto	u2251
  2927  0F40  2F42               	goto	u2250
  2928  0F41                     u2251:
  2929  0F41  2F44               	goto	l2485
  2930  0F42                     u2250:
  2931  0F42                     l2483:
  2932  0F42  0140               	movlb	0	; select bank0
  2933  0F43  01A9               	clrf	_puts$931
  2934  0F44                     l2485:
  2935  0F44                     l1033:
  2936  0F44  0008               	return
  2937  0F45                     __end_of_puts:
  2938                           
  2939                           	psect	text3
  2940  0E76                     __ptext3:	
  2941 ;; *************** function _printf *****************
  2942 ;; Defined at:
  2943 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2946 ;;		 -> STR_1(11), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  ret             2    0        int 
  2949 ;;  ap              1    3[BANK1 ] PTR void [1]
  2950 ;;		 -> ?_printf(2), 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2   74[BANK0 ] int 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2960 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;Total ram usage:       10 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    8
  2967 ;; This function calls:
  2968 ;;		_vfprintf
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _printf
  2976  0E76                     _printf:
  2977  0E76                     l2489:	
  2978                           ;incstack = 0
  2979                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2980                           
  2981  0E76  306C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2982  0E77  0141               	movlb	1	; select bank1
  2983  0E78  00CA               	movwf	??_printf^(0+128)
  2984  0E79  084A               	movf	??_printf^(0+128),w
  2985  0E7A  00CD               	movwf	printf@ap^(0+128)
  2986  0E7B                     l2491:
  2987  0E7B  0140               	movlb	0	; select bank0
  2988  0E7C  086B               	movf	printf@fmt+1,w
  2989  0E7D  00E3               	movwf	vfprintf@fmt+1
  2990  0E7E  086A               	movf	printf@fmt,w
  2991  0E7F  00E2               	movwf	vfprintf@fmt
  2992  0E80  30CD               	movlw	(low (printf@ap| 0))& (0+255)
  2993  0E81  0141               	movlb	1	; select bank1
  2994  0E82  00CA               	movwf	??_printf^(0+128)
  2995  0E83  084A               	movf	??_printf^(0+128),w
  2996  0E84  0140               	movlb	0	; select bank0
  2997  0E85  00E4               	movwf	vfprintf@ap
  2998  0E86  3000               	movlw	0
  2999  0E87  3180  2014  318E   	fcall	_vfprintf
  3000  0E8A                     l849:
  3001  0E8A  0008               	return
  3002  0E8B                     __end_of_printf:
  3003                           
  3004                           	psect	text4
  3005  0014                     __ptext4:	
  3006 ;; *************** function _vfprintf *****************
  3007 ;; Defined at:
  3008 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  fp              1    wreg     PTR struct _IO_FILE
  3011 ;;		 -> NULL(0), 
  3012 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  3013 ;;		 -> STR_1(11), 
  3014 ;;  ap              1   68[BANK0 ] PTR PTR void 
  3015 ;;		 -> printf@ap(1), 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  3018 ;;		 -> NULL(0), 
  3019 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  3020 ;;		 -> STR_1(11), 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  2   66[BANK0 ] int 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:        8 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    7
  3037 ;; This function calls:
  3038 ;;		_vfpfcnvrt
  3039 ;; This function is called by:
  3040 ;;		_printf
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _vfprintf
  3046  0014                     _vfprintf:
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3050                           ;vfprintf@fp stored from wreg
  3051  0014  0140               	movlb	0	; select bank0
  3052  0015  00E7               	movwf	vfprintf@fp
  3053  0016                     l2465:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3056  0016  0863               	movf	vfprintf@fmt+1,w
  3057  0017  00E9               	movwf	vfprintf@cfmt+1
  3058  0018  0862               	movf	vfprintf@fmt,w
  3059  0019  00E8               	movwf	vfprintf@cfmt
  3060  001A                     l2467:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3063  001A  0141               	movlb	1	; select bank1
  3064  001B  01A0               	clrf	_nout^(0+128)
  3065  001C  01A1               	clrf	(_nout+1)^(0+128)
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3068  001D  2832               	goto	l2471
  3069  001E                     l2469:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3072  001E  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3073  001F  00E5               	movwf	??_vfprintf
  3074  0020  0865               	movf	??_vfprintf,w
  3075  0021  00CE               	movwf	vfpfcnvrt@fmt
  3076  0022  0864               	movf	vfprintf@ap,w
  3077  0023  00E6               	movwf	??_vfprintf+1
  3078  0024  0866               	movf	??_vfprintf+1,w
  3079  0025  00CF               	movwf	vfpfcnvrt@ap
  3080  0026  0867               	movf	vfprintf@fp,w
  3081  0027  3186  2653  3180   	fcall	_vfpfcnvrt
  3082  002A  0140               	movlb	0	; select bank0
  3083  002B  084E               	movf	?_vfpfcnvrt,w
  3084  002C  0141               	movlb	1	; select bank1
  3085  002D  07A0               	addwf	_nout^(0+128),f
  3086  002E  0140               	movlb	0	; select bank0
  3087  002F  084F               	movf	?_vfpfcnvrt+1,w
  3088  0030  0141               	movlb	1	; select bank1
  3089  0031  3DA1               	addwfc	(_nout+1)^(0+128),f
  3090  0032                     l2471:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3093  0032  0140               	movlb	0	; select bank0
  3094  0033  0868               	movf	vfprintf@cfmt,w
  3095  0034  0084               	movwf	4
  3096  0035  0869               	movf	vfprintf@cfmt+1,w
  3097  0036  0085               	movwf	5
  3098  0037  0012               	moviw fsr0++
  3099  0038  1D03               	btfss	3,2
  3100  0039  283B               	goto	u2231
  3101  003A  283C               	goto	u2230
  3102  003B                     u2231:
  3103  003B  281E               	goto	l2469
  3104  003C                     u2230:
  3105  003C                     l2473:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3108  003C  0141               	movlb	1	; select bank1
  3109  003D  0821               	movf	(_nout+1)^(0+128),w
  3110  003E  0140               	movlb	0	; select bank0
  3111  003F  00E3               	movwf	?_vfprintf+1
  3112  0040  0141               	movlb	1	; select bank1
  3113  0041  0820               	movf	_nout^(0+128),w
  3114  0042  0140               	movlb	0	; select bank0
  3115  0043  00E2               	movwf	?_vfprintf
  3116  0044                     l952:
  3117  0044  0008               	return
  3118  0045                     __end_of_vfprintf:
  3119                           
  3120                           	psect	text5
  3121  0653                     __ptext5:	
  3122 ;; *************** function _vfpfcnvrt *****************
  3123 ;; Defined at:
  3124 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  fp              1    wreg     PTR struct _IO_FILE
  3127 ;;		 -> NULL(0), 
  3128 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3129 ;;		 -> vfprintf@cfmt(2), 
  3130 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3131 ;;		 -> printf@ap(1), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  fp              1   65[BANK0 ] PTR struct _IO_FILE
  3134 ;;		 -> NULL(0), 
  3135 ;;  ll              8   54[BANK0 ] long long 
  3136 ;;  llu             8    0        unsigned long long 
  3137 ;;  f               4    0        unsigned long long 
  3138 ;;  ct              3    0        unsigned char [3]
  3139 ;;  vp              2    0        PTR void 
  3140 ;;  i               2    0        int 
  3141 ;;  done            2    0        int 
  3142 ;;  cp              2    0        PTR unsigned char 
  3143 ;;  c               1   62[BANK0 ] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2   46[BANK0 ] int 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;Total ram usage:       20 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    6
  3160 ;; This function calls:
  3161 ;;		_atoi
  3162 ;;		_ctoa
  3163 ;;		_dtoa
  3164 ;;		_fputc
  3165 ;;		_isdigit
  3166 ;; This function is called by:
  3167 ;;		_vfprintf
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _vfpfcnvrt
  3173  0653                     _vfpfcnvrt:
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3177                           ;vfpfcnvrt@fp stored from wreg
  3178  0653  0140               	movlb	0	; select bank0
  3179  0654  00E1               	movwf	vfpfcnvrt@fp
  3180  0655                     l2389:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3183  0655  084E               	movf	vfpfcnvrt@fmt,w
  3184  0656  0086               	movwf	6
  3185  0657  0187               	clrf	7
  3186  0658  3F40               	moviw [0]fsr1
  3187  0659  00D0               	movwf	??_vfpfcnvrt
  3188  065A  3F41               	moviw [1]fsr1
  3189  065B  00D1               	movwf	??_vfpfcnvrt+1
  3190  065C  0850               	movf	??_vfpfcnvrt,w
  3191  065D  0084               	movwf	4
  3192  065E  0851               	movf	??_vfpfcnvrt+1,w
  3193  065F  0085               	movwf	5
  3194  0660  0012               	moviw fsr0++
  3195  0661  3A25               	xorlw	37
  3196  0662  1D03               	btfss	3,2
  3197  0663  2E65               	goto	u2131
  3198  0664  2E66               	goto	u2130
  3199  0665                     u2131:
  3200  0665  2FB1               	goto	l2457
  3201  0666                     u2130:
  3202  0666                     l2391:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3205  0666  084E               	movf	vfpfcnvrt@fmt,w
  3206  0667  0086               	movwf	6
  3207  0668  0187               	clrf	7
  3208  0669  3001               	movlw	1
  3209  066A  0781               	addwf	1,f
  3210  066B  3141               	addfsr 1,1
  3211  066C  1803               	skipnc
  3212  066D  0A81               	incf	1,f
  3213  066E                     l2393:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3216  066E  0141               	movlb	1	; select bank1
  3217  066F  01A2               	clrf	_width^(0+128)
  3218  0670  01A3               	clrf	(_width+1)^(0+128)
  3219  0671  01A6               	clrf	_flags^(0+128)
  3220  0672  01A7               	clrf	(_flags+1)^(0+128)
  3221  0673                     l2395:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3224  0673  30FF               	movlw	255
  3225  0674  00A4               	movwf	_prec^(0+128)
  3226  0675  30FF               	movlw	255
  3227  0676  00A5               	movwf	(_prec^(0+128)+1)
  3228  0677                     l2397:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3231  0677  0140               	movlb	0	; select bank0
  3232  0678  084E               	movf	vfpfcnvrt@fmt,w
  3233  0679  0086               	movwf	6
  3234  067A  0187               	clrf	7
  3235  067B  3F40               	moviw [0]fsr1
  3236  067C  00D0               	movwf	??_vfpfcnvrt
  3237  067D  3F41               	moviw [1]fsr1
  3238  067E  00D1               	movwf	??_vfpfcnvrt+1
  3239  067F  0850               	movf	??_vfpfcnvrt,w
  3240  0680  0084               	movwf	4
  3241  0681  0851               	movf	??_vfpfcnvrt+1,w
  3242  0682  0085               	movwf	5
  3243  0683  0012               	moviw fsr0++
  3244  0684  3A2A               	xorlw	42
  3245  0685  1D03               	btfss	3,2
  3246  0686  2E88               	goto	u2141
  3247  0687  2E89               	goto	u2140
  3248  0688                     u2141:
  3249  0688  2EA9               	goto	l2409
  3250  0689                     u2140:
  3251  0689                     l2399:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3254  0689  084E               	movf	vfpfcnvrt@fmt,w
  3255  068A  0086               	movwf	6
  3256  068B  0187               	clrf	7
  3257  068C  3001               	movlw	1
  3258  068D  0781               	addwf	1,f
  3259  068E  3141               	addfsr 1,1
  3260  068F  1803               	skipnc
  3261  0690  0A81               	incf	1,f
  3262  0691                     l2401:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3265  0691  084F               	movf	vfpfcnvrt@ap,w
  3266  0692  0086               	movwf	6
  3267  0693  0187               	clrf	7
  3268  0694  0801               	movf	1,w
  3269  0695  0084               	movwf	4
  3270  0696  0185               	clrf	5
  3271  0697  3002               	movlw	2
  3272  0698  0781               	addwf	1,f
  3273  0699  3F00               	moviw [0]fsr0
  3274  069A  0141               	movlb	1	; select bank1
  3275  069B  00A2               	movwf	_width^(0+128)
  3276  069C  3F01               	moviw [1]fsr0
  3277  069D  00A3               	movwf	(_width+1)^(0+128)
  3278  069E                     l2403:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3281  069E  1FA3               	btfss	(_width+1)^(0+128),7
  3282  069F  2EA1               	goto	u2151
  3283  06A0  2EA2               	goto	u2150
  3284  06A1                     u2151:
  3285  06A1  2EEB               	goto	l2419
  3286  06A2                     u2150:
  3287  06A2                     l2405:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3290  06A2  1426               	bsf	_flags^(0+128),0
  3291  06A3                     l2407:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3294  06A3  09A2               	comf	_width^(0+128),f
  3295  06A4  09A3               	comf	(_width+1)^(0+128),f
  3296  06A5  0AA2               	incf	_width^(0+128),f
  3297  06A6  1903               	skipnz
  3298  06A7  0AA3               	incf	(_width+1)^(0+128),f
  3299  06A8  2EEB               	goto	l2419
  3300  06A9                     l2409:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3303  06A9  084E               	movf	vfpfcnvrt@fmt,w
  3304  06AA  0086               	movwf	6
  3305  06AB  0187               	clrf	7
  3306  06AC  3F40               	moviw [0]fsr1
  3307  06AD  00F6               	movwf	atoi@s
  3308  06AE  3F41               	moviw [1]fsr1
  3309  06AF  00F7               	movwf	atoi@s+1
  3310  06B0  3182  224B  3186   	fcall	_atoi
  3311  06B3  0877               	movf	?_atoi+1,w
  3312  06B4  0141               	movlb	1	; select bank1
  3313  06B5  00A3               	movwf	(_width+1)^(0+128)
  3314  06B6  0876               	movf	?_atoi,w
  3315  06B7  00A2               	movwf	_width^(0+128)
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3318  06B8  2EC1               	goto	l2413
  3319  06B9                     l2411:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3322  06B9  084E               	movf	vfpfcnvrt@fmt,w
  3323  06BA  0086               	movwf	6
  3324  06BB  0187               	clrf	7
  3325  06BC  3001               	movlw	1
  3326  06BD  0781               	addwf	1,f
  3327  06BE  3141               	addfsr 1,1
  3328  06BF  1803               	skipnc
  3329  06C0  0A81               	incf	1,f
  3330  06C1                     l2413:
  3331  06C1  0140               	movlb	0	; select bank0
  3332  06C2  084E               	movf	vfpfcnvrt@fmt,w
  3333  06C3  0086               	movwf	6
  3334  06C4  0187               	clrf	7
  3335  06C5  3F40               	moviw [0]fsr1
  3336  06C6  00D0               	movwf	??_vfpfcnvrt
  3337  06C7  3F41               	moviw [1]fsr1
  3338  06C8  00D1               	movwf	??_vfpfcnvrt+1
  3339  06C9  0850               	movf	??_vfpfcnvrt,w
  3340  06CA  0084               	movwf	4
  3341  06CB  0851               	movf	??_vfpfcnvrt+1,w
  3342  06CC  0085               	movwf	5
  3343  06CD  0800               	movf	0,w	;code access
  3344  06CE  3ED0               	addlw	208
  3345  06CF  00D2               	movwf	??_vfpfcnvrt+2
  3346  06D0  30FF               	movlw	255
  3347  06D1  1803               	skipnc
  3348  06D2  3000               	movlw	0
  3349  06D3  00D3               	movwf	??_vfpfcnvrt+3
  3350  06D4  3000               	movlw	0
  3351  06D5  0253               	subwf	??_vfpfcnvrt+3,w
  3352  06D6  300A               	movlw	10
  3353  06D7  1903               	skipnz
  3354  06D8  0252               	subwf	??_vfpfcnvrt+2,w
  3355  06D9  1C03               	skipc
  3356  06DA  2EDC               	goto	u2161
  3357  06DB  2EDE               	goto	u2160
  3358  06DC                     u2161:
  3359  06DC  3001               	movlw	1
  3360  06DD  2EDF               	goto	u2170
  3361  06DE                     u2160:
  3362  06DE  3000               	movlw	0
  3363  06DF                     u2170:
  3364  06DF  00D4               	movwf	??_vfpfcnvrt+4
  3365  06E0  01D5               	clrf	??_vfpfcnvrt+5
  3366  06E1  0854               	movf	??_vfpfcnvrt+4,w
  3367  06E2  00DF               	movwf	_vfpfcnvrt$857
  3368  06E3  0855               	movf	??_vfpfcnvrt+5,w
  3369  06E4  00E0               	movwf	_vfpfcnvrt$857+1
  3370  06E5                     l2417:
  3371  06E5  085F               	movf	_vfpfcnvrt$857,w
  3372  06E6  0460               	iorwf	_vfpfcnvrt$857+1,w
  3373  06E7  1D03               	btfss	3,2
  3374  06E8  2EEA               	goto	u2181
  3375  06E9  2EEB               	goto	u2180
  3376  06EA                     u2181:
  3377  06EA  2EB9               	goto	l2411
  3378  06EB                     u2180:
  3379  06EB                     l2419:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  3382  06EB  0140               	movlb	0	; select bank0
  3383  06EC  084E               	movf	vfpfcnvrt@fmt,w
  3384  06ED  0086               	movwf	6
  3385  06EE  0187               	clrf	7
  3386  06EF  3F40               	moviw [0]fsr1
  3387  06F0  00D0               	movwf	??_vfpfcnvrt
  3388  06F1  3F41               	moviw [1]fsr1
  3389  06F2  00D1               	movwf	??_vfpfcnvrt+1
  3390  06F3  0850               	movf	??_vfpfcnvrt,w
  3391  06F4  0084               	movwf	4
  3392  06F5  0851               	movf	??_vfpfcnvrt+1,w
  3393  06F6  0085               	movwf	5
  3394  06F7  0012               	moviw fsr0++
  3395  06F8  3A63               	xorlw	99
  3396  06F9  1D03               	btfss	3,2
  3397  06FA  2EFC               	goto	u2191
  3398  06FB  2EFD               	goto	u2190
  3399  06FC                     u2191:
  3400  06FC  2F1F               	goto	l2429
  3401  06FD                     u2190:
  3402  06FD                     l2421:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  3405  06FD  084E               	movf	vfpfcnvrt@fmt,w
  3406  06FE  0086               	movwf	6
  3407  06FF  0187               	clrf	7
  3408  0700  3001               	movlw	1
  3409  0701  0781               	addwf	1,f
  3410  0702  3141               	addfsr 1,1
  3411  0703  1803               	skipnc
  3412  0704  0A81               	incf	1,f
  3413  0705                     l2423:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3416  0705  084F               	movf	vfpfcnvrt@ap,w
  3417  0706  0086               	movwf	6
  3418  0707  0187               	clrf	7
  3419  0708  0801               	movf	1,w
  3420  0709  0084               	movwf	4
  3421  070A  0185               	clrf	5
  3422  070B  3002               	movlw	2
  3423  070C  0781               	addwf	1,f
  3424  070D  0800               	movf	0,w
  3425  070E  00D0               	movwf	??_vfpfcnvrt
  3426  070F  0850               	movf	??_vfpfcnvrt,w
  3427  0710  00DE               	movwf	vfpfcnvrt@c
  3428  0711                     l2425:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  3431  0711  085E               	movf	vfpfcnvrt@c,w
  3432  0712  00D0               	movwf	??_vfpfcnvrt
  3433  0713  0850               	movf	??_vfpfcnvrt,w
  3434  0714  00FA               	movwf	ctoa@c
  3435  0715  0861               	movf	vfpfcnvrt@fp,w
  3436  0716  3181  213A  3186   	fcall	_ctoa
  3437  0719  087B               	movf	?_ctoa+1,w
  3438  071A  0140               	movlb	0	; select bank0
  3439  071B  00CF               	movwf	?_vfpfcnvrt+1
  3440  071C  087A               	movf	?_ctoa,w
  3441  071D  00CE               	movwf	?_vfpfcnvrt
  3442  071E  2FD4               	goto	l942
  3443  071F                     l2429:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3446  071F  084E               	movf	vfpfcnvrt@fmt,w
  3447  0720  0086               	movwf	6
  3448  0721  0187               	clrf	7
  3449  0722  3F40               	moviw [0]fsr1
  3450  0723  00D0               	movwf	??_vfpfcnvrt
  3451  0724  3F41               	moviw [1]fsr1
  3452  0725  00D1               	movwf	??_vfpfcnvrt+1
  3453  0726  0850               	movf	??_vfpfcnvrt,w
  3454  0727  0084               	movwf	4
  3455  0728  0851               	movf	??_vfpfcnvrt+1,w
  3456  0729  0085               	movwf	5
  3457  072A  0012               	moviw fsr0++
  3458  072B  3A64               	xorlw	100
  3459  072C  1903               	btfsc	3,2
  3460  072D  2F2F               	goto	u2201
  3461  072E  2F30               	goto	u2200
  3462  072F                     u2201:
  3463  072F  2F41               	goto	l2433
  3464  0730                     u2200:
  3465  0730                     l2431:
  3466  0730  084E               	movf	vfpfcnvrt@fmt,w
  3467  0731  0086               	movwf	6
  3468  0732  0187               	clrf	7
  3469  0733  3F40               	moviw [0]fsr1
  3470  0734  00D0               	movwf	??_vfpfcnvrt
  3471  0735  3F41               	moviw [1]fsr1
  3472  0736  00D1               	movwf	??_vfpfcnvrt+1
  3473  0737  0850               	movf	??_vfpfcnvrt,w
  3474  0738  0084               	movwf	4
  3475  0739  0851               	movf	??_vfpfcnvrt+1,w
  3476  073A  0085               	movwf	5
  3477  073B  0012               	moviw fsr0++
  3478  073C  3A69               	xorlw	105
  3479  073D  1D03               	btfss	3,2
  3480  073E  2F40               	goto	u2211
  3481  073F  2F41               	goto	u2210
  3482  0740                     u2211:
  3483  0740  2F7C               	goto	l2441
  3484  0741                     u2210:
  3485  0741                     l2433:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3488  0741  084E               	movf	vfpfcnvrt@fmt,w
  3489  0742  0086               	movwf	6
  3490  0743  0187               	clrf	7
  3491  0744  3001               	movlw	1
  3492  0745  0781               	addwf	1,f
  3493  0746  3141               	addfsr 1,1
  3494  0747  1803               	skipnc
  3495  0748  0A81               	incf	1,f
  3496  0749                     l2435:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3499  0749  084F               	movf	vfpfcnvrt@ap,w
  3500  074A  0086               	movwf	6
  3501  074B  0187               	clrf	7
  3502  074C  0801               	movf	1,w
  3503  074D  0084               	movwf	4
  3504  074E  0185               	clrf	5
  3505  074F  3002               	movlw	2
  3506  0750  0781               	addwf	1,f
  3507  0751  3F00               	moviw [0]fsr0
  3508  0752  00D0               	movwf	??_vfpfcnvrt
  3509  0753  3F01               	moviw [1]fsr0
  3510  0754  00D1               	movwf	??_vfpfcnvrt+1
  3511  0755  0850               	movf	??_vfpfcnvrt,w
  3512  0756  00D6               	movwf	vfpfcnvrt@ll
  3513  0757  0851               	movf	??_vfpfcnvrt+1,w
  3514  0758  00D7               	movwf	vfpfcnvrt@ll+1
  3515  0759  0D89               	rlf	9,f
  3516  075A  3B89               	subwfb	9,f
  3517  075B  0989               	comf	9,f
  3518  075C  00D8               	movwf	vfpfcnvrt@ll+2
  3519  075D  00D9               	movwf	vfpfcnvrt@ll+3
  3520  075E  00DA               	movwf	vfpfcnvrt@ll+4
  3521  075F  00DB               	movwf	vfpfcnvrt@ll+5
  3522  0760  00DC               	movwf	vfpfcnvrt@ll+6
  3523  0761  00DD               	movwf	vfpfcnvrt@ll+7
  3524  0762                     l2437:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3527  0762  0856               	movf	vfpfcnvrt@ll,w
  3528  0763  00B0               	movwf	dtoa@d
  3529  0764  0857               	movf	vfpfcnvrt@ll+1,w
  3530  0765  00B1               	movwf	dtoa@d+1
  3531  0766  0858               	movf	vfpfcnvrt@ll+2,w
  3532  0767  00B2               	movwf	dtoa@d+2
  3533  0768  0859               	movf	vfpfcnvrt@ll+3,w
  3534  0769  00B3               	movwf	dtoa@d+3
  3535  076A  085A               	movf	vfpfcnvrt@ll+4,w
  3536  076B  00B4               	movwf	dtoa@d+4
  3537  076C  085B               	movf	vfpfcnvrt@ll+5,w
  3538  076D  00B5               	movwf	dtoa@d+5
  3539  076E  085C               	movf	vfpfcnvrt@ll+6,w
  3540  076F  00B6               	movwf	dtoa@d+6
  3541  0770  085D               	movf	vfpfcnvrt@ll+7,w
  3542  0771  00B7               	movwf	dtoa@d+7
  3543  0772  0861               	movf	vfpfcnvrt@fp,w
  3544  0773  3184  24E5  3186   	fcall	_dtoa
  3545  0776  0140               	movlb	0	; select bank0
  3546  0777  0831               	movf	?_dtoa+1,w
  3547  0778  00CF               	movwf	?_vfpfcnvrt+1
  3548  0779  0830               	movf	?_dtoa,w
  3549  077A  00CE               	movwf	?_vfpfcnvrt
  3550  077B  2FD4               	goto	l942
  3551  077C                     l2441:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3554  077C  084E               	movf	vfpfcnvrt@fmt,w
  3555  077D  0086               	movwf	6
  3556  077E  0187               	clrf	7
  3557  077F  3F40               	moviw [0]fsr1
  3558  0780  00D0               	movwf	??_vfpfcnvrt
  3559  0781  3F41               	moviw [1]fsr1
  3560  0782  00D1               	movwf	??_vfpfcnvrt+1
  3561  0783  0850               	movf	??_vfpfcnvrt,w
  3562  0784  0084               	movwf	4
  3563  0785  0851               	movf	??_vfpfcnvrt+1,w
  3564  0786  0085               	movwf	5
  3565  0787  0012               	moviw fsr0++
  3566  0788  3A25               	xorlw	37
  3567  0789  1D03               	btfss	3,2
  3568  078A  2F8C               	goto	u2221
  3569  078B  2F8D               	goto	u2220
  3570  078C                     u2221:
  3571  078C  2FA6               	goto	l2451
  3572  078D                     u2220:
  3573  078D                     l2443:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3576  078D  084E               	movf	vfpfcnvrt@fmt,w
  3577  078E  0086               	movwf	6
  3578  078F  0187               	clrf	7
  3579  0790  3001               	movlw	1
  3580  0791  0781               	addwf	1,f
  3581  0792  3141               	addfsr 1,1
  3582  0793  1803               	skipnc
  3583  0794  0A81               	incf	1,f
  3584  0795                     l2445:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3587  0795  3025               	movlw	37
  3588  0796  00F2               	movwf	fputc@c
  3589  0797  3000               	movlw	0
  3590  0798  00F3               	movwf	fputc@c+1
  3591  0799  0861               	movf	vfpfcnvrt@fp,w
  3592  079A  00D0               	movwf	??_vfpfcnvrt
  3593  079B  0850               	movf	??_vfpfcnvrt,w
  3594  079C  00F4               	movwf	fputc@fp
  3595  079D  3180  2045  3186   	fcall	_fputc
  3596  07A0                     l2447:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3599  07A0  3001               	movlw	1
  3600  07A1  0140               	movlb	0	; select bank0
  3601  07A2  00CE               	movwf	?_vfpfcnvrt
  3602  07A3  3000               	movlw	0
  3603  07A4  00CF               	movwf	?_vfpfcnvrt+1
  3604  07A5  2FD4               	goto	l942
  3605  07A6                     l2451:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3608  07A6  084E               	movf	vfpfcnvrt@fmt,w
  3609  07A7  0086               	movwf	6
  3610  07A8  0187               	clrf	7
  3611  07A9  3001               	movlw	1
  3612  07AA  0781               	addwf	1,f
  3613  07AB  3141               	addfsr 1,1
  3614  07AC  1803               	skipnc
  3615  07AD  0A81               	incf	1,f
  3616  07AE                     l2453:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3619  07AE  01CE               	clrf	?_vfpfcnvrt
  3620  07AF  01CF               	clrf	?_vfpfcnvrt+1
  3621  07B0  2FD4               	goto	l942
  3622  07B1                     l2457:
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3625  07B1  084E               	movf	vfpfcnvrt@fmt,w
  3626  07B2  0086               	movwf	6
  3627  07B3  0187               	clrf	7
  3628  07B4  3F40               	moviw [0]fsr1
  3629  07B5  00D0               	movwf	??_vfpfcnvrt
  3630  07B6  3F41               	moviw [1]fsr1
  3631  07B7  00D1               	movwf	??_vfpfcnvrt+1
  3632  07B8  0850               	movf	??_vfpfcnvrt,w
  3633  07B9  0084               	movwf	4
  3634  07BA  0851               	movf	??_vfpfcnvrt+1,w
  3635  07BB  0085               	movwf	5
  3636  07BC  0800               	movf	0,w	;code access
  3637  07BD  00D2               	movwf	??_vfpfcnvrt+2
  3638  07BE  01D3               	clrf	??_vfpfcnvrt+3
  3639  07BF  0852               	movf	??_vfpfcnvrt+2,w
  3640  07C0  00F2               	movwf	fputc@c
  3641  07C1  0853               	movf	??_vfpfcnvrt+3,w
  3642  07C2  00F3               	movwf	fputc@c+1
  3643  07C3  0861               	movf	vfpfcnvrt@fp,w
  3644  07C4  00D4               	movwf	??_vfpfcnvrt+4
  3645  07C5  0854               	movf	??_vfpfcnvrt+4,w
  3646  07C6  00F4               	movwf	fputc@fp
  3647  07C7  3180  2045  3186   	fcall	_fputc
  3648  07CA                     l2459:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3651  07CA  0140               	movlb	0	; select bank0
  3652  07CB  084E               	movf	vfpfcnvrt@fmt,w
  3653  07CC  0086               	movwf	6
  3654  07CD  0187               	clrf	7
  3655  07CE  3001               	movlw	1
  3656  07CF  0781               	addwf	1,f
  3657  07D0  3141               	addfsr 1,1
  3658  07D1  1803               	skipnc
  3659  07D2  0A81               	incf	1,f
  3660  07D3  2FA0               	goto	l2447
  3661  07D4                     l942:
  3662  07D4  0008               	return
  3663  07D5                     __end_of_vfpfcnvrt:
  3664                           
  3665                           	psect	text6
  3666  04E5                     __ptext6:	
  3667 ;; *************** function _dtoa *****************
  3668 ;; Defined at:
  3669 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  fp              1    wreg     PTR struct _IO_FILE
  3672 ;;		 -> NULL(0), 
  3673 ;;  d               8   16[BANK0 ] long long 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3676 ;;		 -> NULL(0), 
  3677 ;;  n               8   36[BANK0 ] long long 
  3678 ;;  i               2   44[BANK0 ] int 
  3679 ;;  s               2   34[BANK0 ] int 
  3680 ;;  w               2   32[BANK0 ] int 
  3681 ;;  p               2   30[BANK0 ] int 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2   16[BANK0 ] int 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3691 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;Total ram usage:       30 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    5
  3698 ;; This function calls:
  3699 ;;		___aodiv
  3700 ;;		___aomod
  3701 ;;		_abs
  3702 ;;		_pad
  3703 ;; This function is called by:
  3704 ;;		_vfpfcnvrt
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _dtoa
  3710  04E5                     _dtoa:
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3714                           ;dtoa@fp stored from wreg
  3715  04E5  0140               	movlb	0	; select bank0
  3716  04E6  00BD               	movwf	dtoa@fp
  3717  04E7                     l2331:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3720  04E7  0830               	movf	dtoa@d,w
  3721  04E8  00C4               	movwf	dtoa@n
  3722  04E9  0831               	movf	dtoa@d+1,w
  3723  04EA  00C5               	movwf	dtoa@n+1
  3724  04EB  0832               	movf	dtoa@d+2,w
  3725  04EC  00C6               	movwf	dtoa@n+2
  3726  04ED  0833               	movf	dtoa@d+3,w
  3727  04EE  00C7               	movwf	dtoa@n+3
  3728  04EF  0834               	movf	dtoa@d+4,w
  3729  04F0  00C8               	movwf	dtoa@n+4
  3730  04F1  0835               	movf	dtoa@d+5,w
  3731  04F2  00C9               	movwf	dtoa@n+5
  3732  04F3  0836               	movf	dtoa@d+6,w
  3733  04F4  00CA               	movwf	dtoa@n+6
  3734  04F5  0837               	movf	dtoa@d+7,w
  3735  04F6  00CB               	movwf	dtoa@n+7
  3736  04F7                     l2333:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3739  04F7  3044               	movlw	low dtoa@n
  3740  04F8  0086               	movwf	6
  3741  04F9  3000               	movlw	high dtoa@n
  3742  04FA  0087               	movwf	7
  3743  04FB  3F47               	moviw [7]fsr1
  3744  04FC  00B8               	movwf	??_dtoa
  3745  04FD  1BB8               	btfsc	??_dtoa,7
  3746  04FE  2D00               	goto	u1971
  3747  04FF  2D02               	goto	u1970
  3748  0500                     u1971:
  3749  0500  3001               	movlw	1
  3750  0501  2D03               	goto	u1980
  3751  0502                     u1970:
  3752  0502  3000               	movlw	0
  3753  0503                     u1980:
  3754  0503  0140               	movlb	0	; select bank0
  3755  0504  00B9               	movwf	??_dtoa+1
  3756  0505  01BA               	clrf	??_dtoa+2
  3757  0506  0839               	movf	??_dtoa+1,w
  3758  0507  00C2               	movwf	dtoa@s
  3759  0508  083A               	movf	??_dtoa+2,w
  3760  0509  00C3               	movwf	dtoa@s+1
  3761  050A                     l2335:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3764  050A  0842               	movf	dtoa@s,w
  3765  050B  0443               	iorwf	dtoa@s+1,w
  3766  050C  1903               	btfsc	3,2
  3767  050D  2D0F               	goto	u1991
  3768  050E  2D10               	goto	u1990
  3769  050F                     u1991:
  3770  050F  2D2E               	goto	l904
  3771  0510                     u1990:
  3772  0510                     l2337:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3775  0510  09C4               	comf	dtoa@n,f
  3776  0511  09C5               	comf	dtoa@n+1,f
  3777  0512  09C6               	comf	dtoa@n+2,f
  3778  0513  09C7               	comf	dtoa@n+3,f
  3779  0514  09C8               	comf	dtoa@n+4,f
  3780  0515  09C9               	comf	dtoa@n+5,f
  3781  0516  09CA               	comf	dtoa@n+6,f
  3782  0517  09CB               	comf	dtoa@n+7,f
  3783  0518  0AC4               	incf	dtoa@n,f
  3784  0519  1D03               	skipz
  3785  051A  2D2E               	goto	u200lld
  3786  051B  0AC5               	incf	dtoa@n+1,f
  3787  051C  1D03               	skipz
  3788  051D  2D2E               	goto	u200lld
  3789  051E  0AC6               	incf	dtoa@n+2,f
  3790  051F  1D03               	skipz
  3791  0520  2D2E               	goto	u200lld
  3792  0521  0AC7               	incf	dtoa@n+3,f
  3793  0522  1D03               	skipz
  3794  0523  2D2E               	goto	u200lld
  3795  0524  0AC8               	incf	dtoa@n+4,f
  3796  0525  1D03               	skipz
  3797  0526  2D2E               	goto	u200lld
  3798  0527  0AC9               	incf	dtoa@n+5,f
  3799  0528  1D03               	skipz
  3800  0529  2D2E               	goto	u200lld
  3801  052A  0ACA               	incf	dtoa@n+6,f
  3802  052B  1D03               	skipz
  3803  052C  2D2E               	goto	u200lld
  3804  052D  0ACB               	incf	dtoa@n+7,f
  3805  052E                     u200lld:
  3806  052E                     l904:	
  3807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3808                           
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3811  052E  0141               	movlb	1	; select bank1
  3812  052F  1BA5               	btfsc	(_prec+1)^(0+128),7
  3813  0530  2D32               	goto	u2011
  3814  0531  2D33               	goto	u2010
  3815  0532                     u2011:
  3816  0532  2D37               	goto	l905
  3817  0533                     u2010:
  3818  0533                     l2339:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3821  0533  30FD               	movlw	253
  3822  0534  05A6               	andwf	_flags^(0+128),f
  3823  0535  30FF               	movlw	255
  3824  0536  05A7               	andwf	(_flags+1)^(0+128),f
  3825  0537                     l905:	
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3827                           
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3830  0537  0825               	movf	(_prec+1)^(0+128),w
  3831  0538  3A80               	xorlw	128
  3832  0539  0140               	movlb	0	; select bank0
  3833  053A  00B8               	movwf	??_dtoa
  3834  053B  3080               	movlw	128
  3835  053C  0238               	subwf	??_dtoa,w
  3836  053D  1D03               	skipz
  3837  053E  2D42               	goto	u2025
  3838  053F  3001               	movlw	1
  3839  0540  0141               	movlb	1	; select bank1
  3840  0541  0224               	subwf	_prec^(0+128),w
  3841  0542                     u2025:
  3842  0542  1803               	skipnc
  3843  0543  2D45               	goto	u2021
  3844  0544  2D46               	goto	u2020
  3845  0545                     u2021:
  3846  0545  2D4C               	goto	l2343
  3847  0546                     u2020:
  3848  0546                     l2341:
  3849  0546  3001               	movlw	1
  3850  0547  0140               	movlb	0	; select bank0
  3851  0548  00BE               	movwf	dtoa@p
  3852  0549  3000               	movlw	0
  3853  054A  00BF               	movwf	dtoa@p+1
  3854  054B  2D54               	goto	l909
  3855  054C                     l2343:
  3856  054C  0141               	movlb	1	; select bank1
  3857  054D  0825               	movf	(_prec+1)^(0+128),w
  3858  054E  0140               	movlb	0	; select bank0
  3859  054F  00BF               	movwf	dtoa@p+1
  3860  0550  0141               	movlb	1	; select bank1
  3861  0551  0824               	movf	_prec^(0+128),w
  3862  0552  0140               	movlb	0	; select bank0
  3863  0553  00BE               	movwf	dtoa@p
  3864  0554                     l909:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3867  0554  0141               	movlb	1	; select bank1
  3868  0555  0823               	movf	(_width+1)^(0+128),w
  3869  0556  0140               	movlb	0	; select bank0
  3870  0557  00C1               	movwf	dtoa@w+1
  3871  0558  0141               	movlb	1	; select bank1
  3872  0559  0822               	movf	_width^(0+128),w
  3873  055A  0140               	movlb	0	; select bank0
  3874  055B  00C0               	movwf	dtoa@w
  3875  055C                     l2345:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3878  055C  0842               	movf	dtoa@s,w
  3879  055D  0443               	iorwf	dtoa@s+1,w
  3880  055E  1D03               	btfss	3,2
  3881  055F  2D61               	goto	u2031
  3882  0560  2D62               	goto	u2030
  3883  0561                     u2031:
  3884  0561  2D67               	goto	l2349
  3885  0562                     u2030:
  3886  0562                     l2347:
  3887  0562  0141               	movlb	1	; select bank1
  3888  0563  1D26               	btfss	_flags^(0+128),2
  3889  0564  2D66               	goto	u2041
  3890  0565  2D67               	goto	u2040
  3891  0566                     u2041:
  3892  0566  2D6C               	goto	l910
  3893  0567                     u2040:
  3894  0567                     l2349:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3897  0567  30FF               	movlw	255
  3898  0568  0140               	movlb	0	; select bank0
  3899  0569  07C0               	addwf	dtoa@w,f
  3900  056A  30FF               	movlw	255
  3901  056B  3DC1               	addwfc	dtoa@w+1,f
  3902  056C                     l910:	
  3903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3904                           
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3907  056C  301F               	movlw	31
  3908  056D  0140               	movlb	0	; select bank0
  3909  056E  00CC               	movwf	dtoa@i
  3910  056F  3000               	movlw	0
  3911  0570  00CD               	movwf	dtoa@i+1
  3912  0571                     l2351:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3915  0571  0141               	movlb	1	; select bank1
  3916  0572  01C9               	clrf	(_dbuf^(0+128)+31)
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3919  0573  2DDC               	goto	l913
  3920  0574                     l2353:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3923  0574  30FF               	movlw	255
  3924  0575  0140               	movlb	0	; select bank0
  3925  0576  07CC               	addwf	dtoa@i,f
  3926  0577  30FF               	movlw	255
  3927  0578  3DCD               	addwfc	dtoa@i+1,f
  3928  0579                     l2355:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3931  0579  300A               	movlw	10
  3932  057A  00A0               	movwf	___aomod@divisor
  3933  057B  01A1               	clrf	___aomod@divisor+1
  3934  057C  01A2               	clrf	___aomod@divisor+2
  3935  057D  01A3               	clrf	___aomod@divisor+3
  3936  057E  01A4               	clrf	___aomod@divisor+4
  3937  057F  01A5               	clrf	___aomod@divisor+5
  3938  0580  01A6               	clrf	___aomod@divisor+6
  3939  0581  01A7               	clrf	___aomod@divisor+7
  3940  0582  0844               	movf	dtoa@n,w
  3941  0583  00A8               	movwf	___aomod@dividend
  3942  0584  0845               	movf	dtoa@n+1,w
  3943  0585  00A9               	movwf	___aomod@dividend+1
  3944  0586  0846               	movf	dtoa@n+2,w
  3945  0587  00AA               	movwf	___aomod@dividend+2
  3946  0588  0847               	movf	dtoa@n+3,w
  3947  0589  00AB               	movwf	___aomod@dividend+3
  3948  058A  0848               	movf	dtoa@n+4,w
  3949  058B  00AC               	movwf	___aomod@dividend+4
  3950  058C  0849               	movf	dtoa@n+5,w
  3951  058D  00AD               	movwf	___aomod@dividend+5
  3952  058E  084A               	movf	dtoa@n+6,w
  3953  058F  00AE               	movwf	___aomod@dividend+6
  3954  0590  084B               	movf	dtoa@n+7,w
  3955  0591  00AF               	movwf	___aomod@dividend+7
  3956  0592  3182  22FA  3184   	fcall	___aomod
  3957  0595  0140               	movlb	0	; select bank0
  3958  0596  0821               	movf	?___aomod+1,w
  3959  0597  00F4               	movwf	abs@a+1
  3960  0598  0820               	movf	?___aomod,w
  3961  0599  00F3               	movwf	abs@a
  3962  059A  318E  26ED  3184   	fcall	_abs
  3963  059D  0873               	movf	?_abs,w
  3964  059E  3E30               	addlw	48
  3965  059F  0140               	movlb	0	; select bank0
  3966  05A0  00B8               	movwf	??_dtoa
  3967  05A1  084C               	movf	dtoa@i,w
  3968  05A2  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  3969  05A3  0086               	movwf	6
  3970  05A4  0187               	clrf	7
  3971  05A5  0838               	movf	??_dtoa,w
  3972  05A6  0081               	movwf	1
  3973  05A7                     l2357:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3976  05A7  30FF               	movlw	255
  3977  05A8  07BE               	addwf	dtoa@p,f
  3978  05A9  30FF               	movlw	255
  3979  05AA  3DBF               	addwfc	dtoa@p+1,f
  3980  05AB                     l2359:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3983  05AB  30FF               	movlw	255
  3984  05AC  07C0               	addwf	dtoa@w,f
  3985  05AD  30FF               	movlw	255
  3986  05AE  3DC1               	addwfc	dtoa@w+1,f
  3987  05AF                     l2361:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3990  05AF  300A               	movlw	10
  3991  05B0  00A0               	movwf	___aodiv@divisor
  3992  05B1  01A1               	clrf	___aodiv@divisor+1
  3993  05B2  01A2               	clrf	___aodiv@divisor+2
  3994  05B3  01A3               	clrf	___aodiv@divisor+3
  3995  05B4  01A4               	clrf	___aodiv@divisor+4
  3996  05B5  01A5               	clrf	___aodiv@divisor+5
  3997  05B6  01A6               	clrf	___aodiv@divisor+6
  3998  05B7  01A7               	clrf	___aodiv@divisor+7
  3999  05B8  0844               	movf	dtoa@n,w
  4000  05B9  00A8               	movwf	___aodiv@dividend
  4001  05BA  0845               	movf	dtoa@n+1,w
  4002  05BB  00A9               	movwf	___aodiv@dividend+1
  4003  05BC  0846               	movf	dtoa@n+2,w
  4004  05BD  00AA               	movwf	___aodiv@dividend+2
  4005  05BE  0847               	movf	dtoa@n+3,w
  4006  05BF  00AB               	movwf	___aodiv@dividend+3
  4007  05C0  0848               	movf	dtoa@n+4,w
  4008  05C1  00AC               	movwf	___aodiv@dividend+4
  4009  05C2  0849               	movf	dtoa@n+5,w
  4010  05C3  00AD               	movwf	___aodiv@dividend+5
  4011  05C4  084A               	movf	dtoa@n+6,w
  4012  05C5  00AE               	movwf	___aodiv@dividend+6
  4013  05C6  084B               	movf	dtoa@n+7,w
  4014  05C7  00AF               	movwf	___aodiv@dividend+7
  4015  05C8  3183  23E4  3184   	fcall	___aodiv
  4016  05CB  0140               	movlb	0	; select bank0
  4017  05CC  0820               	movf	?___aodiv,w
  4018  05CD  00C4               	movwf	dtoa@n
  4019  05CE  0821               	movf	?___aodiv+1,w
  4020  05CF  00C5               	movwf	dtoa@n+1
  4021  05D0  0822               	movf	?___aodiv+2,w
  4022  05D1  00C6               	movwf	dtoa@n+2
  4023  05D2  0823               	movf	?___aodiv+3,w
  4024  05D3  00C7               	movwf	dtoa@n+3
  4025  05D4  0824               	movf	?___aodiv+4,w
  4026  05D5  00C8               	movwf	dtoa@n+4
  4027  05D6  0825               	movf	?___aodiv+5,w
  4028  05D7  00C9               	movwf	dtoa@n+5
  4029  05D8  0826               	movf	?___aodiv+6,w
  4030  05D9  00CA               	movwf	dtoa@n+6
  4031  05DA  0827               	movf	?___aodiv+7,w
  4032  05DB  00CB               	movwf	dtoa@n+7
  4033  05DC                     l913:	
  4034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  4035                           
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4038  05DC  0140               	movlb	0	; select bank0
  4039  05DD  084D               	movf	dtoa@i+1,w
  4040  05DE  3A80               	xorlw	128
  4041  05DF  00B8               	movwf	??_dtoa
  4042  05E0  3080               	movlw	128
  4043  05E1  0238               	subwf	??_dtoa,w
  4044  05E2  1D03               	skipz
  4045  05E3  2DE6               	goto	u2055
  4046  05E4  3001               	movlw	1
  4047  05E5  024C               	subwf	dtoa@i,w
  4048  05E6                     u2055:
  4049  05E6  1C03               	skipc
  4050  05E7  2DE9               	goto	u2051
  4051  05E8  2DEA               	goto	u2050
  4052  05E9                     u2051:
  4053  05E9  2E17               	goto	l2371
  4054  05EA                     u2050:
  4055  05EA                     l2363:
  4056  05EA  0140               	movlb	0	; select bank0
  4057  05EB  0844               	movf	dtoa@n,w
  4058  05EC  0445               	iorwf	dtoa@n+1,w
  4059  05ED  0446               	iorwf	dtoa@n+2,w
  4060  05EE  0447               	iorwf	dtoa@n+3,w
  4061  05EF  0448               	iorwf	dtoa@n+4,w
  4062  05F0  0449               	iorwf	dtoa@n+5,w
  4063  05F1  044A               	iorwf	dtoa@n+6,w
  4064  05F2  044B               	iorwf	dtoa@n+7,w
  4065  05F3  1D03               	skipz
  4066  05F4  2DF6               	goto	u2061
  4067  05F5  2DF7               	goto	u2060
  4068  05F6                     u2061:
  4069  05F6  2D74               	goto	l2353
  4070  05F7                     u2060:
  4071  05F7                     l2365:
  4072  05F7  083F               	movf	dtoa@p+1,w
  4073  05F8  3A80               	xorlw	128
  4074  05F9  00B8               	movwf	??_dtoa
  4075  05FA  3080               	movlw	128
  4076  05FB  0238               	subwf	??_dtoa,w
  4077  05FC  1D03               	skipz
  4078  05FD  2E00               	goto	u2075
  4079  05FE  3001               	movlw	1
  4080  05FF  023E               	subwf	dtoa@p,w
  4081  0600                     u2075:
  4082  0600  1803               	skipnc
  4083  0601  2E03               	goto	u2071
  4084  0602  2E04               	goto	u2070
  4085  0603                     u2071:
  4086  0603  2D74               	goto	l2353
  4087  0604                     u2070:
  4088  0604                     l2367:
  4089  0604  0140               	movlb	0	; select bank0
  4090  0605  0841               	movf	dtoa@w+1,w
  4091  0606  3A80               	xorlw	128
  4092  0607  00B8               	movwf	??_dtoa
  4093  0608  3080               	movlw	128
  4094  0609  0238               	subwf	??_dtoa,w
  4095  060A  1D03               	skipz
  4096  060B  2E0E               	goto	u2085
  4097  060C  3001               	movlw	1
  4098  060D  0240               	subwf	dtoa@w,w
  4099  060E                     u2085:
  4100  060E  1C03               	skipc
  4101  060F  2E11               	goto	u2081
  4102  0610  2E12               	goto	u2080
  4103  0611                     u2081:
  4104  0611  2E17               	goto	l2371
  4105  0612                     u2080:
  4106  0612                     l2369:
  4107  0612  0141               	movlb	1	; select bank1
  4108  0613  18A6               	btfsc	_flags^(0+128),1
  4109  0614  2E16               	goto	u2091
  4110  0615  2E17               	goto	u2090
  4111  0616                     u2091:
  4112  0616  2D74               	goto	l2353
  4113  0617                     u2090:
  4114  0617                     l2371:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4117  0617  0140               	movlb	0	; select bank0
  4118  0618  0842               	movf	dtoa@s,w
  4119  0619  0443               	iorwf	dtoa@s+1,w
  4120  061A  1D03               	btfss	3,2
  4121  061B  2E1D               	goto	u2101
  4122  061C  2E1E               	goto	u2100
  4123  061D                     u2101:
  4124  061D  2E23               	goto	l2375
  4125  061E                     u2100:
  4126  061E                     l2373:
  4127  061E  0141               	movlb	1	; select bank1
  4128  061F  1D26               	btfss	_flags^(0+128),2
  4129  0620  2E22               	goto	u2111
  4130  0621  2E23               	goto	u2110
  4131  0622                     u2111:
  4132  0622  2E3F               	goto	l2385
  4133  0623                     u2110:
  4134  0623                     l2375:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4137  0623  30FF               	movlw	255
  4138  0624  0140               	movlb	0	; select bank0
  4139  0625  07CC               	addwf	dtoa@i,f
  4140  0626  30FF               	movlw	255
  4141  0627  3DCD               	addwfc	dtoa@i+1,f
  4142  0628                     l2377:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4145  0628  0842               	movf	dtoa@s,w
  4146  0629  0443               	iorwf	dtoa@s+1,w
  4147  062A  1D03               	btfss	3,2
  4148  062B  2E2D               	goto	u2121
  4149  062C  2E2E               	goto	u2120
  4150  062D                     u2121:
  4151  062D  2E33               	goto	l2381
  4152  062E                     u2120:
  4153  062E                     l2379:
  4154  062E  302B               	movlw	43
  4155  062F  00BB               	movwf	_dtoa$842
  4156  0630  3000               	movlw	0
  4157  0631  00BC               	movwf	_dtoa$842+1
  4158  0632  2E37               	goto	l2383
  4159  0633                     l2381:
  4160  0633  302D               	movlw	45
  4161  0634  00BB               	movwf	_dtoa$842
  4162  0635  3000               	movlw	0
  4163  0636  00BC               	movwf	_dtoa$842+1
  4164  0637                     l2383:
  4165  0637  083B               	movf	_dtoa$842,w
  4166  0638  00B8               	movwf	??_dtoa
  4167  0639  084C               	movf	dtoa@i,w
  4168  063A  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  4169  063B  0086               	movwf	6
  4170  063C  0187               	clrf	7
  4171  063D  0838               	movf	??_dtoa,w
  4172  063E  0081               	movwf	1
  4173  063F                     l2385:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4176  063F  0140               	movlb	0	; select bank0
  4177  0640  084C               	movf	dtoa@i,w
  4178  0641  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  4179  0642  00B8               	movwf	??_dtoa
  4180  0643  0838               	movf	??_dtoa,w
  4181  0644  00A6               	movwf	pad@buf
  4182  0645  0841               	movf	dtoa@w+1,w
  4183  0646  00A8               	movwf	pad@p+1
  4184  0647  0840               	movf	dtoa@w,w
  4185  0648  00A7               	movwf	pad@p
  4186  0649  083D               	movf	dtoa@fp,w
  4187  064A  3180  20DB  3184   	fcall	_pad
  4188  064D  0140               	movlb	0	; select bank0
  4189  064E  0827               	movf	?_pad+1,w
  4190  064F  00B1               	movwf	?_dtoa+1
  4191  0650  0826               	movf	?_pad,w
  4192  0651  00B0               	movwf	?_dtoa
  4193  0652                     l927:
  4194  0652  0008               	return
  4195  0653                     __end_of_dtoa:
  4196                           
  4197                           	psect	text7
  4198  00DB                     __ptext7:	
  4199 ;; *************** function _pad *****************
  4200 ;; Defined at:
  4201 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  fp              1    wreg     PTR struct _IO_FILE
  4204 ;;		 -> NULL(0), 
  4205 ;;  buf             1    6[BANK0 ] PTR unsigned char 
  4206 ;;		 -> dbuf(32), 
  4207 ;;  p               2    7[BANK0 ] int 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  4210 ;;		 -> NULL(0), 
  4211 ;;  w               2   11[BANK0 ] int 
  4212 ;;  i               2    9[BANK0 ] int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2    6[BANK0 ] int 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4222 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;Total ram usage:        9 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    4
  4229 ;; This function calls:
  4230 ;;		_fputc
  4231 ;;		_fputs
  4232 ;;		_strlen
  4233 ;; This function is called by:
  4234 ;;		_dtoa
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function _pad
  4240  00DB                     _pad:
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4244                           ;pad@fp stored from wreg
  4245  00DB  0140               	movlb	0	; select bank0
  4246  00DC  00AD               	movwf	pad@fp
  4247  00DD                     l2311:
  4248                           
  4249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4250  00DD  0141               	movlb	1	; select bank1
  4251  00DE  1C26               	btfss	_flags^(0+128),0
  4252  00DF  28E1               	goto	u1931
  4253  00E0  28E2               	goto	u1930
  4254  00E1                     u1931:
  4255  00E1  28EE               	goto	l2315
  4256  00E2                     u1930:
  4257  00E2                     l2313:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4260  00E2  0140               	movlb	0	; select bank0
  4261  00E3  0826               	movf	pad@buf,w
  4262  00E4  00FA               	movwf	fputs@s
  4263  00E5  3000               	movlw	0
  4264  00E6  00FB               	movwf	fputs@s+1
  4265  00E7  082D               	movf	pad@fp,w
  4266  00E8  00FD               	movwf	??_pad
  4267  00E9  087D               	movf	??_pad,w
  4268  00EA  00FC               	movwf	fputs@fp
  4269  00EB  318F  27D5  3180   	fcall	_fputs
  4270  00EE                     l2315:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4273  00EE  0140               	movlb	0	; select bank0
  4274  00EF  1BA8               	btfsc	pad@p+1,7
  4275  00F0  28F2               	goto	u1941
  4276  00F1  28F3               	goto	u1940
  4277  00F2                     u1941:
  4278  00F2  28F8               	goto	l2319
  4279  00F3                     u1940:
  4280  00F3                     l2317:
  4281  00F3  0828               	movf	pad@p+1,w
  4282  00F4  00AC               	movwf	pad@w+1
  4283  00F5  0827               	movf	pad@p,w
  4284  00F6  00AB               	movwf	pad@w
  4285  00F7  28FA               	goto	l880
  4286  00F8                     l2319:
  4287  00F8  01AB               	clrf	pad@w
  4288  00F9  01AC               	clrf	pad@w+1
  4289  00FA                     l880:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4292  00FA  01A9               	clrf	pad@i
  4293  00FB  01AA               	clrf	pad@i+1
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4296  00FC  290E               	goto	l2325
  4297  00FD                     l2321:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4300  00FD  3020               	movlw	32
  4301  00FE  00F2               	movwf	fputc@c
  4302  00FF  3000               	movlw	0
  4303  0100  00F3               	movwf	fputc@c+1
  4304  0101  0140               	movlb	0	; select bank0
  4305  0102  082D               	movf	pad@fp,w
  4306  0103  00FD               	movwf	??_pad
  4307  0104  087D               	movf	??_pad,w
  4308  0105  00F4               	movwf	fputc@fp
  4309  0106  3180  2045  3180   	fcall	_fputc
  4310  0109                     l2323:
  4311                           
  4312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4313  0109  3001               	movlw	1
  4314  010A  0140               	movlb	0	; select bank0
  4315  010B  07A9               	addwf	pad@i,f
  4316  010C  3000               	movlw	0
  4317  010D  3DAA               	addwfc	pad@i+1,f
  4318  010E                     l2325:
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4321  010E  082A               	movf	pad@i+1,w
  4322  010F  3A80               	xorlw	128
  4323  0110  00FD               	movwf	??_pad
  4324  0111  082C               	movf	pad@w+1,w
  4325  0112  3A80               	xorlw	128
  4326  0113  027D               	subwf	??_pad,w
  4327  0114  1D03               	skipz
  4328  0115  2918               	goto	u1955
  4329  0116  082B               	movf	pad@w,w
  4330  0117  0229               	subwf	pad@i,w
  4331  0118                     u1955:
  4332  0118  1C03               	skipc
  4333  0119  291B               	goto	u1951
  4334  011A  291C               	goto	u1950
  4335  011B                     u1951:
  4336  011B  28FD               	goto	l2321
  4337  011C                     u1950:
  4338  011C                     l883:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4341  011C  0141               	movlb	1	; select bank1
  4342  011D  1826               	btfsc	_flags^(0+128),0
  4343  011E  2920               	goto	u1961
  4344  011F  2921               	goto	u1960
  4345  0120                     u1961:
  4346  0120  292D               	goto	l884
  4347  0121                     u1960:
  4348  0121                     l2327:
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4351  0121  0140               	movlb	0	; select bank0
  4352  0122  0826               	movf	pad@buf,w
  4353  0123  00FA               	movwf	fputs@s
  4354  0124  3000               	movlw	0
  4355  0125  00FB               	movwf	fputs@s+1
  4356  0126  082D               	movf	pad@fp,w
  4357  0127  00FD               	movwf	??_pad
  4358  0128  087D               	movf	??_pad,w
  4359  0129  00FC               	movwf	fputs@fp
  4360  012A  318F  27D5  3180   	fcall	_fputs
  4361  012D                     l884:	
  4362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 92:     }
  4363                           
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4366  012D  0140               	movlb	0	; select bank0
  4367  012E  0826               	movf	pad@buf,w
  4368  012F  318E  26BB  3180   	fcall	_strlen
  4369  0132  0140               	movlb	0	; select bank0
  4370  0133  082B               	movf	pad@w,w
  4371  0134  0770               	addwf	?_strlen,w
  4372  0135  00A6               	movwf	?_pad
  4373  0136  082C               	movf	pad@w+1,w
  4374  0137  3D71               	addwfc	?_strlen+1,w
  4375  0138  00A7               	movwf	?_pad+1
  4376  0139                     l885:
  4377  0139  0008               	return
  4378  013A                     __end_of_pad:
  4379                           
  4380                           	psect	text8
  4381  0EBB                     __ptext8:	
  4382 ;; *************** function _strlen *****************
  4383 ;; Defined at:
  4384 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  s               1    wreg     PTR const unsigned char 
  4387 ;;		 -> dbuf(32), main@s1(5), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  s               1    4[COMMON] PTR const unsigned char 
  4390 ;;		 -> dbuf(32), main@s1(5), 
  4391 ;;  a               1    3[COMMON] PTR const unsigned char 
  4392 ;;		 -> dbuf(32), main@s1(5), 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    0[COMMON] unsigned int 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        5 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;;		_pad
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _strlen
  4418  0EBB                     _strlen:
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4422                           ;strlen@s stored from wreg
  4423  0EBB  00F4               	movwf	strlen@s
  4424  0EBC                     l1717:
  4425  0EBC  0874               	movf	strlen@s,w
  4426  0EBD  00F2               	movwf	??_strlen
  4427  0EBE  0872               	movf	??_strlen,w
  4428  0EBF  00F3               	movwf	strlen@a
  4429  0EC0  2EC5               	goto	l1721
  4430  0EC1                     l1719:
  4431  0EC1  3001               	movlw	1
  4432  0EC2  00F2               	movwf	??_strlen
  4433  0EC3  0872               	movf	??_strlen,w
  4434  0EC4  07F4               	addwf	strlen@s,f
  4435  0EC5                     l1721:
  4436  0EC5  0874               	movf	strlen@s,w
  4437  0EC6  0086               	movwf	6
  4438  0EC7  0187               	clrf	7
  4439  0EC8  0801               	movf	1,w
  4440  0EC9  1D03               	btfss	3,2
  4441  0ECA  2ECC               	goto	u1041
  4442  0ECB  2ECD               	goto	u1040
  4443  0ECC                     u1041:
  4444  0ECC  2EC1               	goto	l1719
  4445  0ECD                     u1040:
  4446  0ECD                     l1723:
  4447  0ECD  0873               	movf	strlen@a,w
  4448  0ECE  0274               	subwf	strlen@s,w
  4449  0ECF  00F0               	movwf	?_strlen
  4450  0ED0  01F1               	clrf	?_strlen+1
  4451  0ED1  1BF0               	btfsc	?_strlen,7
  4452  0ED2  03F1               	decf	?_strlen+1,f
  4453  0ED3                     l1045:
  4454  0ED3  0008               	return
  4455  0ED4                     __end_of_strlen:
  4456                           
  4457                           	psect	text9
  4458  0FD5                     __ptext9:	
  4459 ;; *************** function _fputs *****************
  4460 ;; Defined at:
  4461 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  s               2   10[COMMON] PTR const unsigned char 
  4464 ;;		 -> dbuf(32), main@sentence(80), 
  4465 ;;  fp              1   12[COMMON] PTR struct _IO_FILE
  4466 ;;		 -> NULL(0), 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  i               2    4[BANK0 ] int 
  4469 ;;  c               1    3[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  2   10[COMMON] int 
  4472 ;; Registers used:
  4473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4479 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;Total ram usage:        9 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    3
  4486 ;; This function calls:
  4487 ;;		_fputc
  4488 ;; This function is called by:
  4489 ;;		_pad
  4490 ;;		_puts
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function _fputs
  4496  0FD5                     _fputs:
  4497  0FD5                     l2299:	
  4498                           ;incstack = 0
  4499                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4500                           
  4501  0FD5  0140               	movlb	0	; select bank0
  4502  0FD6  01A4               	clrf	fputs@i
  4503  0FD7  01A5               	clrf	fputs@i+1
  4504  0FD8  2FEC               	goto	l2305
  4505  0FD9                     l2301:
  4506  0FD9  0823               	movf	fputs@c,w
  4507  0FDA  00A0               	movwf	??_fputs
  4508  0FDB  01A1               	clrf	??_fputs+1
  4509  0FDC  0820               	movf	??_fputs,w
  4510  0FDD  00F2               	movwf	fputc@c
  4511  0FDE  0821               	movf	??_fputs+1,w
  4512  0FDF  00F3               	movwf	fputc@c+1
  4513  0FE0  087C               	movf	fputs@fp,w
  4514  0FE1  00A2               	movwf	??_fputs+2
  4515  0FE2  0822               	movf	??_fputs+2,w
  4516  0FE3  00F4               	movwf	fputc@fp
  4517  0FE4  3180  2045  318F   	fcall	_fputc
  4518  0FE7                     l2303:
  4519  0FE7  3001               	movlw	1
  4520  0FE8  0140               	movlb	0	; select bank0
  4521  0FE9  07A4               	addwf	fputs@i,f
  4522  0FEA  3000               	movlw	0
  4523  0FEB  3DA5               	addwfc	fputs@i+1,f
  4524  0FEC                     l2305:
  4525  0FEC  0824               	movf	fputs@i,w
  4526  0FED  077A               	addwf	fputs@s,w
  4527  0FEE  0086               	movwf	6
  4528  0FEF  0825               	movf	fputs@i+1,w
  4529  0FF0  3D7B               	addwfc	fputs@s+1,w
  4530  0FF1  0087               	movwf	7
  4531  0FF2  0801               	movf	1,w
  4532  0FF3  00A0               	movwf	??_fputs
  4533  0FF4  0820               	movf	??_fputs,w
  4534  0FF5  00A3               	movwf	fputs@c
  4535  0FF6  0823               	movf	fputs@c,w
  4536  0FF7  1D03               	btfss	3,2
  4537  0FF8  2FFA               	goto	u1921
  4538  0FF9  2FFB               	goto	u1920
  4539  0FFA                     u1921:
  4540  0FFA  2FD9               	goto	l2301
  4541  0FFB                     u1920:
  4542  0FFB                     l2307:
  4543  0FFB  0825               	movf	fputs@i+1,w
  4544  0FFC  00FB               	movwf	?_fputs+1
  4545  0FFD  0824               	movf	fputs@i,w
  4546  0FFE  00FA               	movwf	?_fputs
  4547  0FFF                     l1024:
  4548  0FFF  0008               	return
  4549  1000                     __end_of_fputs:
  4550                           
  4551                           	psect	text10
  4552  0EED                     __ptext10:	
  4553 ;; *************** function _abs *****************
  4554 ;; Defined at:
  4555 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  a               2    3[COMMON] int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    3[COMMON] int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        4 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_dtoa
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _abs
  4584  0EED                     _abs:
  4585  0EED                     l1841:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _abs: [wreg+status,2+status,0]
  4588                           
  4589  0EED  0874               	movf	abs@a+1,w
  4590  0EEE  3A80               	xorlw	128
  4591  0EEF  00F5               	movwf	??_abs
  4592  0EF0  3080               	movlw	128
  4593  0EF1  0275               	subwf	??_abs,w
  4594  0EF2  1D03               	skipz
  4595  0EF3  2EF6               	goto	u1355
  4596  0EF4  3001               	movlw	1
  4597  0EF5  0273               	subwf	abs@a,w
  4598  0EF6                     u1355:
  4599  0EF6  1803               	skipnc
  4600  0EF7  2EF9               	goto	u1351
  4601  0EF8  2EFA               	goto	u1350
  4602  0EF9                     u1351:
  4603  0EF9  2F06               	goto	l956
  4604  0EFA                     u1350:
  4605  0EFA                     l1843:
  4606  0EFA  0973               	comf	abs@a,w
  4607  0EFB  00F5               	movwf	??_abs
  4608  0EFC  0974               	comf	abs@a+1,w
  4609  0EFD  00F6               	movwf	??_abs+1
  4610  0EFE  0AF5               	incf	??_abs,f
  4611  0EFF  1903               	skipnz
  4612  0F00  0AF6               	incf	??_abs+1,f
  4613  0F01  0875               	movf	??_abs,w
  4614  0F02  00F3               	movwf	?_abs
  4615  0F03  0876               	movf	??_abs+1,w
  4616  0F04  00F4               	movwf	?_abs+1
  4617  0F05  2F06               	goto	l959
  4618  0F06                     l956:
  4619  0F06                     l959:
  4620  0F06  0008               	return
  4621  0F07                     __end_of_abs:
  4622                           
  4623                           	psect	text11
  4624  02FA                     __ptext11:	
  4625 ;; *************** function ___aomod *****************
  4626 ;; Defined at:
  4627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  divisor         8    0[BANK0 ] long long 
  4630 ;;  dividend        8    8[BANK0 ] long long 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  sign            1    2[COMMON] unsigned char 
  4633 ;;  counter         1    1[COMMON] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  8    0[BANK0 ] long long 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4643 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;Total ram usage:       19 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_dtoa
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function ___aomod
  4658  02FA                     ___aomod:
  4659  02FA                     l1791:	
  4660                           ;incstack = 0
  4661                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4662                           
  4663  02FA  01F2               	clrf	___aomod@sign
  4664  02FB                     l1793:
  4665  02FB  3028               	movlw	low ___aomod@dividend
  4666  02FC  0086               	movwf	6
  4667  02FD  3000               	movlw	high ___aomod@dividend
  4668  02FE  0087               	movwf	7
  4669  02FF  3F47               	moviw [7]fsr1
  4670  0300  00F0               	movwf	??___aomod
  4671  0301  1FF0               	btfss	??___aomod,7
  4672  0302  2B04               	goto	u1211
  4673  0303  2B05               	goto	u1210
  4674  0304                     u1211:
  4675  0304  2B26               	goto	l1797
  4676  0305                     u1210:
  4677  0305                     l1795:
  4678  0305  0140               	movlb	0	; select bank0
  4679  0306  09A8               	comf	___aomod@dividend,f
  4680  0307  09A9               	comf	___aomod@dividend+1,f
  4681  0308  09AA               	comf	___aomod@dividend+2,f
  4682  0309  09AB               	comf	___aomod@dividend+3,f
  4683  030A  09AC               	comf	___aomod@dividend+4,f
  4684  030B  09AD               	comf	___aomod@dividend+5,f
  4685  030C  09AE               	comf	___aomod@dividend+6,f
  4686  030D  09AF               	comf	___aomod@dividend+7,f
  4687  030E  0AA8               	incf	___aomod@dividend,f
  4688  030F  1D03               	skipz
  4689  0310  2B24               	goto	u122lld
  4690  0311  0AA9               	incf	___aomod@dividend+1,f
  4691  0312  1D03               	skipz
  4692  0313  2B24               	goto	u122lld
  4693  0314  0AAA               	incf	___aomod@dividend+2,f
  4694  0315  1D03               	skipz
  4695  0316  2B24               	goto	u122lld
  4696  0317  0AAB               	incf	___aomod@dividend+3,f
  4697  0318  1D03               	skipz
  4698  0319  2B24               	goto	u122lld
  4699  031A  0AAC               	incf	___aomod@dividend+4,f
  4700  031B  1D03               	skipz
  4701  031C  2B24               	goto	u122lld
  4702  031D  0AAD               	incf	___aomod@dividend+5,f
  4703  031E  1D03               	skipz
  4704  031F  2B24               	goto	u122lld
  4705  0320  0AAE               	incf	___aomod@dividend+6,f
  4706  0321  1D03               	skipz
  4707  0322  2B24               	goto	u122lld
  4708  0323  0AAF               	incf	___aomod@dividend+7,f
  4709  0324                     u122lld:
  4710  0324  01F2               	clrf	___aomod@sign
  4711  0325  0AF2               	incf	___aomod@sign,f
  4712  0326                     l1797:
  4713  0326  3020               	movlw	low ___aomod@divisor
  4714  0327  0086               	movwf	6
  4715  0328  3000               	movlw	high ___aomod@divisor
  4716  0329  0087               	movwf	7
  4717  032A  3F47               	moviw [7]fsr1
  4718  032B  00F0               	movwf	??___aomod
  4719  032C  1FF0               	btfss	??___aomod,7
  4720  032D  2B2F               	goto	u1231
  4721  032E  2B30               	goto	u1230
  4722  032F                     u1231:
  4723  032F  2B4F               	goto	l1801
  4724  0330                     u1230:
  4725  0330                     l1799:
  4726  0330  0140               	movlb	0	; select bank0
  4727  0331  09A0               	comf	___aomod@divisor,f
  4728  0332  09A1               	comf	___aomod@divisor+1,f
  4729  0333  09A2               	comf	___aomod@divisor+2,f
  4730  0334  09A3               	comf	___aomod@divisor+3,f
  4731  0335  09A4               	comf	___aomod@divisor+4,f
  4732  0336  09A5               	comf	___aomod@divisor+5,f
  4733  0337  09A6               	comf	___aomod@divisor+6,f
  4734  0338  09A7               	comf	___aomod@divisor+7,f
  4735  0339  0AA0               	incf	___aomod@divisor,f
  4736  033A  1D03               	skipz
  4737  033B  2B4F               	goto	u124lld
  4738  033C  0AA1               	incf	___aomod@divisor+1,f
  4739  033D  1D03               	skipz
  4740  033E  2B4F               	goto	u124lld
  4741  033F  0AA2               	incf	___aomod@divisor+2,f
  4742  0340  1D03               	skipz
  4743  0341  2B4F               	goto	u124lld
  4744  0342  0AA3               	incf	___aomod@divisor+3,f
  4745  0343  1D03               	skipz
  4746  0344  2B4F               	goto	u124lld
  4747  0345  0AA4               	incf	___aomod@divisor+4,f
  4748  0346  1D03               	skipz
  4749  0347  2B4F               	goto	u124lld
  4750  0348  0AA5               	incf	___aomod@divisor+5,f
  4751  0349  1D03               	skipz
  4752  034A  2B4F               	goto	u124lld
  4753  034B  0AA6               	incf	___aomod@divisor+6,f
  4754  034C  1D03               	skipz
  4755  034D  2B4F               	goto	u124lld
  4756  034E  0AA7               	incf	___aomod@divisor+7,f
  4757  034F                     u124lld:
  4758  034F                     l1801:
  4759  034F  0140               	movlb	0	; select bank0
  4760  0350  0820               	movf	___aomod@divisor,w
  4761  0351  0421               	iorwf	___aomod@divisor+1,w
  4762  0352  0422               	iorwf	___aomod@divisor+2,w
  4763  0353  0423               	iorwf	___aomod@divisor+3,w
  4764  0354  0424               	iorwf	___aomod@divisor+4,w
  4765  0355  0425               	iorwf	___aomod@divisor+5,w
  4766  0356  0426               	iorwf	___aomod@divisor+6,w
  4767  0357  0427               	iorwf	___aomod@divisor+7,w
  4768  0358  1903               	skipnz
  4769  0359  2B5B               	goto	u1251
  4770  035A  2B5C               	goto	u1250
  4771  035B                     u1251:
  4772  035B  2BAF               	goto	l1817
  4773  035C                     u1250:
  4774  035C                     l1803:
  4775  035C  01F1               	clrf	___aomod@counter
  4776  035D  0AF1               	incf	___aomod@counter,f
  4777  035E  2B6B               	goto	l1809
  4778  035F                     l1805:
  4779  035F  35A0               	lslf	___aomod@divisor,f
  4780  0360  0DA1               	rlf	___aomod@divisor+1,f
  4781  0361  0DA2               	rlf	___aomod@divisor+2,f
  4782  0362  0DA3               	rlf	___aomod@divisor+3,f
  4783  0363  0DA4               	rlf	___aomod@divisor+4,f
  4784  0364  0DA5               	rlf	___aomod@divisor+5,f
  4785  0365  0DA6               	rlf	___aomod@divisor+6,f
  4786  0366  0DA7               	rlf	___aomod@divisor+7,f
  4787  0367                     l1807:
  4788  0367  3001               	movlw	1
  4789  0368  00F0               	movwf	??___aomod
  4790  0369  0870               	movf	??___aomod,w
  4791  036A  07F1               	addwf	___aomod@counter,f
  4792  036B                     l1809:
  4793  036B  1FA7               	btfss	___aomod@divisor+7,7
  4794  036C  2B6E               	goto	u1261
  4795  036D  2B6F               	goto	u1260
  4796  036E                     u1261:
  4797  036E  2B5F               	goto	l1805
  4798  036F                     u1260:
  4799  036F                     l1811:
  4800  036F  0827               	movf	___aomod@divisor+7,w
  4801  0370  022F               	subwf	___aomod@dividend+7,w
  4802  0371  1D03               	skipz
  4803  0372  2B8D               	goto	u1275
  4804  0373  0826               	movf	___aomod@divisor+6,w
  4805  0374  022E               	subwf	___aomod@dividend+6,w
  4806  0375  1D03               	skipz
  4807  0376  2B8D               	goto	u1275
  4808  0377  0825               	movf	___aomod@divisor+5,w
  4809  0378  022D               	subwf	___aomod@dividend+5,w
  4810  0379  1D03               	skipz
  4811  037A  2B8D               	goto	u1275
  4812  037B  0824               	movf	___aomod@divisor+4,w
  4813  037C  022C               	subwf	___aomod@dividend+4,w
  4814  037D  1D03               	skipz
  4815  037E  2B8D               	goto	u1275
  4816  037F  0823               	movf	___aomod@divisor+3,w
  4817  0380  022B               	subwf	___aomod@dividend+3,w
  4818  0381  1D03               	skipz
  4819  0382  2B8D               	goto	u1275
  4820  0383  0822               	movf	___aomod@divisor+2,w
  4821  0384  022A               	subwf	___aomod@dividend+2,w
  4822  0385  1D03               	skipz
  4823  0386  2B8D               	goto	u1275
  4824  0387  0821               	movf	___aomod@divisor+1,w
  4825  0388  0229               	subwf	___aomod@dividend+1,w
  4826  0389  1D03               	skipz
  4827  038A  2B8D               	goto	u1275
  4828  038B  0820               	movf	___aomod@divisor,w
  4829  038C  0228               	subwf	___aomod@dividend,w
  4830  038D                     u1275:
  4831  038D  1C03               	skipc
  4832  038E  2B90               	goto	u1271
  4833  038F  2B91               	goto	u1270
  4834  0390                     u1271:
  4835  0390  2BA1               	goto	l1815
  4836  0391                     u1270:
  4837  0391                     l1813:
  4838  0391  0820               	movf	___aomod@divisor,w
  4839  0392  02A8               	subwf	___aomod@dividend,f
  4840  0393  0821               	movf	___aomod@divisor+1,w
  4841  0394  3BA9               	subwfb	___aomod@dividend+1,f
  4842  0395  0822               	movf	___aomod@divisor+2,w
  4843  0396  3BAA               	subwfb	___aomod@dividend+2,f
  4844  0397  0823               	movf	___aomod@divisor+3,w
  4845  0398  3BAB               	subwfb	___aomod@dividend+3,f
  4846  0399  0824               	movf	___aomod@divisor+4,w
  4847  039A  3BAC               	subwfb	___aomod@dividend+4,f
  4848  039B  0825               	movf	___aomod@divisor+5,w
  4849  039C  3BAD               	subwfb	___aomod@dividend+5,f
  4850  039D  0826               	movf	___aomod@divisor+6,w
  4851  039E  3BAE               	subwfb	___aomod@dividend+6,f
  4852  039F  0827               	movf	___aomod@divisor+7,w
  4853  03A0  3BAF               	subwfb	___aomod@dividend+7,f
  4854  03A1                     l1815:
  4855  03A1  36A7               	lsrf	___aomod@divisor+7,f
  4856  03A2  0CA6               	rrf	___aomod@divisor+6,f
  4857  03A3  0CA5               	rrf	___aomod@divisor+5,f
  4858  03A4  0CA4               	rrf	___aomod@divisor+4,f
  4859  03A5  0CA3               	rrf	___aomod@divisor+3,f
  4860  03A6  0CA2               	rrf	___aomod@divisor+2,f
  4861  03A7  0CA1               	rrf	___aomod@divisor+1,f
  4862  03A8  0CA0               	rrf	___aomod@divisor,f
  4863  03A9  3001               	movlw	1
  4864  03AA  02F1               	subwf	___aomod@counter,f
  4865  03AB  1D03               	btfss	3,2
  4866  03AC  2BAE               	goto	u1281
  4867  03AD  2BAF               	goto	u1280
  4868  03AE                     u1281:
  4869  03AE  2B6F               	goto	l1811
  4870  03AF                     u1280:
  4871  03AF                     l1817:
  4872  03AF  0872               	movf	___aomod@sign,w
  4873  03B0  1903               	btfsc	3,2
  4874  03B1  2BB3               	goto	u1291
  4875  03B2  2BB4               	goto	u1290
  4876  03B3                     u1291:
  4877  03B3  2BD2               	goto	l499
  4878  03B4                     u1290:
  4879  03B4                     l1819:
  4880  03B4  09A8               	comf	___aomod@dividend,f
  4881  03B5  09A9               	comf	___aomod@dividend+1,f
  4882  03B6  09AA               	comf	___aomod@dividend+2,f
  4883  03B7  09AB               	comf	___aomod@dividend+3,f
  4884  03B8  09AC               	comf	___aomod@dividend+4,f
  4885  03B9  09AD               	comf	___aomod@dividend+5,f
  4886  03BA  09AE               	comf	___aomod@dividend+6,f
  4887  03BB  09AF               	comf	___aomod@dividend+7,f
  4888  03BC  0AA8               	incf	___aomod@dividend,f
  4889  03BD  1D03               	skipz
  4890  03BE  2BD2               	goto	u130lld
  4891  03BF  0AA9               	incf	___aomod@dividend+1,f
  4892  03C0  1D03               	skipz
  4893  03C1  2BD2               	goto	u130lld
  4894  03C2  0AAA               	incf	___aomod@dividend+2,f
  4895  03C3  1D03               	skipz
  4896  03C4  2BD2               	goto	u130lld
  4897  03C5  0AAB               	incf	___aomod@dividend+3,f
  4898  03C6  1D03               	skipz
  4899  03C7  2BD2               	goto	u130lld
  4900  03C8  0AAC               	incf	___aomod@dividend+4,f
  4901  03C9  1D03               	skipz
  4902  03CA  2BD2               	goto	u130lld
  4903  03CB  0AAD               	incf	___aomod@dividend+5,f
  4904  03CC  1D03               	skipz
  4905  03CD  2BD2               	goto	u130lld
  4906  03CE  0AAE               	incf	___aomod@dividend+6,f
  4907  03CF  1D03               	skipz
  4908  03D0  2BD2               	goto	u130lld
  4909  03D1  0AAF               	incf	___aomod@dividend+7,f
  4910  03D2                     u130lld:
  4911  03D2                     l499:
  4912  03D2  0140               	movlb	0	; select bank0
  4913  03D3  0828               	movf	___aomod@dividend,w
  4914  03D4  00A0               	movwf	?___aomod
  4915  03D5  0829               	movf	___aomod@dividend+1,w
  4916  03D6  00A1               	movwf	?___aomod+1
  4917  03D7  082A               	movf	___aomod@dividend+2,w
  4918  03D8  00A2               	movwf	?___aomod+2
  4919  03D9  082B               	movf	___aomod@dividend+3,w
  4920  03DA  00A3               	movwf	?___aomod+3
  4921  03DB  082C               	movf	___aomod@dividend+4,w
  4922  03DC  00A4               	movwf	?___aomod+4
  4923  03DD  082D               	movf	___aomod@dividend+5,w
  4924  03DE  00A5               	movwf	?___aomod+5
  4925  03DF  082E               	movf	___aomod@dividend+6,w
  4926  03E0  00A6               	movwf	?___aomod+6
  4927  03E1  082F               	movf	___aomod@dividend+7,w
  4928  03E2  00A7               	movwf	?___aomod+7
  4929  03E3                     l500:
  4930  03E3  0008               	return
  4931  03E4                     __end_of___aomod:
  4932                           
  4933                           	psect	text12
  4934  03E4                     __ptext12:	
  4935 ;; *************** function ___aodiv *****************
  4936 ;; Defined at:
  4937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  divisor         8    0[BANK0 ] long long 
  4940 ;;  dividend        8    8[BANK0 ] long long 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  quotient        8    3[COMMON] long long 
  4943 ;;  sign            1    2[COMMON] unsigned char 
  4944 ;;  counter         1    1[COMMON] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  8    0[BANK0 ] long long 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:       27 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_dtoa
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function ___aodiv
  4969  03E4                     ___aodiv:
  4970  03E4                     l1753:	
  4971                           ;incstack = 0
  4972                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4973                           
  4974  03E4  01F2               	clrf	___aodiv@sign
  4975  03E5                     l1755:
  4976  03E5  3020               	movlw	low ___aodiv@divisor
  4977  03E6  0086               	movwf	6
  4978  03E7  3000               	movlw	high ___aodiv@divisor
  4979  03E8  0087               	movwf	7
  4980  03E9  3F47               	moviw [7]fsr1
  4981  03EA  00F0               	movwf	??___aodiv
  4982  03EB  1FF0               	btfss	??___aodiv,7
  4983  03EC  2BEE               	goto	u1101
  4984  03ED  2BEF               	goto	u1100
  4985  03EE                     u1101:
  4986  03EE  2C10               	goto	l1759
  4987  03EF                     u1100:
  4988  03EF                     l1757:
  4989  03EF  0140               	movlb	0	; select bank0
  4990  03F0  09A0               	comf	___aodiv@divisor,f
  4991  03F1  09A1               	comf	___aodiv@divisor+1,f
  4992  03F2  09A2               	comf	___aodiv@divisor+2,f
  4993  03F3  09A3               	comf	___aodiv@divisor+3,f
  4994  03F4  09A4               	comf	___aodiv@divisor+4,f
  4995  03F5  09A5               	comf	___aodiv@divisor+5,f
  4996  03F6  09A6               	comf	___aodiv@divisor+6,f
  4997  03F7  09A7               	comf	___aodiv@divisor+7,f
  4998  03F8  0AA0               	incf	___aodiv@divisor,f
  4999  03F9  1D03               	skipz
  5000  03FA  2C0E               	goto	u111lld
  5001  03FB  0AA1               	incf	___aodiv@divisor+1,f
  5002  03FC  1D03               	skipz
  5003  03FD  2C0E               	goto	u111lld
  5004  03FE  0AA2               	incf	___aodiv@divisor+2,f
  5005  03FF  1D03               	skipz
  5006  0400  2C0E               	goto	u111lld
  5007  0401  0AA3               	incf	___aodiv@divisor+3,f
  5008  0402  1D03               	skipz
  5009  0403  2C0E               	goto	u111lld
  5010  0404  0AA4               	incf	___aodiv@divisor+4,f
  5011  0405  1D03               	skipz
  5012  0406  2C0E               	goto	u111lld
  5013  0407  0AA5               	incf	___aodiv@divisor+5,f
  5014  0408  1D03               	skipz
  5015  0409  2C0E               	goto	u111lld
  5016  040A  0AA6               	incf	___aodiv@divisor+6,f
  5017  040B  1D03               	skipz
  5018  040C  2C0E               	goto	u111lld
  5019  040D  0AA7               	incf	___aodiv@divisor+7,f
  5020  040E                     u111lld:
  5021  040E  01F2               	clrf	___aodiv@sign
  5022  040F  0AF2               	incf	___aodiv@sign,f
  5023  0410                     l1759:
  5024  0410  3028               	movlw	low ___aodiv@dividend
  5025  0411  0086               	movwf	6
  5026  0412  3000               	movlw	high ___aodiv@dividend
  5027  0413  0087               	movwf	7
  5028  0414  3F47               	moviw [7]fsr1
  5029  0415  00F0               	movwf	??___aodiv
  5030  0416  1FF0               	btfss	??___aodiv,7
  5031  0417  2C19               	goto	u1121
  5032  0418  2C1A               	goto	u1120
  5033  0419                     u1121:
  5034  0419  2C3D               	goto	l1765
  5035  041A                     u1120:
  5036  041A                     l1761:
  5037  041A  0140               	movlb	0	; select bank0
  5038  041B  09A8               	comf	___aodiv@dividend,f
  5039  041C  09A9               	comf	___aodiv@dividend+1,f
  5040  041D  09AA               	comf	___aodiv@dividend+2,f
  5041  041E  09AB               	comf	___aodiv@dividend+3,f
  5042  041F  09AC               	comf	___aodiv@dividend+4,f
  5043  0420  09AD               	comf	___aodiv@dividend+5,f
  5044  0421  09AE               	comf	___aodiv@dividend+6,f
  5045  0422  09AF               	comf	___aodiv@dividend+7,f
  5046  0423  0AA8               	incf	___aodiv@dividend,f
  5047  0424  1D03               	skipz
  5048  0425  2C39               	goto	u113lld
  5049  0426  0AA9               	incf	___aodiv@dividend+1,f
  5050  0427  1D03               	skipz
  5051  0428  2C39               	goto	u113lld
  5052  0429  0AAA               	incf	___aodiv@dividend+2,f
  5053  042A  1D03               	skipz
  5054  042B  2C39               	goto	u113lld
  5055  042C  0AAB               	incf	___aodiv@dividend+3,f
  5056  042D  1D03               	skipz
  5057  042E  2C39               	goto	u113lld
  5058  042F  0AAC               	incf	___aodiv@dividend+4,f
  5059  0430  1D03               	skipz
  5060  0431  2C39               	goto	u113lld
  5061  0432  0AAD               	incf	___aodiv@dividend+5,f
  5062  0433  1D03               	skipz
  5063  0434  2C39               	goto	u113lld
  5064  0435  0AAE               	incf	___aodiv@dividend+6,f
  5065  0436  1D03               	skipz
  5066  0437  2C39               	goto	u113lld
  5067  0438  0AAF               	incf	___aodiv@dividend+7,f
  5068  0439                     u113lld:
  5069  0439                     l1763:
  5070  0439  3001               	movlw	1
  5071  043A  00F0               	movwf	??___aodiv
  5072  043B  0870               	movf	??___aodiv,w
  5073  043C  06F2               	xorwf	___aodiv@sign,f
  5074  043D                     l1765:
  5075  043D  3073               	movlw	low ___aodiv@quotient
  5076  043E  0086               	movwf	6
  5077  043F  3000               	movlw	high ___aodiv@quotient
  5078  0440  0087               	movwf	7
  5079  0441  3008               	movlw	8
  5080  0442  00F0               	movwf	??___aodiv
  5081  0443  3000               	movlw	0
  5082  0444                     u1140:
  5083  0444  001E               	movwi fsr1++
  5084  0445  0BF0               	decfsz	??___aodiv,f
  5085  0446  2C44               	goto	u1140
  5086  0447                     l1767:
  5087  0447  0140               	movlb	0	; select bank0
  5088  0448  0820               	movf	___aodiv@divisor,w
  5089  0449  0421               	iorwf	___aodiv@divisor+1,w
  5090  044A  0422               	iorwf	___aodiv@divisor+2,w
  5091  044B  0423               	iorwf	___aodiv@divisor+3,w
  5092  044C  0424               	iorwf	___aodiv@divisor+4,w
  5093  044D  0425               	iorwf	___aodiv@divisor+5,w
  5094  044E  0426               	iorwf	___aodiv@divisor+6,w
  5095  044F  0427               	iorwf	___aodiv@divisor+7,w
  5096  0450  1903               	skipnz
  5097  0451  2C53               	goto	u1151
  5098  0452  2C54               	goto	u1150
  5099  0453                     u1151:
  5100  0453  2CB0               	goto	l1787
  5101  0454                     u1150:
  5102  0454                     l1769:
  5103  0454  01F1               	clrf	___aodiv@counter
  5104  0455  0AF1               	incf	___aodiv@counter,f
  5105  0456  2C63               	goto	l1775
  5106  0457                     l1771:
  5107  0457  35A0               	lslf	___aodiv@divisor,f
  5108  0458  0DA1               	rlf	___aodiv@divisor+1,f
  5109  0459  0DA2               	rlf	___aodiv@divisor+2,f
  5110  045A  0DA3               	rlf	___aodiv@divisor+3,f
  5111  045B  0DA4               	rlf	___aodiv@divisor+4,f
  5112  045C  0DA5               	rlf	___aodiv@divisor+5,f
  5113  045D  0DA6               	rlf	___aodiv@divisor+6,f
  5114  045E  0DA7               	rlf	___aodiv@divisor+7,f
  5115  045F                     l1773:
  5116  045F  3001               	movlw	1
  5117  0460  00F0               	movwf	??___aodiv
  5118  0461  0870               	movf	??___aodiv,w
  5119  0462  07F1               	addwf	___aodiv@counter,f
  5120  0463                     l1775:
  5121  0463  1FA7               	btfss	___aodiv@divisor+7,7
  5122  0464  2C66               	goto	u1161
  5123  0465  2C67               	goto	u1160
  5124  0466                     u1161:
  5125  0466  2C57               	goto	l1771
  5126  0467                     u1160:
  5127  0467                     l1777:
  5128  0467  35F3               	lslf	___aodiv@quotient,f
  5129  0468  0DF4               	rlf	___aodiv@quotient+1,f
  5130  0469  0DF5               	rlf	___aodiv@quotient+2,f
  5131  046A  0DF6               	rlf	___aodiv@quotient+3,f
  5132  046B  0DF7               	rlf	___aodiv@quotient+4,f
  5133  046C  0DF8               	rlf	___aodiv@quotient+5,f
  5134  046D  0DF9               	rlf	___aodiv@quotient+6,f
  5135  046E  0DFA               	rlf	___aodiv@quotient+7,f
  5136  046F                     l1779:
  5137  046F  0827               	movf	___aodiv@divisor+7,w
  5138  0470  022F               	subwf	___aodiv@dividend+7,w
  5139  0471  1D03               	skipz
  5140  0472  2C8D               	goto	u1175
  5141  0473  0826               	movf	___aodiv@divisor+6,w
  5142  0474  022E               	subwf	___aodiv@dividend+6,w
  5143  0475  1D03               	skipz
  5144  0476  2C8D               	goto	u1175
  5145  0477  0825               	movf	___aodiv@divisor+5,w
  5146  0478  022D               	subwf	___aodiv@dividend+5,w
  5147  0479  1D03               	skipz
  5148  047A  2C8D               	goto	u1175
  5149  047B  0824               	movf	___aodiv@divisor+4,w
  5150  047C  022C               	subwf	___aodiv@dividend+4,w
  5151  047D  1D03               	skipz
  5152  047E  2C8D               	goto	u1175
  5153  047F  0823               	movf	___aodiv@divisor+3,w
  5154  0480  022B               	subwf	___aodiv@dividend+3,w
  5155  0481  1D03               	skipz
  5156  0482  2C8D               	goto	u1175
  5157  0483  0822               	movf	___aodiv@divisor+2,w
  5158  0484  022A               	subwf	___aodiv@dividend+2,w
  5159  0485  1D03               	skipz
  5160  0486  2C8D               	goto	u1175
  5161  0487  0821               	movf	___aodiv@divisor+1,w
  5162  0488  0229               	subwf	___aodiv@dividend+1,w
  5163  0489  1D03               	skipz
  5164  048A  2C8D               	goto	u1175
  5165  048B  0820               	movf	___aodiv@divisor,w
  5166  048C  0228               	subwf	___aodiv@dividend,w
  5167  048D                     u1175:
  5168  048D  1C03               	skipc
  5169  048E  2C90               	goto	u1171
  5170  048F  2C91               	goto	u1170
  5171  0490                     u1171:
  5172  0490  2CA2               	goto	l1785
  5173  0491                     u1170:
  5174  0491                     l1781:
  5175  0491  0820               	movf	___aodiv@divisor,w
  5176  0492  02A8               	subwf	___aodiv@dividend,f
  5177  0493  0821               	movf	___aodiv@divisor+1,w
  5178  0494  3BA9               	subwfb	___aodiv@dividend+1,f
  5179  0495  0822               	movf	___aodiv@divisor+2,w
  5180  0496  3BAA               	subwfb	___aodiv@dividend+2,f
  5181  0497  0823               	movf	___aodiv@divisor+3,w
  5182  0498  3BAB               	subwfb	___aodiv@dividend+3,f
  5183  0499  0824               	movf	___aodiv@divisor+4,w
  5184  049A  3BAC               	subwfb	___aodiv@dividend+4,f
  5185  049B  0825               	movf	___aodiv@divisor+5,w
  5186  049C  3BAD               	subwfb	___aodiv@dividend+5,f
  5187  049D  0826               	movf	___aodiv@divisor+6,w
  5188  049E  3BAE               	subwfb	___aodiv@dividend+6,f
  5189  049F  0827               	movf	___aodiv@divisor+7,w
  5190  04A0  3BAF               	subwfb	___aodiv@dividend+7,f
  5191  04A1                     l1783:
  5192  04A1  1473               	bsf	___aodiv@quotient,0
  5193  04A2                     l1785:
  5194  04A2  36A7               	lsrf	___aodiv@divisor+7,f
  5195  04A3  0CA6               	rrf	___aodiv@divisor+6,f
  5196  04A4  0CA5               	rrf	___aodiv@divisor+5,f
  5197  04A5  0CA4               	rrf	___aodiv@divisor+4,f
  5198  04A6  0CA3               	rrf	___aodiv@divisor+3,f
  5199  04A7  0CA2               	rrf	___aodiv@divisor+2,f
  5200  04A8  0CA1               	rrf	___aodiv@divisor+1,f
  5201  04A9  0CA0               	rrf	___aodiv@divisor,f
  5202  04AA  3001               	movlw	1
  5203  04AB  02F1               	subwf	___aodiv@counter,f
  5204  04AC  1D03               	btfss	3,2
  5205  04AD  2CAF               	goto	u1181
  5206  04AE  2CB0               	goto	u1180
  5207  04AF                     u1181:
  5208  04AF  2C67               	goto	l1777
  5209  04B0                     u1180:
  5210  04B0                     l1787:
  5211  04B0  0872               	movf	___aodiv@sign,w
  5212  04B1  1903               	btfsc	3,2
  5213  04B2  2CB4               	goto	u1191
  5214  04B3  2CB5               	goto	u1190
  5215  04B4                     u1191:
  5216  04B4  2CD3               	goto	l486
  5217  04B5                     u1190:
  5218  04B5                     l1789:
  5219  04B5  09F3               	comf	___aodiv@quotient,f
  5220  04B6  09F4               	comf	___aodiv@quotient+1,f
  5221  04B7  09F5               	comf	___aodiv@quotient+2,f
  5222  04B8  09F6               	comf	___aodiv@quotient+3,f
  5223  04B9  09F7               	comf	___aodiv@quotient+4,f
  5224  04BA  09F8               	comf	___aodiv@quotient+5,f
  5225  04BB  09F9               	comf	___aodiv@quotient+6,f
  5226  04BC  09FA               	comf	___aodiv@quotient+7,f
  5227  04BD  0AF3               	incf	___aodiv@quotient,f
  5228  04BE  1D03               	skipz
  5229  04BF  2CD3               	goto	u120lld
  5230  04C0  0AF4               	incf	___aodiv@quotient+1,f
  5231  04C1  1D03               	skipz
  5232  04C2  2CD3               	goto	u120lld
  5233  04C3  0AF5               	incf	___aodiv@quotient+2,f
  5234  04C4  1D03               	skipz
  5235  04C5  2CD3               	goto	u120lld
  5236  04C6  0AF6               	incf	___aodiv@quotient+3,f
  5237  04C7  1D03               	skipz
  5238  04C8  2CD3               	goto	u120lld
  5239  04C9  0AF7               	incf	___aodiv@quotient+4,f
  5240  04CA  1D03               	skipz
  5241  04CB  2CD3               	goto	u120lld
  5242  04CC  0AF8               	incf	___aodiv@quotient+5,f
  5243  04CD  1D03               	skipz
  5244  04CE  2CD3               	goto	u120lld
  5245  04CF  0AF9               	incf	___aodiv@quotient+6,f
  5246  04D0  1D03               	skipz
  5247  04D1  2CD3               	goto	u120lld
  5248  04D2  0AFA               	incf	___aodiv@quotient+7,f
  5249  04D3                     u120lld:
  5250  04D3                     l486:
  5251  04D3  0873               	movf	___aodiv@quotient,w
  5252  04D4  0140               	movlb	0	; select bank0
  5253  04D5  00A0               	movwf	?___aodiv
  5254  04D6  0874               	movf	___aodiv@quotient+1,w
  5255  04D7  00A1               	movwf	?___aodiv+1
  5256  04D8  0875               	movf	___aodiv@quotient+2,w
  5257  04D9  00A2               	movwf	?___aodiv+2
  5258  04DA  0876               	movf	___aodiv@quotient+3,w
  5259  04DB  00A3               	movwf	?___aodiv+3
  5260  04DC  0877               	movf	___aodiv@quotient+4,w
  5261  04DD  00A4               	movwf	?___aodiv+4
  5262  04DE  0878               	movf	___aodiv@quotient+5,w
  5263  04DF  00A5               	movwf	?___aodiv+5
  5264  04E0  0879               	movf	___aodiv@quotient+6,w
  5265  04E1  00A6               	movwf	?___aodiv+6
  5266  04E2  087A               	movf	___aodiv@quotient+7,w
  5267  04E3  00A7               	movwf	?___aodiv+7
  5268  04E4                     l487:
  5269  04E4  0008               	return
  5270  04E5                     __end_of___aodiv:
  5271                           
  5272                           	psect	text13
  5273  013A                     __ptext13:	
  5274 ;; *************** function _ctoa *****************
  5275 ;; Defined at:
  5276 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  fp              1    wreg     PTR struct _IO_FILE
  5279 ;;		 -> NULL(0), 
  5280 ;;  c               1   10[COMMON] unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  5283 ;;		 -> NULL(0), 
  5284 ;;  w               2    5[BANK0 ] int 
  5285 ;;  l               2    3[BANK0 ] int 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  2   10[COMMON] int 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;Total ram usage:       10 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    3
  5302 ;; This function calls:
  5303 ;;		_fputc
  5304 ;; This function is called by:
  5305 ;;		_vfpfcnvrt
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _ctoa
  5311  013A                     _ctoa:
  5312                           
  5313                           ;incstack = 0
  5314                           ; Regs used in _ctoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5315                           ;ctoa@fp stored from wreg
  5316  013A  0140               	movlb	0	; select bank0
  5317  013B  00A7               	movwf	ctoa@fp
  5318  013C                     l1861:
  5319                           
  5320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  5321  013C  0141               	movlb	1	; select bank1
  5322  013D  0822               	movf	_width^(0+128),w
  5323  013E  0423               	iorwf	(_width+1)^(0+128),w
  5324  013F  1D03               	btfss	3,2
  5325  0140  2942               	goto	u1401
  5326  0141  2943               	goto	u1400
  5327  0142                     u1401:
  5328  0142  294B               	goto	l1865
  5329  0143                     u1400:
  5330  0143                     l1863:
  5331  0143  0823               	movf	(_width+1)^(0+128),w
  5332  0144  0140               	movlb	0	; select bank0
  5333  0145  00A6               	movwf	ctoa@w+1
  5334  0146  0141               	movlb	1	; select bank1
  5335  0147  0822               	movf	_width^(0+128),w
  5336  0148  0140               	movlb	0	; select bank0
  5337  0149  00A5               	movwf	ctoa@w
  5338  014A  2954               	goto	l1867
  5339  014B                     l1865:
  5340  014B  0822               	movf	_width^(0+128),w
  5341  014C  3EFF               	addlw	255
  5342  014D  0140               	movlb	0	; select bank0
  5343  014E  00A5               	movwf	ctoa@w
  5344  014F  30FF               	movlw	255
  5345  0150  0141               	movlb	1	; select bank1
  5346  0151  3D23               	addwfc	(_width+1)^(0+128),w
  5347  0152  0140               	movlb	0	; select bank0
  5348  0153  00A6               	movwf	ctoa@w+1
  5349  0154                     l1867:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  5352  0154  0141               	movlb	1	; select bank1
  5353  0155  1C26               	btfss	_flags^(0+128),0
  5354  0156  2958               	goto	u1411
  5355  0157  2959               	goto	u1410
  5356  0158                     u1411:
  5357  0158  2968               	goto	l1871
  5358  0159                     u1410:
  5359  0159                     l1869:
  5360                           
  5361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  5362  0159  087A               	movf	ctoa@c,w
  5363  015A  0140               	movlb	0	; select bank0
  5364  015B  00A0               	movwf	??_ctoa
  5365  015C  01A1               	clrf	??_ctoa+1
  5366  015D  0820               	movf	??_ctoa,w
  5367  015E  00F2               	movwf	fputc@c
  5368  015F  0821               	movf	??_ctoa+1,w
  5369  0160  00F3               	movwf	fputc@c+1
  5370  0161  0827               	movf	ctoa@fp,w
  5371  0162  00A2               	movwf	??_ctoa+2
  5372  0163  0822               	movf	??_ctoa+2,w
  5373  0164  00F4               	movwf	fputc@fp
  5374  0165  3180  2045  3181   	fcall	_fputc
  5375  0168                     l1871:
  5376                           
  5377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  5378  0168  0140               	movlb	0	; select bank0
  5379  0169  1BA6               	btfsc	ctoa@w+1,7
  5380  016A  296C               	goto	u1421
  5381  016B  296D               	goto	u1420
  5382  016C                     u1421:
  5383  016C  296E               	goto	l1875
  5384  016D                     u1420:
  5385  016D  2970               	goto	l896
  5386  016E                     l1875:
  5387  016E  01A5               	clrf	ctoa@w
  5388  016F  01A6               	clrf	ctoa@w+1
  5389  0170                     l896:
  5390                           
  5391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  5392  0170  01A3               	clrf	ctoa@l
  5393  0171  01A4               	clrf	ctoa@l+1
  5394                           
  5395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5396  0172  2984               	goto	l1881
  5397  0173                     l1877:
  5398                           
  5399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  5400  0173  3020               	movlw	32
  5401  0174  00F2               	movwf	fputc@c
  5402  0175  3000               	movlw	0
  5403  0176  00F3               	movwf	fputc@c+1
  5404  0177  0140               	movlb	0	; select bank0
  5405  0178  0827               	movf	ctoa@fp,w
  5406  0179  00A0               	movwf	??_ctoa
  5407  017A  0820               	movf	??_ctoa,w
  5408  017B  00F4               	movwf	fputc@fp
  5409  017C  3180  2045  3181   	fcall	_fputc
  5410  017F                     l1879:
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  5413  017F  3001               	movlw	1
  5414  0180  0140               	movlb	0	; select bank0
  5415  0181  07A3               	addwf	ctoa@l,f
  5416  0182  3000               	movlw	0
  5417  0183  3DA4               	addwfc	ctoa@l+1,f
  5418  0184                     l1881:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5421  0184  0824               	movf	ctoa@l+1,w
  5422  0185  3A80               	xorlw	128
  5423  0186  00A0               	movwf	??_ctoa
  5424  0187  0826               	movf	ctoa@w+1,w
  5425  0188  3A80               	xorlw	128
  5426  0189  0220               	subwf	??_ctoa,w
  5427  018A  1D03               	skipz
  5428  018B  298E               	goto	u1435
  5429  018C  0825               	movf	ctoa@w,w
  5430  018D  0223               	subwf	ctoa@l,w
  5431  018E                     u1435:
  5432  018E  1C03               	skipc
  5433  018F  2991               	goto	u1431
  5434  0190  2992               	goto	u1430
  5435  0191                     u1431:
  5436  0191  2973               	goto	l1877
  5437  0192                     u1430:
  5438  0192                     l899:
  5439                           
  5440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  5441  0192  0141               	movlb	1	; select bank1
  5442  0193  1826               	btfsc	_flags^(0+128),0
  5443  0194  2996               	goto	u1441
  5444  0195  2997               	goto	u1440
  5445  0196                     u1441:
  5446  0196  29A6               	goto	l1885
  5447  0197                     u1440:
  5448  0197                     l1883:
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  5451  0197  087A               	movf	ctoa@c,w
  5452  0198  0140               	movlb	0	; select bank0
  5453  0199  00A0               	movwf	??_ctoa
  5454  019A  01A1               	clrf	??_ctoa+1
  5455  019B  0820               	movf	??_ctoa,w
  5456  019C  00F2               	movwf	fputc@c
  5457  019D  0821               	movf	??_ctoa+1,w
  5458  019E  00F3               	movwf	fputc@c+1
  5459  019F  0827               	movf	ctoa@fp,w
  5460  01A0  00A2               	movwf	??_ctoa+2
  5461  01A1  0822               	movf	??_ctoa+2,w
  5462  01A2  00F4               	movwf	fputc@fp
  5463  01A3  3180  2045  3181   	fcall	_fputc
  5464  01A6                     l1885:
  5465                           
  5466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  5467  01A6  0140               	movlb	0	; select bank0
  5468  01A7  0823               	movf	ctoa@l,w
  5469  01A8  3E01               	addlw	1
  5470  01A9  00FA               	movwf	?_ctoa
  5471  01AA  3000               	movlw	0
  5472  01AB  3D24               	addwfc	ctoa@l+1,w
  5473  01AC  00FB               	movwf	?_ctoa+1
  5474  01AD                     l901:
  5475  01AD  0008               	return
  5476  01AE                     __end_of_ctoa:
  5477                           
  5478                           	psect	text14
  5479  0045                     __ptext14:	
  5480 ;; *************** function _fputc *****************
  5481 ;; Defined at:
  5482 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  c               2    2[COMMON] int 
  5485 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  5486 ;;		 -> NULL(0), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  2    2[COMMON] int 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5498 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;Total ram usage:        8 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    2
  5505 ;; This function calls:
  5506 ;;		_putch
  5507 ;; This function is called by:
  5508 ;;		_pad
  5509 ;;		_ctoa
  5510 ;;		_vfpfcnvrt
  5511 ;;		_fputs
  5512 ;;		_puts
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           
  5517                           ;psect for function _fputc
  5518  0045                     _fputc:
  5519  0045                     l1701:	
  5520                           ;incstack = 0
  5521                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5522                           
  5523  0045  0874               	movf	fputc@fp,w
  5524  0046  1903               	btfsc	3,2
  5525  0047  2849               	goto	u1001
  5526  0048  284A               	goto	u1000
  5527  0049                     u1001:
  5528  0049  284F               	goto	l1705
  5529  004A                     u1000:
  5530  004A                     l1703:
  5531  004A  0874               	movf	fputc@fp,w
  5532  004B  1D03               	btfss	3,2
  5533  004C  284E               	goto	u1011
  5534  004D  284F               	goto	u1010
  5535  004E                     u1011:
  5536  004E  2854               	goto	l1707
  5537  004F                     u1010:
  5538  004F                     l1705:
  5539  004F  0872               	movf	fputc@c,w
  5540  0050  318E  2638  3180   	fcall	_putch
  5541  0053  2883               	goto	l1713
  5542  0054                     l1707:
  5543  0054  0874               	movf	fputc@fp,w
  5544  0055  3E03               	addlw	3
  5545  0056  0086               	movwf	6
  5546  0057  0187               	clrf	7
  5547  0058  0016               	moviw fsr1++
  5548  0059  0401               	iorwf	1,w
  5549  005A  1903               	btfsc	3,2
  5550  005B  285D               	goto	u1021
  5551  005C  285E               	goto	u1020
  5552  005D                     u1021:
  5553  005D  287B               	goto	l1711
  5554  005E                     u1020:
  5555  005E                     l1709:
  5556  005E  0874               	movf	fputc@fp,w
  5557  005F  3E03               	addlw	3
  5558  0060  0086               	movwf	6
  5559  0061  0187               	clrf	7
  5560  0062  3F40               	moviw [0]fsr1
  5561  0063  00F5               	movwf	??_fputc
  5562  0064  3F41               	moviw [1]fsr1
  5563  0065  00F6               	movwf	??_fputc+1
  5564  0066  0A74               	incf	fputc@fp,w
  5565  0067  0086               	movwf	6
  5566  0068  0187               	clrf	7
  5567  0069  3F40               	moviw [0]fsr1
  5568  006A  00F7               	movwf	??_fputc+2
  5569  006B  3F41               	moviw [1]fsr1
  5570  006C  00F8               	movwf	??_fputc+3
  5571  006D  0878               	movf	??_fputc+3,w
  5572  006E  3A80               	xorlw	128
  5573  006F  00F9               	movwf	??_fputc+4
  5574  0070  0876               	movf	??_fputc+1,w
  5575  0071  3A80               	xorlw	128
  5576  0072  0279               	subwf	??_fputc+4,w
  5577  0073  1D03               	skipz
  5578  0074  2877               	goto	u1035
  5579  0075  0875               	movf	??_fputc,w
  5580  0076  0277               	subwf	??_fputc+2,w
  5581  0077                     u1035:
  5582  0077  1803               	skipnc
  5583  0078  287A               	goto	u1031
  5584  0079  287B               	goto	u1030
  5585  007A                     u1031:
  5586  007A  2883               	goto	l1713
  5587  007B                     u1030:
  5588  007B                     l1711:
  5589  007B  0A74               	incf	fputc@fp,w
  5590  007C  0086               	movwf	6
  5591  007D  0187               	clrf	7
  5592  007E  3001               	movlw	1
  5593  007F  0781               	addwf	1,f
  5594  0080  3141               	addfsr 1,1
  5595  0081  1803               	skipnc
  5596  0082  0A81               	incf	1,f
  5597  0083                     l1713:
  5598  0083  0872               	movf	fputc@c,w
  5599  0084  00F5               	movwf	??_fputc
  5600  0085  01F6               	clrf	??_fputc+1
  5601  0086  0875               	movf	??_fputc,w
  5602  0087  00F2               	movwf	?_fputc
  5603  0088  0876               	movf	??_fputc+1,w
  5604  0089  00F3               	movwf	?_fputc+1
  5605  008A                     l1016:
  5606  008A  0008               	return
  5607  008B                     __end_of_fputc:
  5608                           
  5609                           	psect	text15
  5610  0E38                     __ptext15:	
  5611 ;; *************** function _putch *****************
  5612 ;; Defined at:
  5613 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  txData          1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  txData          1    1[COMMON] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    1
  5634 ;; This function calls:
  5635 ;;		_EUSART1_Write
  5636 ;; This function is called by:
  5637 ;;		_fputc
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function _putch
  5643  0E38                     _putch:
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5647                           ;putch@txData stored from wreg
  5648  0E38  00F1               	movwf	putch@txData
  5649  0E39                     l1699:
  5650                           
  5651                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  5652  0E39  0871               	movf	putch@txData,w
  5653  0E3A  318E  265C  318E   	fcall	_EUSART1_Write
  5654  0E3D                     l76:
  5655  0E3D  0008               	return
  5656  0E3E                     __end_of_putch:
  5657                           
  5658                           	psect	text16
  5659  0E5C                     __ptext16:	
  5660 ;; *************** function _EUSART1_Write *****************
  5661 ;; Defined at:
  5662 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  txData          1    wreg     unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  txData          1    0[COMMON] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        1 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_putch
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function _EUSART1_Write
  5691  0E5C                     _EUSART1_Write:
  5692                           
  5693                           ;incstack = 0
  5694                           ; Regs used in _EUSART1_Write: [wreg]
  5695                           ;EUSART1_Write@txData stored from wreg
  5696  0E5C  00F0               	movwf	EUSART1_Write@txData
  5697  0E5D                     l1695:
  5698  0E5D                     l67:	
  5699                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  5700                           
  5701                           
  5702                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  5703  0E5D  014E               	movlb	14	; select bank14
  5704  0E5E  1E0F               	btfss	15,4	;volatile
  5705  0E5F  2E61               	goto	u991
  5706  0E60  2E62               	goto	u990
  5707  0E61                     u991:
  5708  0E61  2E5D               	goto	l67
  5709  0E62                     u990:
  5710  0E62                     l1697:
  5711                           
  5712                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  5713  0E62  0870               	movf	EUSART1_Write@txData,w
  5714  0E63  0142               	movlb	2	; select bank2
  5715  0E64  009A               	movwf	26	;volatile
  5716  0E65                     l70:
  5717  0E65  0008               	return
  5718  0E66                     __end_of_EUSART1_Write:
  5719                           
  5720                           	psect	text17
  5721  024B                     __ptext17:	
  5722 ;; *************** function _atoi *****************
  5723 ;; Defined at:
  5724 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  s               2    6[COMMON] PTR const unsigned char 
  5727 ;;		 -> STR_1(11), 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  n               2    7[BANK0 ] int 
  5730 ;;  neg             2    0[BANK0 ] int 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  2    6[COMMON] int 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;Total ram usage:       15 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    1
  5747 ;; This function calls:
  5748 ;;		___wmul
  5749 ;;		_isdigit
  5750 ;;		_isspace
  5751 ;; This function is called by:
  5752 ;;		_vfpfcnvrt
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _atoi
  5758  024B                     _atoi:
  5759  024B                     l1947:	
  5760                           ;incstack = 0
  5761                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5762                           
  5763  024B  0140               	movlb	0	; select bank0
  5764  024C  01A7               	clrf	atoi@n
  5765  024D  01A8               	clrf	atoi@n+1
  5766  024E  01A0               	clrf	atoi@neg
  5767  024F  01A1               	clrf	atoi@neg+1
  5768  0250  2A55               	goto	l1951
  5769  0251                     l1949:
  5770  0251  3001               	movlw	1
  5771  0252  07F6               	addwf	atoi@s,f
  5772  0253  3000               	movlw	0
  5773  0254  3DF7               	addwfc	atoi@s+1,f
  5774  0255                     l1951:
  5775  0255  01A6               	clrf	_atoi$879
  5776  0256  0AA6               	incf	_atoi$879,f
  5777  0257                     l1953:
  5778  0257  0876               	movf	atoi@s,w
  5779  0258  0084               	movwf	4
  5780  0259  0877               	movf	atoi@s+1,w
  5781  025A  0085               	movwf	5
  5782  025B  0012               	moviw fsr0++
  5783  025C  3A20               	xorlw	32
  5784  025D  1903               	btfsc	3,2
  5785  025E  2A60               	goto	u1611
  5786  025F  2A61               	goto	u1610
  5787  0260                     u1611:
  5788  0260  2A76               	goto	l1959
  5789  0261                     u1610:
  5790  0261                     l1955:
  5791  0261  0876               	movf	atoi@s,w
  5792  0262  0084               	movwf	4
  5793  0263  0877               	movf	atoi@s+1,w
  5794  0264  0085               	movwf	5
  5795  0265  0800               	movf	0,w	;code access
  5796  0266  3EF7               	addlw	247
  5797  0267  00F8               	movwf	??_atoi
  5798  0268  30FF               	movlw	255
  5799  0269  1803               	skipnc
  5800  026A  3000               	movlw	0
  5801  026B  00F9               	movwf	??_atoi+1
  5802  026C  3000               	movlw	0
  5803  026D  0279               	subwf	??_atoi+1,w
  5804  026E  3005               	movlw	5
  5805  026F  1903               	skipnz
  5806  0270  0278               	subwf	??_atoi,w
  5807  0271  1C03               	skipc
  5808  0272  2A74               	goto	u1621
  5809  0273  2A75               	goto	u1620
  5810  0274                     u1621:
  5811  0274  2A76               	goto	l1959
  5812  0275                     u1620:
  5813  0275                     l1957:
  5814  0275  01A6               	clrf	_atoi$879
  5815  0276                     l1959:
  5816  0276  0826               	movf	_atoi$879,w
  5817  0277  00F8               	movwf	??_atoi
  5818  0278  01F9               	clrf	??_atoi+1
  5819  0279  0878               	movf	??_atoi,w
  5820  027A  00A2               	movwf	_atoi$878
  5821  027B  0879               	movf	??_atoi+1,w
  5822  027C  00A3               	movwf	_atoi$878+1
  5823  027D                     l1963:
  5824  027D  0822               	movf	_atoi$878,w
  5825  027E  0423               	iorwf	_atoi$878+1,w
  5826  027F  1D03               	btfss	3,2
  5827  0280  2A82               	goto	u1631
  5828  0281  2A83               	goto	u1630
  5829  0282                     u1631:
  5830  0282  2A51               	goto	l1949
  5831  0283                     u1630:
  5832  0283  2A8D               	goto	l1967
  5833  0284                     l1965:
  5834  0284  3001               	movlw	1
  5835  0285  00A0               	movwf	atoi@neg
  5836  0286  3000               	movlw	0
  5837  0287  00A1               	movwf	atoi@neg+1
  5838  0288                     l977:
  5839  0288  3001               	movlw	1
  5840  0289  07F6               	addwf	atoi@s,f
  5841  028A  3000               	movlw	0
  5842  028B  3DF7               	addwfc	atoi@s+1,f
  5843  028C  2AC1               	goto	l1973
  5844  028D                     l1967:
  5845  028D  0876               	movf	atoi@s,w
  5846  028E  0084               	movwf	4
  5847  028F  0877               	movf	atoi@s+1,w
  5848  0290  0085               	movwf	5
  5849  0291  0800               	movf	0,w	;code access
  5850  0292  00F8               	movwf	??_atoi
  5851  0293  01F9               	clrf	??_atoi+1
  5852                           
  5853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5854                           ; Switch size 1, requested type "simple"
  5855                           ; Number of cases is 1, Range of values is 0 to 0
  5856                           ; switch strategies available:
  5857                           ; Name         Instructions Cycles
  5858                           ; simple_byte            4     3 (average)
  5859                           ; direct_byte            8     6 (fixed)
  5860                           ; jumptable            260     6 (fixed)
  5861                           ;	Chosen strategy is simple_byte
  5862  0294  0879               	movf	??_atoi+1,w
  5863  0295  3A00               	xorlw	0	; case 0
  5864  0296  1903               	skipnz
  5865  0297  2A99               	goto	l2555
  5866  0298  2AC1               	goto	l1973
  5867  0299                     l2555:
  5868                           
  5869                           ; Switch size 1, requested type "simple"
  5870                           ; Number of cases is 2, Range of values is 43 to 45
  5871                           ; switch strategies available:
  5872                           ; Name         Instructions Cycles
  5873                           ; simple_byte            7     4 (average)
  5874                           ; direct_byte           15     9 (fixed)
  5875                           ; jumptable            263     9 (fixed)
  5876                           ;	Chosen strategy is simple_byte
  5877  0299  0878               	movf	??_atoi,w
  5878  029A  3A2B               	xorlw	43	; case 43
  5879  029B  1903               	skipnz
  5880  029C  2A88               	goto	l977
  5881  029D  3A06               	xorlw	6	; case 45
  5882  029E  1903               	skipnz
  5883  029F  2A84               	goto	l1965
  5884  02A0  2AC1               	goto	l1973
  5885  02A1                     l1969:
  5886  02A1  0876               	movf	atoi@s,w
  5887  02A2  0084               	movwf	4
  5888  02A3  0877               	movf	atoi@s+1,w
  5889  02A4  0085               	movwf	5
  5890  02A5  0800               	movf	0,w	;code access
  5891  02A6  00F8               	movwf	??_atoi
  5892  02A7  0828               	movf	atoi@n+1,w
  5893  02A8  00F1               	movwf	___wmul@multiplier+1
  5894  02A9  0827               	movf	atoi@n,w
  5895  02AA  00F0               	movwf	___wmul@multiplier
  5896  02AB  300A               	movlw	10
  5897  02AC  00F2               	movwf	___wmul@multiplicand
  5898  02AD  3000               	movlw	0
  5899  02AE  00F3               	movwf	___wmul@multiplicand+1
  5900  02AF  318F  2707  3182   	fcall	___wmul
  5901  02B2  0871               	movf	?___wmul+1,w
  5902  02B3  00FA               	movwf	??_atoi+2
  5903  02B4  0878               	movf	??_atoi,w
  5904  02B5  0270               	subwf	?___wmul,w
  5905  02B6  00F9               	movwf	??_atoi+1
  5906  02B7  1C03               	skipc
  5907  02B8  03FA               	decf	??_atoi+2,f
  5908  02B9  0879               	movf	??_atoi+1,w
  5909  02BA  3E30               	addlw	48
  5910  02BB  0140               	movlb	0	; select bank0
  5911  02BC  00A7               	movwf	atoi@n
  5912  02BD  3000               	movlw	0
  5913  02BE  3D7A               	addwfc	??_atoi+2,w
  5914  02BF  00A8               	movwf	atoi@n+1
  5915  02C0  2A88               	goto	l977
  5916  02C1                     l1973:
  5917  02C1  0876               	movf	atoi@s,w
  5918  02C2  0084               	movwf	4
  5919  02C3  0877               	movf	atoi@s+1,w
  5920  02C4  0085               	movwf	5
  5921  02C5  0800               	movf	0,w	;code access
  5922  02C6  3ED0               	addlw	208
  5923  02C7  00F8               	movwf	??_atoi
  5924  02C8  30FF               	movlw	255
  5925  02C9  1803               	skipnc
  5926  02CA  3000               	movlw	0
  5927  02CB  00F9               	movwf	??_atoi+1
  5928  02CC  3000               	movlw	0
  5929  02CD  0279               	subwf	??_atoi+1,w
  5930  02CE  300A               	movlw	10
  5931  02CF  1903               	skipnz
  5932  02D0  0278               	subwf	??_atoi,w
  5933  02D1  1C03               	skipc
  5934  02D2  2AD4               	goto	u1641
  5935  02D3  2AD6               	goto	u1640
  5936  02D4                     u1641:
  5937  02D4  3001               	movlw	1
  5938  02D5  2AD7               	goto	u1650
  5939  02D6                     u1640:
  5940  02D6  3000               	movlw	0
  5941  02D7                     u1650:
  5942  02D7  00FA               	movwf	??_atoi+2
  5943  02D8  01FB               	clrf	??_atoi+3
  5944  02D9  087A               	movf	??_atoi+2,w
  5945  02DA  00A4               	movwf	_atoi$880
  5946  02DB  087B               	movf	??_atoi+3,w
  5947  02DC  00A5               	movwf	_atoi$880+1
  5948  02DD                     l1977:
  5949  02DD  0824               	movf	_atoi$880,w
  5950  02DE  0425               	iorwf	_atoi$880+1,w
  5951  02DF  1D03               	btfss	3,2
  5952  02E0  2AE2               	goto	u1661
  5953  02E1  2AE3               	goto	u1660
  5954  02E2                     u1661:
  5955  02E2  2AA1               	goto	l1969
  5956  02E3                     u1660:
  5957  02E3                     l1979:
  5958  02E3  0820               	movf	atoi@neg,w
  5959  02E4  0421               	iorwf	atoi@neg+1,w
  5960  02E5  1D03               	btfss	3,2
  5961  02E6  2AE8               	goto	u1671
  5962  02E7  2AE9               	goto	u1670
  5963  02E8                     u1671:
  5964  02E8  2AF5               	goto	l1983
  5965  02E9                     u1670:
  5966  02E9                     l1981:
  5967  02E9  0927               	comf	atoi@n,w
  5968  02EA  00F8               	movwf	??_atoi
  5969  02EB  0928               	comf	atoi@n+1,w
  5970  02EC  00F9               	movwf	??_atoi+1
  5971  02ED  0AF8               	incf	??_atoi,f
  5972  02EE  1903               	skipnz
  5973  02EF  0AF9               	incf	??_atoi+1,f
  5974  02F0  0878               	movf	??_atoi,w
  5975  02F1  00F6               	movwf	?_atoi
  5976  02F2  0879               	movf	??_atoi+1,w
  5977  02F3  00F7               	movwf	?_atoi+1
  5978  02F4  2AF9               	goto	l990
  5979  02F5                     l1983:
  5980  02F5  0828               	movf	atoi@n+1,w
  5981  02F6  00F7               	movwf	?_atoi+1
  5982  02F7  0827               	movf	atoi@n,w
  5983  02F8  00F6               	movwf	?_atoi
  5984  02F9                     l990:
  5985  02F9  0008               	return
  5986  02FA                     __end_of_atoi:
  5987                           
  5988                           	psect	text18
  5989  0F45                     __ptext18:	
  5990 ;; *************** function _isspace *****************
  5991 ;; Defined at:
  5992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  c               2    0[COMMON] int 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2    0[COMMON] int 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;Total ram usage:        5 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_atoi
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _isspace
  6021  0F45                     _isspace:
  6022  0F45                     l1849:	
  6023                           ;incstack = 0
  6024                           ; Regs used in _isspace: [wreg+status,2+status,0]
  6025                           
  6026  0F45  01F4               	clrf	_isspace$896
  6027  0F46  0AF4               	incf	_isspace$896,f
  6028  0F47                     l1851:
  6029  0F47  3020               	movlw	32
  6030  0F48  0670               	xorwf	isspace@c,w
  6031  0F49  0471               	iorwf	isspace@c+1,w
  6032  0F4A  1903               	btfsc	3,2
  6033  0F4B  2F4D               	goto	u1381
  6034  0F4C  2F4E               	goto	u1380
  6035  0F4D                     u1381:
  6036  0F4D  2F5E               	goto	l1857
  6037  0F4E                     u1380:
  6038  0F4E                     l1853:
  6039  0F4E  0870               	movf	isspace@c,w
  6040  0F4F  3EF7               	addlw	247
  6041  0F50  00F2               	movwf	??_isspace
  6042  0F51  30FF               	movlw	255
  6043  0F52  3D71               	addwfc	isspace@c+1,w
  6044  0F53  00F3               	movwf	??_isspace+1
  6045  0F54  3000               	movlw	0
  6046  0F55  0273               	subwf	??_isspace+1,w
  6047  0F56  3005               	movlw	5
  6048  0F57  1903               	skipnz
  6049  0F58  0272               	subwf	??_isspace,w
  6050  0F59  1C03               	skipc
  6051  0F5A  2F5C               	goto	u1391
  6052  0F5B  2F5D               	goto	u1390
  6053  0F5C                     u1391:
  6054  0F5C  2F5E               	goto	l1857
  6055  0F5D                     u1390:
  6056  0F5D                     l1855:
  6057  0F5D  01F4               	clrf	_isspace$896
  6058  0F5E                     l1857:
  6059  0F5E  0874               	movf	_isspace$896,w
  6060  0F5F  00F2               	movwf	??_isspace
  6061  0F60  01F3               	clrf	??_isspace+1
  6062  0F61  0872               	movf	??_isspace,w
  6063  0F62  00F0               	movwf	?_isspace
  6064  0F63  0873               	movf	??_isspace+1,w
  6065  0F64  00F1               	movwf	?_isspace+1
  6066  0F65                     l1001:
  6067  0F65  0008               	return
  6068  0F66                     __end_of_isspace:
  6069                           
  6070                           	psect	text19
  6071  0EA3                     __ptext19:	
  6072 ;; *************** function _isdigit *****************
  6073 ;; Defined at:
  6074 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  c               2    0[COMMON] int 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2    0[COMMON] int 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;Total ram usage:        6 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_vfpfcnvrt
  6098 ;;		_atoi
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _isdigit
  6104  0EA3                     _isdigit:
  6105  0EA3                     l1845:	
  6106                           ;incstack = 0
  6107                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6108                           
  6109  0EA3  0870               	movf	isdigit@c,w
  6110  0EA4  3ED0               	addlw	208
  6111  0EA5  00F2               	movwf	??_isdigit
  6112  0EA6  30FF               	movlw	255
  6113  0EA7  3D71               	addwfc	isdigit@c+1,w
  6114  0EA8  00F3               	movwf	??_isdigit+1
  6115  0EA9  3000               	movlw	0
  6116  0EAA  0273               	subwf	??_isdigit+1,w
  6117  0EAB  300A               	movlw	10
  6118  0EAC  1903               	skipnz
  6119  0EAD  0272               	subwf	??_isdigit,w
  6120  0EAE  1C03               	skipc
  6121  0EAF  2EB1               	goto	u1361
  6122  0EB0  2EB3               	goto	u1360
  6123  0EB1                     u1361:
  6124  0EB1  3001               	movlw	1
  6125  0EB2  2EB4               	goto	u1370
  6126  0EB3                     u1360:
  6127  0EB3  3000               	movlw	0
  6128  0EB4                     u1370:
  6129  0EB4  00F4               	movwf	??_isdigit+2
  6130  0EB5  01F5               	clrf	??_isdigit+3
  6131  0EB6  0874               	movf	??_isdigit+2,w
  6132  0EB7  00F0               	movwf	?_isdigit
  6133  0EB8  0875               	movf	??_isdigit+3,w
  6134  0EB9  00F1               	movwf	?_isdigit+1
  6135  0EBA                     l993:
  6136  0EBA  0008               	return
  6137  0EBB                     __end_of_isdigit:
  6138                           
  6139                           	psect	text20
  6140  0F07                     __ptext20:	
  6141 ;; *************** function ___wmul *****************
  6142 ;; Defined at:
  6143 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  multiplier      2    0[COMMON] unsigned int 
  6146 ;;  multiplicand    2    2[COMMON] unsigned int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  product         2    4[COMMON] unsigned int 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  2    0[COMMON] unsigned int 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;Total ram usage:        6 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_atoi
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           
  6172                           ;psect for function ___wmul
  6173  0F07                     ___wmul:
  6174  0F07                     l1739:	
  6175                           ;incstack = 0
  6176                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6177                           
  6178  0F07  01F4               	clrf	___wmul@product
  6179  0F08  01F5               	clrf	___wmul@product+1
  6180  0F09                     l1741:
  6181  0F09  1C70               	btfss	___wmul@multiplier,0
  6182  0F0A  2F0C               	goto	u1061
  6183  0F0B  2F0D               	goto	u1060
  6184  0F0C                     u1061:
  6185  0F0C  2F11               	goto	l386
  6186  0F0D                     u1060:
  6187  0F0D                     l1743:
  6188  0F0D  0872               	movf	___wmul@multiplicand,w
  6189  0F0E  07F4               	addwf	___wmul@product,f
  6190  0F0F  0873               	movf	___wmul@multiplicand+1,w
  6191  0F10  3DF5               	addwfc	___wmul@product+1,f
  6192  0F11                     l386:
  6193  0F11  3001               	movlw	1
  6194  0F12                     u1075:
  6195  0F12  35F2               	lslf	___wmul@multiplicand,f
  6196  0F13  0DF3               	rlf	___wmul@multiplicand+1,f
  6197  0F14  0B89               	decfsz	9,f
  6198  0F15  2F12               	goto	u1075
  6199  0F16                     l1745:
  6200  0F16  3001               	movlw	1
  6201  0F17                     u1085:
  6202  0F17  36F1               	lsrf	___wmul@multiplier+1,f
  6203  0F18  0CF0               	rrf	___wmul@multiplier,f
  6204  0F19  0B89               	decfsz	9,f
  6205  0F1A  2F17               	goto	u1085
  6206  0F1B                     l1747:
  6207  0F1B  0870               	movf	___wmul@multiplier,w
  6208  0F1C  0471               	iorwf	___wmul@multiplier+1,w
  6209  0F1D  1D03               	btfss	3,2
  6210  0F1E  2F20               	goto	u1091
  6211  0F1F  2F21               	goto	u1090
  6212  0F20                     u1091:
  6213  0F20  2F09               	goto	l1741
  6214  0F21                     u1090:
  6215  0F21                     l1749:
  6216  0F21  0875               	movf	___wmul@product+1,w
  6217  0F22  00F1               	movwf	?___wmul+1
  6218  0F23  0874               	movf	___wmul@product,w
  6219  0F24  00F0               	movwf	?___wmul
  6220  0F25                     l388:
  6221  0F25  0008               	return
  6222  0F26                     __end_of___wmul:
  6223                           
  6224                           	psect	text21
  6225  0E8B                     __ptext21:	
  6226 ;; *************** function _parsing *****************
  6227 ;; Defined at:
  6228 ;;		line 61 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  Value           2    0[COMMON] unsigned short 
  6231 ;;  Buffer          1    2[COMMON] PTR unsigned char 
  6232 ;;		 -> main@Buffer(10), 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  Printed         1    0        _Bool 
  6235 ;;  i               1    0        unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6245 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;Total ram usage:        5 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_main
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           
  6259                           ;psect for function _parsing
  6260  0E8B                     _parsing:
  6261  0E8B                     l2181:	
  6262                           ;incstack = 0
  6263                           ; Regs used in _parsing: [wreg+fsr1l+fsr1h+status,2+status,0]
  6264                           
  6265  0E8B                     l2183:
  6266                           
  6267                           ;main.c: 66:     if(Value)
  6268  0E8B  0870               	movf	parsing@Value,w
  6269  0E8C  0471               	iorwf	parsing@Value+1,w
  6270  0E8D  1903               	btfsc	3,2
  6271  0E8E  2E90               	goto	u1811
  6272  0E8F  2E91               	goto	u1810
  6273  0E90                     u1811:
  6274  0E90  2E9D               	goto	l2191
  6275  0E91                     u1810:
  6276  0E91                     l2185:
  6277                           
  6278                           ;main.c: 67:     {;main.c: 68:         *Buffer++ = Value;
  6279  0E91  0870               	movf	parsing@Value,w
  6280  0E92  00F3               	movwf	??_parsing
  6281  0E93  0872               	movf	parsing@Buffer,w
  6282  0E94  0086               	movwf	6
  6283  0E95  3001               	movlw	1	; select bank2/3
  6284  0E96  0087               	movwf	7
  6285  0E97  0873               	movf	??_parsing,w
  6286  0E98  0081               	movwf	1
  6287  0E99                     l2187:
  6288  0E99  3001               	movlw	1
  6289  0E9A  00F3               	movwf	??_parsing
  6290  0E9B  0873               	movf	??_parsing,w
  6291  0E9C  07F2               	addwf	parsing@Buffer,f
  6292  0E9D                     l2189:
  6293  0E9D                     l2191:
  6294                           
  6295                           ;main.c: 78:     *Buffer = '\0';
  6296  0E9D  0872               	movf	parsing@Buffer,w
  6297  0E9E  0086               	movwf	6
  6298  0E9F  3001               	movlw	1	; select bank2/3
  6299  0EA0  0087               	movwf	7
  6300  0EA1  0181               	clrf	1
  6301  0EA2                     l299:
  6302  0EA2  0008               	return
  6303  0EA3                     __end_of_parsing:
  6304                           
  6305                           	psect	text22
  6306  0004                     __ptext22:	
  6307 ;; *************** function _SYSTEM_Initialize *****************
  6308 ;; Defined at:
  6309 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0, pclath, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;Total ram usage:        0 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    2
  6330 ;; This function calls:
  6331 ;;		_EUSART1_Initialize
  6332 ;;		_EUSART2_Initialize
  6333 ;;		_OSCILLATOR_Initialize
  6334 ;;		_PIN_MANAGER_Initialize
  6335 ;;		_PMD_Initialize
  6336 ;; This function is called by:
  6337 ;;		_main
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function _SYSTEM_Initialize
  6343  0004                     _SYSTEM_Initialize:
  6344  0004                     l2171:	
  6345                           ;incstack = 0
  6346                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6347                           
  6348                           
  6349                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6350  0004  318E  264A  3180   	fcall	_PMD_Initialize
  6351  0007                     l2173:
  6352                           
  6353                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6354  0007  318F  27AA  3180   	fcall	_PIN_MANAGER_Initialize
  6355  000A                     l2175:
  6356                           
  6357                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6358  000A  318E  2652  3180   	fcall	_OSCILLATOR_Initialize
  6359  000D                     l2177:
  6360                           
  6361                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
  6362  000D  318F  2766  3180   	fcall	_EUSART1_Initialize
  6363  0010                     l2179:
  6364                           
  6365                           ;mcc_generated_files/mcc.c: 56:     EUSART2_Initialize();
  6366  0010  318F  2788  3180   	fcall	_EUSART2_Initialize
  6367  0013                     l131:
  6368  0013  0008               	return
  6369  0014                     __end_of_SYSTEM_Initialize:
  6370                           
  6371                           	psect	text23
  6372  0E4A                     __ptext23:	
  6373 ;; *************** function _PMD_Initialize *****************
  6374 ;; Defined at:
  6375 ;;		line 75 in file "mcc_generated_files/mcc.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_SYSTEM_Initialize
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           
  6403                           ;psect for function _PMD_Initialize
  6404  0E4A                     _PMD_Initialize:
  6405  0E4A                     l2093:	
  6406                           ;incstack = 0
  6407                           ; Regs used in _PMD_Initialize: [status,2]
  6408                           
  6409                           
  6410                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  6411  0E4A  014F               	movlb	15	; select bank15
  6412  0E4B  0196               	clrf	22	;volatile
  6413                           
  6414                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  6415  0E4C  0197               	clrf	23	;volatile
  6416                           
  6417                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  6418  0E4D  0198               	clrf	24	;volatile
  6419                           
  6420                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  6421  0E4E  0199               	clrf	25	;volatile
  6422                           
  6423                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  6424  0E4F  019A               	clrf	26	;volatile
  6425                           
  6426                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  6427  0E50  019B               	clrf	27	;volatile
  6428  0E51                     l137:
  6429  0E51  0008               	return
  6430  0E52                     __end_of_PMD_Initialize:
  6431                           
  6432                           	psect	text24
  6433  0FAA                     __ptext24:	
  6434 ;; *************** function _PIN_MANAGER_Initialize *****************
  6435 ;; Defined at:
  6436 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_SYSTEM_Initialize
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _PIN_MANAGER_Initialize
  6465  0FAA                     _PIN_MANAGER_Initialize:
  6466  0FAA                     l2095:	
  6467                           ;incstack = 0
  6468                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6469                           
  6470                           
  6471                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6472  0FAA  0140               	movlb	0	; select bank0
  6473  0FAB  0198               	clrf	24	;volatile
  6474                           
  6475                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6476  0FAC  0199               	clrf	25	;volatile
  6477                           
  6478                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6479  0FAD  019A               	clrf	26	;volatile
  6480  0FAE                     l2097:
  6481                           
  6482                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  6483  0FAE  3037               	movlw	55
  6484  0FAF  0092               	movwf	18	;volatile
  6485  0FB0                     l2099:
  6486                           
  6487                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  6488  0FB0  3070               	movlw	112
  6489  0FB1  0093               	movwf	19	;volatile
  6490  0FB2                     l2101:
  6491                           
  6492                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFE;
  6493  0FB2  30FE               	movlw	254
  6494  0FB3  0094               	movwf	20	;volatile
  6495  0FB4                     l2103:
  6496                           
  6497                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFD;
  6498  0FB4  30FD               	movlw	253
  6499  0FB5  017E               	movlb	62	; select bank62
  6500  0FB6  00CE               	movwf	78	;volatile
  6501  0FB7                     l2105:
  6502                           
  6503                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xD0;
  6504  0FB7  30D0               	movlw	208
  6505  0FB8  00C3               	movwf	67	;volatile
  6506  0FB9                     l2107:
  6507                           
  6508                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  6509  0FB9  3037               	movlw	55
  6510  0FBA  00B8               	movwf	56	;volatile
  6511                           
  6512                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6513  0FBB  01C4               	clrf	68	;volatile
  6514                           
  6515                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6516  0FBC  01B9               	clrf	57	;volatile
  6517                           
  6518                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  6519  0FBD  01CF               	clrf	79	;volatile
  6520                           
  6521                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  6522  0FBE  01BA               	clrf	58	;volatile
  6523                           
  6524                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  6525  0FBF  01C5               	clrf	69	;volatile
  6526                           
  6527                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  6528  0FC0  01D0               	clrf	80	;volatile
  6529  0FC1                     l2109:
  6530                           
  6531                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  6532  0FC1  301F               	movlw	31
  6533  0FC2  00BB               	movwf	59	;volatile
  6534  0FC3                     l2111:
  6535                           
  6536                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  6537  0FC3  01C6               	clrf	70	;volatile
  6538                           
  6539                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  6540  0FC4  303F               	movlw	63
  6541  0FC5  00D1               	movwf	81	;volatile
  6542                           
  6543                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  6544  0FC6  303F               	movlw	63
  6545  0FC7  00BC               	movwf	60	;volatile
  6546  0FC8                     l2113:
  6547                           
  6548                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  6549  0FC8  01C7               	clrf	71	;volatile
  6550  0FC9                     l2115:
  6551                           
  6552                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  6553  0FC9  303F               	movlw	63
  6554  0FCA  00D2               	movwf	82	;volatile
  6555  0FCB                     l2117:
  6556                           
  6557                           ;mcc_generated_files/pin_manager.c: 113:     RC0PPS = 0x11;
  6558  0FCB  3011               	movlw	17
  6559  0FCC  00A0               	movwf	32	;volatile
  6560  0FCD                     l2119:
  6561                           
  6562                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x0F;
  6563  0FCD  300F               	movlw	15
  6564  0FCE  009F               	movwf	31	;volatile
  6565  0FCF                     l2121:
  6566                           
  6567                           ;mcc_generated_files/pin_manager.c: 115:     RX2DTPPS = 0x11;
  6568  0FCF  3011               	movlw	17
  6569  0FD0  017D               	movlb	61	; select bank61
  6570  0FD1  00CD               	movwf	77	;volatile
  6571  0FD2                     l2123:
  6572                           
  6573                           ;mcc_generated_files/pin_manager.c: 116:     RX1DTPPS = 0x0D;
  6574  0FD2  300D               	movlw	13
  6575  0FD3  00CB               	movwf	75	;volatile
  6576  0FD4                     l278:
  6577  0FD4  0008               	return
  6578  0FD5                     __end_of_PIN_MANAGER_Initialize:
  6579                           
  6580                           	psect	text25
  6581  0E52                     __ptext25:	
  6582 ;; *************** function _OSCILLATOR_Initialize *****************
  6583 ;; Defined at:
  6584 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_SYSTEM_Initialize
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function _OSCILLATOR_Initialize
  6613  0E52                     _OSCILLATOR_Initialize:
  6614  0E52                     l2125:	
  6615                           ;incstack = 0
  6616                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6617                           
  6618                           
  6619                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  6620  0E52  3062               	movlw	98
  6621  0E53  0151               	movlb	17	; select bank17
  6622  0E54  008D               	movwf	13	;volatile
  6623  0E55                     l2127:
  6624                           
  6625                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6626  0E55  018F               	clrf	15	;volatile
  6627  0E56                     l2129:
  6628                           
  6629                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6630  0E56  0191               	clrf	17	;volatile
  6631                           
  6632                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
  6633  0E57  3002               	movlw	2
  6634  0E58  0093               	movwf	19	;volatile
  6635  0E59                     l2131:
  6636                           
  6637                           ;mcc_generated_files/mcc.c: 70:     OSCSTAT = 0x00;
  6638  0E59  0190               	clrf	16	;volatile
  6639  0E5A                     l2133:
  6640                           
  6641                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  6642  0E5A  0192               	clrf	18	;volatile
  6643  0E5B                     l134:
  6644  0E5B  0008               	return
  6645  0E5C                     __end_of_OSCILLATOR_Initialize:
  6646                           
  6647                           	psect	text26
  6648  0F88                     __ptext26:	
  6649 ;; *************** function _EUSART2_Initialize *****************
  6650 ;; Defined at:
  6651 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, pclath, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;Total ram usage:        0 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    1
  6672 ;; This function calls:
  6673 ;;		_EUSART2_SetErrorHandler
  6674 ;;		_EUSART2_SetFramingErrorHandler
  6675 ;;		_EUSART2_SetOverrunErrorHandler
  6676 ;; This function is called by:
  6677 ;;		_SYSTEM_Initialize
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function _EUSART2_Initialize
  6683  0F88                     _EUSART2_Initialize:
  6684  0F88                     l2135:	
  6685                           ;incstack = 0
  6686                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6687                           
  6688                           
  6689                           ;mcc_generated_files/eusart2.c: 71:     BAUD2CON = 0x08;
  6690  0F88  3008               	movlw	8
  6691  0F89  0154               	movlb	20	; select bank20
  6692  0F8A  009F               	movwf	31	;volatile
  6693                           
  6694                           ;mcc_generated_files/eusart2.c: 74:     RC2STA = 0x90;
  6695  0F8B  3090               	movlw	144
  6696  0F8C  009D               	movwf	29	;volatile
  6697                           
  6698                           ;mcc_generated_files/eusart2.c: 77:     TX2STA = 0x24;
  6699  0F8D  3024               	movlw	36
  6700  0F8E  009E               	movwf	30	;volatile
  6701                           
  6702                           ;mcc_generated_files/eusart2.c: 80:     SP2BRGL = 0x19;
  6703  0F8F  3019               	movlw	25
  6704  0F90  009B               	movwf	27	;volatile
  6705  0F91                     l2137:
  6706                           
  6707                           ;mcc_generated_files/eusart2.c: 83:     SP2BRGH = 0x00;
  6708  0F91  019C               	clrf	28	;volatile
  6709  0F92                     l2139:
  6710                           
  6711                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  6712  0F92  3000               	movlw	0
  6713  0F93  00F0               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
  6714  0F94  3000               	movlw	0
  6715  0F95  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
  6716  0F96  318E  262C  318F   	fcall	_EUSART2_SetFramingErrorHandler
  6717  0F99                     l2141:
  6718                           
  6719                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  6720  0F99  3000               	movlw	0
  6721  0F9A  00F0               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
  6722  0F9B  3000               	movlw	0
  6723  0F9C  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
  6724  0F9D  318E  2632  318F   	fcall	_EUSART2_SetOverrunErrorHandler
  6725  0FA0                     l2143:
  6726                           
  6727                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  6728  0FA0  3000               	movlw	0
  6729  0FA1  00F0               	movwf	EUSART2_SetErrorHandler@interruptHandler
  6730  0FA2  3000               	movlw	0
  6731  0FA3  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
  6732  0FA4  318E  2626  318F   	fcall	_EUSART2_SetErrorHandler
  6733  0FA7                     l2145:
  6734                           
  6735                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  6736  0FA7  0141               	movlb	1	; select bank1
  6737  0FA8  01A8               	clrf	_eusart2RxLastError^(0+128)	;volatile
  6738  0FA9                     l180:
  6739  0FA9  0008               	return
  6740  0FAA                     __end_of_EUSART2_Initialize:
  6741                           
  6742                           	psect	text27
  6743  0E32                     __ptext27:	
  6744 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6745 ;; Defined at:
  6746 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6749 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;		None
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		wreg
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;Total ram usage:        2 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_EUSART2_Initialize
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _EUSART2_SetOverrunErrorHandler
  6776  0E32                     _EUSART2_SetOverrunErrorHandler:
  6777  0E32                     l2001:	
  6778                           ;incstack = 0
  6779                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
  6780                           
  6781                           
  6782                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  6783  0E32  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
  6784  0E33  0141               	movlb	1	; select bank1
  6785  0E34  00DE               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+128)
  6786  0E35  0870               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
  6787  0E36  00DD               	movwf	_EUSART2_OverrunErrorHandler^(0+128)
  6788  0E37                     l222:
  6789  0E37  0008               	return
  6790  0E38                     __end_of_EUSART2_SetOverrunErrorHandler:
  6791                           
  6792                           	psect	text28
  6793  0E2C                     __ptext28:	
  6794 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6795 ;; Defined at:
  6796 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6799 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        2 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_EUSART2_Initialize
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _EUSART2_SetFramingErrorHandler
  6826  0E2C                     _EUSART2_SetFramingErrorHandler:
  6827  0E2C                     l1999:	
  6828                           ;incstack = 0
  6829                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
  6830                           
  6831                           
  6832                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  6833  0E2C  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
  6834  0E2D  0141               	movlb	1	; select bank1
  6835  0E2E  00E0               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+128)
  6836  0E2F  0870               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
  6837  0E30  00DF               	movwf	_EUSART2_FramingErrorHandler^(0+128)
  6838  0E31                     l219:
  6839  0E31  0008               	return
  6840  0E32                     __end_of_EUSART2_SetFramingErrorHandler:
  6841                           
  6842                           	psect	text29
  6843  0E26                     __ptext29:	
  6844 ;; *************** function _EUSART2_SetErrorHandler *****************
  6845 ;; Defined at:
  6846 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6849 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;Total ram usage:        2 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_EUSART2_Initialize
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           
  6875                           ;psect for function _EUSART2_SetErrorHandler
  6876  0E26                     _EUSART2_SetErrorHandler:
  6877  0E26                     l2003:	
  6878                           ;incstack = 0
  6879                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
  6880                           
  6881                           
  6882                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  6883  0E26  0871               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
  6884  0E27  0141               	movlb	1	; select bank1
  6885  0E28  00DC               	movwf	(_EUSART2_ErrorHandler+1)^(0+128)
  6886  0E29  0870               	movf	EUSART2_SetErrorHandler@interruptHandler,w
  6887  0E2A  00DB               	movwf	_EUSART2_ErrorHandler^(0+128)
  6888  0E2B                     l225:
  6889  0E2B  0008               	return
  6890  0E2C                     __end_of_EUSART2_SetErrorHandler:
  6891                           
  6892                           	psect	text30
  6893  0F66                     __ptext30:	
  6894 ;; *************** function _EUSART1_Initialize *****************
  6895 ;; Defined at:
  6896 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    1
  6917 ;; This function calls:
  6918 ;;		_EUSART1_SetErrorHandler
  6919 ;;		_EUSART1_SetFramingErrorHandler
  6920 ;;		_EUSART1_SetOverrunErrorHandler
  6921 ;; This function is called by:
  6922 ;;		_SYSTEM_Initialize
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _EUSART1_Initialize
  6928  0F66                     _EUSART1_Initialize:
  6929  0F66                     l2081:	
  6930                           ;incstack = 0
  6931                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6932                           
  6933                           
  6934                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  6935  0F66  3008               	movlw	8
  6936  0F67  0142               	movlb	2	; select bank2
  6937  0F68  009F               	movwf	31	;volatile
  6938                           
  6939                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  6940  0F69  3090               	movlw	144
  6941  0F6A  009D               	movwf	29	;volatile
  6942                           
  6943                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  6944  0F6B  3024               	movlw	36
  6945  0F6C  009E               	movwf	30	;volatile
  6946                           
  6947                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
  6948  0F6D  3019               	movlw	25
  6949  0F6E  009B               	movwf	27	;volatile
  6950  0F6F                     l2083:
  6951                           
  6952                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  6953  0F6F  019C               	clrf	28	;volatile
  6954  0F70                     l2085:
  6955                           
  6956                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6957  0F70  3000               	movlw	0
  6958  0F71  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  6959  0F72  3000               	movlw	0
  6960  0F73  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  6961  0F74  318E  261A  318F   	fcall	_EUSART1_SetFramingErrorHandler
  6962  0F77                     l2087:
  6963                           
  6964                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6965  0F77  3000               	movlw	0
  6966  0F78  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  6967  0F79  3000               	movlw	0
  6968  0F7A  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  6969  0F7B  318E  2620  318F   	fcall	_EUSART1_SetOverrunErrorHandler
  6970  0F7E                     l2089:
  6971                           
  6972                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6973  0F7E  3000               	movlw	0
  6974  0F7F  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  6975  0F80  3000               	movlw	0
  6976  0F81  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  6977  0F82  318E  2614  318F   	fcall	_EUSART1_SetErrorHandler
  6978  0F85                     l2091:
  6979                           
  6980                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6981  0F85  0141               	movlb	1	; select bank1
  6982  0F86  01A9               	clrf	_eusart1RxLastError^(0+128)	;volatile
  6983  0F87                     l43:
  6984  0F87  0008               	return
  6985  0F88                     __end_of_EUSART1_Initialize:
  6986                           
  6987                           	psect	text31
  6988  0E20                     __ptext31:	
  6989 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6990 ;; Defined at:
  6991 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6994 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;Total ram usage:        2 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_EUSART1_Initialize
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           
  7020                           ;psect for function _EUSART1_SetOverrunErrorHandler
  7021  0E20                     _EUSART1_SetOverrunErrorHandler:
  7022  0E20                     l1995:	
  7023                           ;incstack = 0
  7024                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  7025                           
  7026                           
  7027                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  7028  0E20  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  7029  0E21  0141               	movlb	1	; select bank1
  7030  0E22  00E4               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  7031  0E23  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  7032  0E24  00E3               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  7033  0E25                     l91:
  7034  0E25  0008               	return
  7035  0E26                     __end_of_EUSART1_SetOverrunErrorHandler:
  7036                           
  7037                           	psect	text32
  7038  0E1A                     __ptext32:	
  7039 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7040 ;; Defined at:
  7041 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7044 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;Total ram usage:        2 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_EUSART1_Initialize
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           
  7070                           ;psect for function _EUSART1_SetFramingErrorHandler
  7071  0E1A                     _EUSART1_SetFramingErrorHandler:
  7072  0E1A                     l1993:	
  7073                           ;incstack = 0
  7074                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  7075                           
  7076                           
  7077                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  7078  0E1A  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  7079  0E1B  0141               	movlb	1	; select bank1
  7080  0E1C  00E6               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  7081  0E1D  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  7082  0E1E  00E5               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  7083  0E1F                     l88:
  7084  0E1F  0008               	return
  7085  0E20                     __end_of_EUSART1_SetFramingErrorHandler:
  7086                           
  7087                           	psect	text33
  7088  0E14                     __ptext33:	
  7089 ;; *************** function _EUSART1_SetErrorHandler *****************
  7090 ;; Defined at:
  7091 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  7094 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		wreg
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;Total ram usage:        2 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_EUSART1_Initialize
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _EUSART1_SetErrorHandler
  7121  0E14                     _EUSART1_SetErrorHandler:
  7122  0E14                     l1997:	
  7123                           ;incstack = 0
  7124                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  7125                           
  7126                           
  7127                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7128  0E14  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  7129  0E15  0141               	movlb	1	; select bank1
  7130  0E16  00E2               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  7131  0E17  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  7132  0E18  00E1               	movwf	_EUSART1_ErrorHandler^(0+128)
  7133  0E19                     l94:
  7134  0E19  0008               	return
  7135  0E1A                     __end_of_EUSART1_SetErrorHandler:
  7136                           
  7137                           	psect	text34
  7138  0E66                     __ptext34:	
  7139 ;; *************** function _EUSART1_Read *****************
  7140 ;; Defined at:
  7141 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      unsigned char 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_main
  7165 ;;		_getch
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function _EUSART1_Read
  7171  0E66                     _EUSART1_Read:
  7172  0E66                     l2159:	
  7173                           ;incstack = 0
  7174                           ; Regs used in _EUSART1_Read: [wreg+status,2]
  7175                           
  7176  0E66                     l60:	
  7177                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
  7178                           
  7179                           
  7180                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
  7181  0E66  014E               	movlb	14	; select bank14
  7182  0E67  1E8F               	btfss	15,5	;volatile
  7183  0E68  2E6A               	goto	u1791
  7184  0E69  2E6B               	goto	u1790
  7185  0E6A                     u1791:
  7186  0E6A  2E66               	goto	l60
  7187  0E6B                     u1790:
  7188  0E6B                     l2161:
  7189                           
  7190                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7191  0E6B  0141               	movlb	1	; select bank1
  7192  0E6C  01A9               	clrf	_eusart1RxLastError^(0+128)	;volatile
  7193  0E6D                     l2163:
  7194                           
  7195                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  7196  0E6D  0142               	movlb	2	; select bank2
  7197  0E6E  1C9D               	btfss	29,1	;volatile
  7198  0E6F  2E71               	goto	u1801
  7199  0E70  2E72               	goto	u1800
  7200  0E71                     u1801:
  7201  0E71  2E74               	goto	l2167
  7202  0E72                     u1800:
  7203  0E72                     l2165:
  7204                           
  7205                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  7206  0E72  121D               	bcf	29,4	;volatile
  7207                           
  7208                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  7209  0E73  161D               	bsf	29,4	;volatile
  7210  0E74                     l2167:
  7211                           
  7212                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  7213  0E74  0819               	movf	25,w	;volatile
  7214  0E75                     l64:
  7215  0E75  0008               	return
  7216  0E76                     __end_of_EUSART1_Read:
  7217  007E                     btemp	set	126	;btemp
  7218  007E                     wtemp0	set	126
  7219                           
  7220                           	psect	config
  7221                           
  7222                           ;Config register CONFIG1 @ 0x8007
  7223                           ;	External Oscillator mode selection bits
  7224                           ;	FEXTOSC = OFF, Oscillator not enabled
  7225                           ;	Power-up default value for COSC bits
  7226                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  7227                           ;	Clock Out Enable bit
  7228                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  7229                           ;	Clock Switch Enable bit
  7230                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7231                           ;	Fail-Safe Clock Monitor Enable bit
  7232                           ;	FCMEN = ON, FSCM timer enabled
  7233  8007                     	org	32775
  7234  8007  3FEC               	dw	16364
  7235                           
  7236                           ;Config register CONFIG2 @ 0x8008
  7237                           ;	Master Clear Enable bit
  7238                           ;	MCLRE = ON, MCLR pin is Master Clear function
  7239                           ;	Power-up Timer Enable bit
  7240                           ;	PWRTE = OFF, PWRT disabled
  7241                           ;	Low-Power BOR enable bit
  7242                           ;	LPBOREN = OFF, ULPBOR disabled
  7243                           ;	Brown-out reset enable bits
  7244                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7245                           ;	Brown-out Reset Voltage Selection
  7246                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  7247                           ;	Zero-cross detect disable
  7248                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  7249                           ;	Peripheral Pin Select one-way control
  7250                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  7251                           ;	Stack Overflow/Underflow Reset Enable bit
  7252                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7253  8008                     	org	32776
  7254  8008  3FFF               	dw	16383
  7255                           
  7256                           ;Config register CONFIG3 @ 0x8009
  7257                           ;	WDT Period Select bits
  7258                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7259                           ;	WDT operating mode
  7260                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  7261                           ;	WDT Window Select bits
  7262                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7263                           ;	WDT input clock selector
  7264                           ;	WDTCCS = SC, Software Control
  7265  8009                     	org	32777
  7266  8009  3F9F               	dw	16287
  7267                           
  7268                           ;Config register CONFIG4 @ 0x800A
  7269                           ;	Boot Block Size Selection bits
  7270                           ;	BBSIZE = BB512, 512 words boot block size
  7271                           ;	Boot Block Enable bit
  7272                           ;	BBEN = OFF, Boot Block disabled
  7273                           ;	SAF Enable bit
  7274                           ;	SAFEN = OFF, SAF disabled
  7275                           ;	Application Block Write Protection bit
  7276                           ;	WRTAPP = OFF, Application Block not write protected
  7277                           ;	Boot Block Write Protection bit
  7278                           ;	WRTB = OFF, Boot Block not write protected
  7279                           ;	Configuration Register Write Protection bit
  7280                           ;	WRTC = OFF, Configuration Register not write protected
  7281                           ;	Storage Area Flash Write Protection bit
  7282                           ;	WRTSAF = OFF, SAF not write protected
  7283                           ;	Low Voltage Programming Enable bit
  7284                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  7285  800A                     	org	32778
  7286  800A  3FFF               	dw	16383
  7287                           
  7288                           ;Config register CONFIG5 @ 0x800B
  7289                           ;	UserNVM Program memory code protection bit
  7290                           ;	CP = OFF, UserNVM code protection disabled
  7291  800B                     	org	32779
  7292  800B  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        85
    BSS         62
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     17      76
    BANK2            80     80      80
    BANK3            80     14      34
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), main@s1(BANK1[5]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), main@s1(BANK1[5]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> main@sentence(BANK2[80]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 80
		 -> main@sentence(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[32]), main@sentence(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S768_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> NULL(NULL[0]), main@sentence(BANK2[80]), 

    main@position_ptr	PTR unsigned char  size(1) Largest target is 80
		 -> NULL(NULL[0]), main@sentence(BANK2[80]), 

    parsing@Buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@Buffer(BANK3[10]), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _puts->_fputs
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0   17529
                                              4 BANK1     13    13      0
                                              0 BANK2     80    80      0
                                              0 BANK3     14    14      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                            _parsing
                             _printf
                               _puts
                             _strchr
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strchr                                               3     1      2     197
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 4     4      0    3540
                                              6 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   12314
                                             74 BANK0      6     0      6
                                              0 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   12131
                                             66 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   11660
                                             46 BANK0     20    18      2
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6022
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4170
                                             13 COMMON     1     1      0
                                              6 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _fputs                                                9     6      3    1990
                                             10 COMMON     3     0      3
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    1765
                                             10 COMMON     2     0      2
                                              0 BANK0      8     8      0
                              _fputc
 ---------------------------------------------------------------------------------
 (3) _fputc                                                8     5      3    1436
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1085
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _parsing                                              6     3      3     243
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _parsing
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
   _puts
     _fputc
       _putch
         _EUSART1_Write
     _fputs
       _fputc
         _putch
           _EUSART1_Write
   _strchr
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     16C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     11      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     50      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      E      22      12       42.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 11:06:37 2021

                                            l43 0F87                                              l60 0E66  
                                            l70 0E65                                              l64 0E75  
                                            l91 0E25                                              l67 0E5D  
                                            l76 0E3D                                              l94 0E19  
                                            l88 0E1F                             ___wmul@multiplicand 0072  
                                           l131 0013                                             l222 0E37  
                                           l134 0E5B                                             l225 0E2B  
                                           l137 0E51                                             l219 0E31  
                                           l180 0FA9                                             l500 03E3  
                                           l278 0FD4                                             l386 0F11  
                                           l299 0EA2                                             l388 0F25  
                                           l901 01AD                                             l486 04D3  
                                           l910 056C                                             l487 04E4  
                                           l904 052E                                             l913 05DC  
                                           l905 0537                                             l499 03D2  
                                           l909 0554                                             l942 07D4  
                                           l927 0652                                             l880 00FA  
                                           l952 0044                                             l849 0E8A  
                                           l883 011C                                             l956 0F06  
                                           l884 012D                                             l885 0139  
                                           l990 02F9                                             l959 0F06  
                                           l896 0170                                             l993 0EBA  
                                           l977 0288                                             l899 0192  
                                           u990 0E62                                             u991 0E61  
        __end_of_EUSART2_SetFramingErrorHandler 0E32         __size_of_EUSART2_SetFramingErrorHandler 0006  
                _EUSART2_SetFramingErrorHandler 0E2C                                             _abs 0EED  
                                           _pad 00DB                                             _ptr 01A0  
                       __size_of_PMD_Initialize 0008                                             wreg 0009  
                                          l1001 0F65                                            l1016 008A  
                                          l1024 0FFF                                            l2001 0E32  
                                          l1033 0F44                                            l2003 0E26  
                                          ?_abs 0073                                            l1036 0ED5  
                                          l2101 0FB2                                            l1045 0ED3  
                                          l1038 0EEC                                            l2111 0FC3  
                                          l2103 0FB4                                            l2121 0FCF  
                                          l2113 0FC8                                            l2105 0FB7  
                                          l2131 0E59                                            l2123 0FD2  
                                          l2115 0FC9                                            l2107 0FB9  
                                          l2211 0EE1                                            l2141 0F99  
                                          l2133 0E5A                                            l2125 0E52  
                                          l2117 0FCB                                            l2109 0FC1  
                                          l2301 0FD9                                            l2213 0EEB  
                                          l2205 0ED5                                            l2143 0FA0  
                                          l2135 0F88                                            l2127 0E55  
                                          l2119 0FCD                                            l2303 0FE7  
                                          l2311 00DD                                            l2207 0EDF  
                                          l2161 0E6B                                            l2081 0F66  
                                          l2145 0FA7                                            l2137 0F91  
                                          l2129 0E56                                            l2305 0FEC  
                                          l2321 00FD                                            l2313 00E2  
                                          l2401 0691                                            l2163 0E6D  
                                          l2091 0F85                                            l2083 0F6F  
                                          l2139 0F92                                            l2171 0004  
                                          l2307 0FFB                                            l2323 0109  
                                          l2315 00EE                                            l2331 04E7  
                                          l2411 06B9                                            l2403 069E  
                                          l2165 0E72                                            l2085 0F70  
                                          l2093 0E4A                                            l2173 0007  
                                          l2181 0E8B                                            l1701 0045  
                                          l2325 010E                                            l2317 00F3  
                                          l2341 0546                                            l2333 04F7  
                                          l2421 06FD                                            l2413 06C1  
                                          l2405 06A2                                            l2501 01C4  
                                          l2167 0E74                                            l2159 0E66  
                                          l2087 0F77                                            l2095 0FAA  
                                          l2175 000A                                            l2191 0E9D  
                                          l2183 0E8B                                            l1711 007B  
                                          l1703 004A                                            l2327 0121  
                                          l2319 00F8                                            l2351 0571  
                                          l2343 054C                                            l2335 050A  
                                          l2431 0730                                            l2423 0705  
                                          l2407 06A3                                            l2511 01F0  
                                          l2503 01D3                                            l2089 0F7E  
                                          l2097 0FAE                                            l2177 000D  
                                          l2185 0E91                                            l1713 0083  
                                          l1705 004F                                            l1801 034F  
                                          l1721 0EC5                                            l2361 05AF  
                                          l2353 0574                                            l2345 055C  
                                          l2337 0510                                            l2441 077C  
                                          l2433 0741                                            l2425 0711  
                                          l2417 06E5                                            l2409 06A9  
                                          l2521 022F                                            l2513 01F7  
                                          l2505 01D3                                            l2099 0FB0  
                                          l2179 0010                                            l2187 0E99  
                                          l1707 0054                                            l1811 036F  
                                          l1803 035C                                            l1723 0ECD  
                                          l2363 05EA                                            l2371 0617  
                                          l2355 0579                                            l2347 0562  
                                          l2339 0533                                            l2443 078D  
                                          l2451 07A6                                            l2435 0749  
                                          l2419 06EB                                            l2523 023C  
                                          l2515 01FB                                            l2507 01D7  
                                          l2189 0E9D                                            l1741 0F09  
                                          l1709 005E                                            l1813 0391  
                                          l1805 035F                                            l1717 0EBC  
                                          l2381 0633                                            l2373 061E  
                                          l2365 05F7                                            l2357 05A7  
                                          l2349 0567                                            l2453 07AE  
                                          l2445 0795                                            l2437 0762  
                                          l2429 071F                                            l2517 021B  
                                          l2509 01EB                                            l1743 0F0D  
                                          l1815 03A1                                            l1807 0367  
                                          l1719 0EC1                                            l2383 0637  
                                          l2375 0623                                            l2367 0604  
                                          l2359 05AB                                            l2447 07A0  
                                          l2391 0666                                            l2471 0032  
                                          l2519 0220                                            l1745 0F16  
                                          l1761 041A                                            l1753 03E4  
                                          l1809 036B                                            l1817 03AF  
                                          l1841 0EED                                            l2377 0628  
                                          l2385 063F                                            l2369 0612  
                                          l2393 066E                                            l2457 07B1  
                                          l2473 003C                                            l2465 0016  
                                          l2481 0F36                                            l1747 0F1B  
                                          l1739 0F07                                            l1851 0F47  
                                          l2555 0299                                            l1771 0457  
                                          l1763 0439                                            l1755 03E5  
                                          l1819 03B4                                            l1843 0EFA  
                                          l2299 0FD5                                            l2379 062E  
                                          l2459 07CA                                            l2395 0673  
                                          l2467 001A                                            l2491 0E7B  
                                          l2483 0F42                                            l1749 0F21  
                                          l1845 0EA3                                            l1853 0F4E  
                                          l1861 013C                                            l1781 0491  
                                          l1773 045F                                            l1765 043D  
                                          l1757 03EF                                            l2397 0677  
                                          l2389 0655                                            l2469 001E  
                                          l2485 0F44                                            l2477 0F28  
                                          l1855 0F5D                                            l1951 0255  
                                          l1695 0E5D                                            l1871 0168  
                                          l1863 0143                                            l1783 04A1  
                                          l1775 0463                                            l1767 0447  
                                          l1759 0410                                            l1791 02FA  
                                          l2399 0689                                            l2479 0F2A  
                                          l2495 01AE                                            l1857 0F5E  
                                          l1849 0F45                                            l1953 0257  
                                          l1697 0E62                                            l1881 0184  
                                          l1865 014B                                            l1785 04A2  
                                          l1777 0467                                            l1769 0454  
                                          l1793 02FB                                            l2489 0E76  
                                          l2497 01B1                                            l1963 027D  
                                          l1955 0261                                            l1947 024B  
                                          l1699 0E39                                            l1883 0197  
                                          l1875 016E                                            l1867 0154  
                                          l1779 046F                                            l1787 04B0  
                                          l1795 0305                                            l2499 01C0  
                                          l1981 02E9                                            l1973 02C1  
                                          l1965 0284                                            l1957 0275  
                                          l1949 0251                                            l1885 01A6  
                                          l1877 0173                                            l1869 0159  
                                          l1789 04B5                                            l1797 0326  
                                          ?_pad 0026                                            l1983 02F5  
                                          l1967 028D                                            l1959 0276  
                                          l1879 017F                                            l1799 0330  
                                          l1993 0E1A                                            l1977 02DD  
                                          l1969 02A1                                            l1995 0E20  
                                          l1979 02E3                                            l1997 0E14  
                                          l1999 0E2C                                            STR_1 1000  
                                          u1000 004A                                            u1001 0049  
                                          u1010 004F                                            u1011 004E  
                                          u1020 005E                                            u1100 03EF  
                                          u1021 005D                                            u1101 03EE  
                                          u1030 007B                                            u1031 007A  
                                          u1120 041A                                            u1040 0ECD  
                                          u1121 0419                                            u1041 0ECC  
                                          u1210 0305                                            u2010 0533  
                                          u1035 0077                                            u1211 0304  
                                          u2011 0532                                            u1060 0F0D  
                                          u1140 0444                                            u2100 061E  
                                          u2020 0546                                            u1061 0F0C  
                                          u2101 061D                                            u2021 0545  
                                          u1150 0454                                            u1230 0330  
                                          u2110 0623                                            u2030 0562  
                                          u1151 0453                                            u1231 032F  
                                          u2111 0622                                            u2031 0561  
                                          u1400 0143                                            u1160 0467  
                                          u2120 062E                                            u2040 0567  
                                          u2200 0730                                            u1401 0142  
                                          u1161 0466                                            u2121 062D  
                                          u2041 0566                                            u2025 0542  
                                          u2201 072F                                            u1090 0F21  
                                          u1410 0159                                            u1170 0491  
                                          u1250 035C                                            u2050 05EA  
                                          u2210 0741                                            u2130 0666  
                                          u1091 0F20                                            u1075 0F12  
                                          u1411 0158                                            u1171 0490  
                                          u1251 035B                                            u2051 05E9  
                                          u2211 0740                                            u2131 0665  
                                          u1420 016D                                            u1180 04B0  
                                          u1260 036F                                            u2060 05F7  
                                          u2220 078D                                            u2140 0689  
                                          u1085 0F17                                            u1421 016C  
                                          u1181 04AF                                            u1261 036E  
                                          u2061 05F6                                            u2221 078C  
                                          u2141 0688                                            _LATA 0018  
                                          u1430 0192                                            u1190 04B5  
                                          u1270 0391                                            u1350 0EFA  
                                          u2070 0604                                            u2150 06A2  
                                          u2230 003C                                            _LATB 0019  
                                          u1431 0191                                            u1191 04B4  
                                          u1175 048D                                            u1271 0390  
                                          u1351 0EF9                                            u2071 0603  
                                          u2055 05E6                                            u2151 06A1  
                                          u2231 003B                                            _LATC 001A  
                                          u1360 0EB3                                            u1440 0197  
                                          u1280 03AF                                            u2080 0612  
                                          u2160 06DE                                            u2240 0F36  
                                          u1361 0EB1                                            u1441 0196  
                                          u1281 03AE                                            u2081 0611  
                                          u2161 06DC                                            u2241 0F35  
                                          u1370 0EB4                                            u1610 0261  
                                          u1290 03B4                                            u2090 0617  
                                          u2170 06DF                                            u2250 0F42  
                                          u1611 0260                                            u1435 018E  
                                          u1291 03B3                                            u1275 038D  
                                          u1355 0EF6                                            u2091 0616  
                                          u2075 0600                                            u2251 0F41  
                                          u1380 0F4E                                            u1620 0275  
                                          u2180 06EB                                            u2260 01BC  
                                          u1381 0F4D                                            u1621 0274  
                                          u2085 060E                                            u2181 06EA  
                                          u1390 0F5D                                            u1630 0283  
                                          u2190 06FD                                            u2270 01CF  
                                          u1391 0F5C                                            u1631 0282  
                                          u2191 06FC                                            u1800 0E72  
                                          u1640 02D6                                            u2280 01F0  
                                          u1801 0E71                                            u1641 02D4  
                                          u2281 01EF                                            u1810 0E91  
                                          u1650 02D7                                            u2290 022F  
                                          u1811 0E90                                            u2291 022E  
                                          u1660 02E3                                            u1661 02E2  
                                          u1670 02E9                                            u1671 02E8  
                                          u2295 022B                                            u1920 0FFB  
                                          u1840 0EDF                                            u1921 0FFA  
                                          u1841 0EDE                                            u1930 00E2  
                                          u1850 0EEB                                            u1931 00E1  
                                          u1851 0EEA                                            u1940 00F3  
                                          u1941 00F2                                            u1790 0E6B  
                                          u1950 011C                                            u1791 0E6A  
                                          u1951 011B                                            u1960 0121  
                                          u1961 0120                                            u1970 0502  
                                          u1955 0118                                            u1971 0500  
                                          u1980 0503                                            _PMD0 0796  
                                          _PMD1 0797                                            u1990 0510  
                                          _PMD2 0798                                            u1991 050F  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 _EUSART1_Write 0E5C                                            abs@a 0073  
                                          _dbuf 00AA                                            _atoi 024B  
                                          _ctoa 013A                                            _main 01AE  
                                          _dtoa 04E5                                   ?_EUSART1_Read 0070  
                                          _prec 00A4                                            _nout 00A0  
                                          pad@i 0029                                            pad@p 0027  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 002B                                            btemp 007E  
                                          _puts 0F26                                            start 0002  
                                         ??_abs 0075                                           ??_pad 007D  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 0E5C  
                               __end_of___aodiv 04E5                                           ?_atoi 0076  
                                         ?_ctoa 007A                                           ?_main 0070  
                                         ?_dtoa 0030                                 __end_of___aomod 03E4  
                                         ?_puts 0070                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 004E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _flags 00A6                                           _fputc 0045  
                                         _fputs 0FD5                                 __end_of_isdigit 0EBB  
                                         atoi@n 0027                                           pad@fp 002D  
                                         atoi@s 0076                                           _width 00A2  
                                         ctoa@c 007A                                           _putch 0E38  
                                         ctoa@l 0023                                           ctoa@w 0025  
                                  main@sentence 0120                                           main@i 01C0  
                                         dtoa@d 0030                                           dtoa@i 004C  
                               __end_of_parsing 0EA3                                           dtoa@n 0044  
                                         dtoa@p 003E                                           dtoa@s 0042  
                                         dtoa@w 0040                                 __end_of_isspace 0F66  
                                ?_EUSART1_Write 0070                                    main@position 00D8  
                                ??_EUSART1_Read 0070                                           puts@s 0028  
                                         status 0003                                           wtemp0 007E  
            _EUSART1_DefaultFramingErrorHandler 0000                                 __initialization 07D5  
                                  __end_of_atoi 02FA                                    __end_of_ctoa 01AE  
                    __end_of_EUSART1_Initialize 0F88                                    __end_of_main 024B  
                                  __end_of_dtoa 0653                                    __end_of_puts 0F45  
                                        ??_atoi 0078                                          ??_ctoa 0020  
                                        ??_main 00CE                                          ??_dtoa 0038  
                                        ??_puts 007D                     _EUSART2_DefaultErrorHandler 0000  
                    __end_of_EUSART2_Initialize 0FAA                                          ?_fputc 0072  
                                        ?_fputs 007A                                          _ANSELA 1F38  
                                        ?_putch 0070                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                                          _RC1REG 0119  
                                        _RC2REG 0A19                                          _RC0PPS 1F20  
                                        _RC1STA 011D                                          _RC2STA 0A1D  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          u111lld 040E  
                                        u120lld 04D3                                          u200lld 052E  
                                        u113lld 0439                                          _OSCFRQ 0893  
                                        u130lld 03D2                                          u122lld 0324  
                                        u124lld 034F                                          _TX1REG 011A  
                                        _TX2REG 0A1A                                          _TX1STA 011E  
                                        _TX2STA 0A1E                                    vfprintf@cfmt 0068  
                                     ??___aodiv 0070                                       ??___aomod 0070  
                                        ___wmul 0F07                        ?_EUSART1_SetErrorHandler 0070  
                   _EUSART2_FramingErrorHandler 00DF                                          _printf 0E76  
                                        pad@buf 0026                ??_EUSART1_SetOverrunErrorHandler 0072  
               ?_EUSART1_SetOverrunErrorHandler 0070                                          ctoa@fp 0027  
                                        main@s1 00D3                                          dtoa@fp 003D  
                                        _strchr 0ED4                                          _strlen 0EBB  
                                        fputc@c 0072                                  _PMD_Initialize 0E4A  
                                        fputs@c 0023                                          fputs@i 0024  
                                        fputs@s 007A                                       ??_isdigit 0072  
                                     ??_parsing 0073                                       ??_isspace 0072  
                              __end_of_vfprintf 0045                                 ??_EUSART1_Write 0070  
                             _SYSTEM_Initialize 0004                         __end_of__initialization 07FD  
                            ?_SYSTEM_Initialize 0070                                  __pcstackCOMMON 0070  
                                  __pidataBANK1 0E0F                                    __pidataBANK4 008B  
                           ??_SYSTEM_Initialize 0072                                   parsing@Buffer 0072  
                                 __end_of_fputc 008B                                   __end_of_fputs 1000  
                                 __end_of_putch 0E3E                          __end_of_PMD_Initialize 0E52  
                          __end_of_EUSART1_Read 0E76                        ?_EUSART2_SetErrorHandler 0070  
                                       ??_fputc 0075                       __end_of_SYSTEM_Initialize 0014  
                                       ??_fputs 0020                                         ??_putch 0071  
                                    __pbssBANK1 00A0                                      __pbssBANK3 01A0  
              ??_EUSART2_SetFramingErrorHandler 0072                 ?_EUSART2_SetFramingErrorHandler 0070  
               __end_of_EUSART1_SetErrorHandler 0E1A                                      __pmaintext 01AE  
                                       ?___wmul 0070                                         ?_printf 006A  
                               ?_PMD_Initialize 0070                                         ?_strchr 0070  
                                       ?_strlen 0070          __end_of_EUSART1_SetFramingErrorHandler 0E20  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 0E1A  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _SP2BRGH 0A1C                                         _SP2BRGL 0A1B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 0182                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       ___aodiv 03E4                                         ___aomod 02FA  
                               __size_of___wmul 001F                                       ?_vfprintf 0062  
               __end_of_EUSART2_SetErrorHandler 0E2C                                         __ptext1 0ED4  
                                       __ptext2 0F26                                         __ptext3 0E76  
                                       __ptext4 0014                                         __ptext5 0653  
                                       __ptext6 04E5                                         __ptext7 00DB  
                                       __ptext8 0EBB                                         __ptext9 0FD5  
                               __size_of_printf 0015                                 __size_of_strchr 0019  
                               __size_of_strlen 0019              _EUSART2_DefaultOverrunErrorHandler 0000  
                         _OSCILLATOR_Initialize 0E52                                    __size_of_abs 001A  
                                  __size_of_pad 005F                                         _isdigit 0EA3  
                                       _parsing 0E8B                              _EUSART1_Initialize 0F66  
                      ??_PIN_MANAGER_Initialize 0070                                         _isspace 0F45  
                                       atoi@neg 0020                      __size_of_SYSTEM_Initialize 0010  
                                       clrloop0 0E3F                            end_of_initialization 07FD  
                           ?_EUSART1_Initialize 0070                                         fputc@fp 0074  
                                       init_ram 0E44                     _EUSART1_OverrunErrorHandler 00E3  
                                       fputs@fp 007C                                         initloop 0E45  
                            _EUSART2_Initialize 0F88                               __end_of_vfpfcnvrt 07D5  
                         __size_of_EUSART1_Read 0010                                      ??_vfprintf 0065  
                          ??_EUSART1_Initialize 0072                                         strchr@c 0070  
                                       strchr@s 0072                             ?_EUSART2_Initialize 0070  
                                       strlen@a 0073                                         strlen@s 0074  
                                    main@Buffer 01B4                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0070                            ??_EUSART2_Initialize 0072  
                                  _EUSART1_Read 0E66                                     vfpfcnvrt@ap 004F  
                                   vfpfcnvrt@fp 0061                                     vfpfcnvrt@ll 0056  
                                __end_of___wmul 0F26                          ?_OSCILLATOR_Initialize 0070  
                                __end_of_printf 0E8B                                  __end_of_strchr 0EED  
                                __end_of_strlen 0ED4                             start_initialization 07D5  
               __size_of_PIN_MANAGER_Initialize 002B                                     __end_of_abs 0F07  
                                   __end_of_pad 013A                                     putch@txData 0071  
                         __end_of_EUSART1_Write 0E66                __size_of_EUSART2_SetErrorHandler 0006  
        __end_of_EUSART2_SetOverrunErrorHandler 0E38         __size_of_EUSART2_SetOverrunErrorHandler 0006  
                _EUSART2_SetOverrunErrorHandler 0E32                                     vfprintf@fmt 0062  
                              ??_PMD_Initialize 0070                                        ??___wmul 0074  
                                   __pdataBANK1 00E7                                     __pdataBANK4 0220  
                                      ??_printf 00CA                                        ??_strchr 0072  
                                      ??_strlen 0072                                       ___latbits 0002  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00CA  
                                 __pcstackBANK2 0120                                   __pcstackBANK3 01B4  
                              ___aodiv@dividend 0028                                    parsing@Value 0070  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                                     __pnvBANK1 00DB                          _PIN_MANAGER_Initialize 0FAA  
                                      ?___aodiv 0020                                        ?___aomod 0020  
                              ___aodiv@quotient 0073                               __size_of_vfprintf 0031  
                                      _BAUD1CON 011F                                        _BAUD2CON 0A1F  
            _EUSART1_DefaultOverrunErrorHandler 0000                                        ?_isdigit 0070  
                          _EUSART1_ErrorHandler 00E1                                        ?_parsing 0070  
                                      ?_isspace 0070                         _EUSART1_SetErrorHandler 0E14  
                                __size_of_fputc 0046                                  __size_of_fputs 002B  
                                __size_of_putch 0006                                  ___wmul@product 0074  
       EUSART2_SetErrorHandler@interruptHandler 0070         EUSART1_SetErrorHandler@interruptHandler 0070  
                                     clear_ram0 0E3E                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                                        _RX2DTPPS 1ECD  
                                     main@F7307 0220                                       main@F7309 00E7  
                                     _vfpfcnvrt 0653                               ___wmul@multiplier 0070  
                                    vfpfcnvrt@c 005E                         _EUSART2_SetErrorHandler 0E26  
                   _EUSART2_OverrunErrorHandler 00DD                                      vfprintf@ap 0064  
                                    vfprintf@fp 0067                         ??_OSCILLATOR_Initialize 0070  
                              __size_of___aodiv 0101                                __size_of___aomod 00EA  
                   __size_of_EUSART1_Initialize 0022                                      ?_vfpfcnvrt 004E  
                               ___aodiv@divisor 0020                                 ___aodiv@counter 0071  
                     ??_EUSART1_SetErrorHandler 0072                     _EUSART1_DefaultErrorHandler 0000  
                                      _atoi$880 0024                                        _atoi$878 0022  
                                      _atoi$879 0026                            _EUSART2_ErrorHandler 00DB  
                              __size_of_isdigit 0018                                        _dtoa$842 003B  
                              __size_of_parsing 0018                                __size_of_isspace 0021  
                                      __ptext10 0EED                                        __ptext11 02FA  
                                      __ptext20 0F07                                        __ptext12 03E4  
                                      __ptext21 0E8B                                        __ptext13 013A  
                                      __ptext30 0F66                                        __ptext22 0004  
                                      __ptext14 0045                                        __ptext31 0E20  
                                      __ptext23 0E4A                                        __ptext15 0E38  
                                      __ptext32 0E1A                                        __ptext24 0FAA  
                                      __ptext16 0E5C                                        __ptext33 0E14  
                                      __ptext25 0E52                                        __ptext17 024B  
                                      __ptext34 0E66                                        __ptext26 0F88  
                                      __ptext18 0F45                                        __ptext27 0E32  
                                      __ptext19 0EA3                                        __ptext28 0E2C  
                                      __ptext29 0E26                     __size_of_EUSART2_Initialize 0022  
                                 __size_of_atoi 00AF                                   __size_of_ctoa 0074  
                                 __size_of_main 009D                                   __size_of_dtoa 016E  
            _EUSART2_DefaultFramingErrorHandler 0000                                   __size_of_puts 001F  
                              main@position_ptr 00DA                                      _RC1STAbits 011D  
                                      _puts$931 0029                                      _RC2STAbits 0A1D  
EUSART2_SetOverrunErrorHandler@interruptHandler 0070  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                                      _vfprintf 0014                                       printf@fmt 006A  
                                      main@read 01BE                     _EUSART1_FramingErrorHandler 00E5  
                                   _isspace$896 0074                                ___aomod@dividend 0028  
              ??_EUSART2_SetOverrunErrorHandler 0072                 ?_EUSART2_SetOverrunErrorHandler 0070  
                                      isdigit@c 0070                       ??_EUSART2_SetErrorHandler 0072  
                                      isspace@c 0070                         ?_PIN_MANAGER_Initialize 0070  
        __end_of_EUSART1_SetOverrunErrorHandler 0E26         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 0E20                                        printf@ap 00CD  
EUSART2_SetFramingErrorHandler@interruptHandler 0070  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                               ___aomod@divisor 0020                                     ??_vfpfcnvrt 0050  
                               ___aomod@counter 0071                                   _vfpfcnvrt$857 005F  
                        __size_of_EUSART1_Write 000A                              _eusart1RxLastError 00A9  
                                 __pstringtext1 1000                                   __pstringtext2 0000  
                                    _TX1STAbits 011E                                      _TX2STAbits 0A1E  
                                  ___aodiv@sign 0072                  __end_of_PIN_MANAGER_Initialize 0FD5  
                            _eusart2RxLastError 00A8                                    ___aomod@sign 0072  
